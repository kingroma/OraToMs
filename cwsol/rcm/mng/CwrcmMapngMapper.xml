<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.cas.cwsol.rcm.mng.serviceimpl.CwrcmMapngMapper">
		
	<!-- 상위 RCM정보 검사 -->
	<select id="list" resultType="EgovMap">
		WITH V1 (MAPNG_ID, OBJECT_ID, OBJECT_NO, OBJECT_NM, OBJECT_LEVEL, UPPER_OBJECT_ID, UPPER_MAPNG_ID, OBJECT_KND_CD_ID) AS (
			SELECT MAPNG_ID, OBJECT_ID, OBJECT_NO, OBJECT_NM, OBJECT_LEVEL, UPPER_OBJECT_ID, UPPER_MAPNG_ID, OBJECT_KND_CD_ID
           	FROM TB_CW_RCM_MAPNG
           	WHERE  
           	<choose>
				<when test=' mapngId  != null and mapngId  != "" '>	MAPNG_ID  = #{mapngId}	</when>
				<when test=' objectId != null and objectId != "" '> OBJECT_ID = #{objectId}	</when>
	            <otherwise> 1=2 </otherwise>
			</choose>     
           	  
           	UNION ALL 
           	  
            SELECT M.MAPNG_ID, M.OBJECT_ID, M.OBJECT_NO, M.OBJECT_NM, M.OBJECT_LEVEL, M.UPPER_OBJECT_ID, M.UPPER_MAPNG_ID, M.OBJECT_KND_CD_ID
           	FROM TB_CW_RCM_MAPNG M , V1 ROOT 
           	WHERE M.MAPNG_ID = ROOT.UPPER_MAPNG_ID 
        )
		SELECT 
			  M.*
			, MA.CODE_NM AS OBJECT_KND_CD_NM
			, R.RISK_ID, R.RISK_NO, R.RISK_NM, R.RISK_CN
			, R.WCGW, R.FNLTT_DSTOR_RISK, R.RISK_EVL_RESULT, R.RISK_EVL_REASON
		FROM (
        	SELECT 
              	  DISTINCT MAPNG_ID, OBJECT_ID, OBJECT_NO, OBJECT_NM, OBJECT_LEVEL, UPPER_OBJECT_ID, UPPER_MAPNG_ID, OBJECT_KND_CD_ID
        	FROM V1            
      	) M
      	LEFT OUTER JOIN TB_CO_CODE MA
       		ON CASE WHEN M.OBJECT_KND_CD_ID = 'CTW_001_002' AND #{procsStep} = 2 
                		THEN 'CTW_001_003' 
                		ELSE M.OBJECT_KND_CD_ID END = MA.CODE_ID
      	LEFT OUTER JOIN TB_CW_RCM_RISK R
            ON M.OBJECT_ID = R.RISK_ID      	
      	/** 조회 검색 key 제외 여부 */
      	<if test=' srchKeyExclAt == "Y" '>
      		WHERE
      		<choose>
				<when test=' mapngId  != null and mapngId  != "" '>	M.MAPNG_ID  != #{mapngId}	</when>
				<when test=' objectId != null and objectId != "" '> M.OBJECT_ID != #{objectId}	</when>
	            <otherwise> 1=2 </otherwise>
			</choose> 
      	</if>
   		ORDER BY M.OBJECT_ID 
	</select>
	
	<!-- RCM 리스트 : 엑셀 업로드 형태로 변경 -->
	<select id="rcmList" resultType="EgovMap">   
		SELECT 
		      A.*     
		    , R.*
		    /** 엑셀다운 RCM_FIELD_NM_EN에 맞춤 */
			, AA.CODE_NM 					AS CNRL_TY01
			, AB.CODE_NM 					AS CNRL_TY02
			, AC.CODE_NM 					AS CNRL_TY03
			, ISNULL(A.KEY_CNRL_AT, 'N') 		AS KEY_CNRL
			, ISNULL(A.MRC_CNRL_AT, 'N')		AS MRC_CNRL
			, ISNULL(A.IPE_CNRL_AT, 'N')  		AS IPE_CNRL
			, AG.CODE_NM        			AS CNRL_CYCLE
			, AD.CODE_NM        			AS TEST_CYCLE
			, AE.CODE_NM        			AS OFFICE_TY
			, ISNULL(A.DSGN_EFCT_AT, 'N') 		AS DSGN_EFCT
			, ISNULL(A.OPER_EFCT_AT, 'N')		AS OPER_EFCT
			, ISNULL(A.TEST_SANCTN_AT, 'N') 	AS TEST_SANCTN
			, ISNULL(A.ATMC_SAMPLE_AT, 'N') 	AS ATMC_SAMPLE
			, A.MRC_CTGRY_CD_ID 			AS MRC_CTGRY
			, A.IPE_CTGRY_CD_ID 	 		AS IPE_CTGRY
			, AF.CODE_NM					AS CNRL_PURPS_CHOISE
			, AH.CODE_NM 					AS DELNG_TY
			, A.RELATE_REGLTN_NM				AS CNRL_REG_NM
			, A.CNRL_PURPS_FNNR_RLABLTY			AS CNRL_PURPS_RELIABILITY_FIN
			, A.CNRL_PURPS_ASSET_PRTC			AS CNRL_PURPS_ASSET_PROTECTION
			, A.CNRL_PURPS_INSTC_PRVN			AS CNRL_PURPS_FRAUD_PREVENTION
			, AI.CODE_NM						AS CNRL_TY
			, A.TEST_RELATE_DOC					AS TEST_RELATION_DOC
			, A.TEST_MTH_QESTN					AS TEST_MTH_QUESTION
			, A.TEST_MTH_OBSERV					AS TEST_MTH_OBSERVE
			, A.TEST_MTH_VRIFY					AS TEST_MTH_VERIFICATION
			, A.TEST_MTH_ECGN					AS TEST_MTH_RE_RUN
			, A.TEST_MTH_SYS_TRACE				AS TEST_MTH_TRACKING
			, A.ACNT_CD							AS CNRL_ANT_CTGR_CODE
			, A.CNRL_CM_IEM						AS CNRL_REMARK
			, A.ASSE_C_AT						AS ASSE_C
			, A.ASSE_E_AT						AS ASSE_E
			, A.ASSE_R_AT						AS ASSE_R
			, A.ASSE_V_AT						AS ASSE_V
			, A.ASSE_P_AT						AS ASSE_P
			, A.ASSE_S_AT						AS ASSE_S
			, A.ASSE_O_AT						AS ASSE_O
			, A.ASSE_A_AT						AS ASSE_A
			, A.ASSE_PF_AT						AS ASSE_PF
			, A.RISK_RESIDUAL_LIKEHOOD			AS RISK_RESIDUAL_LIKEHOOD
			, A.RISK_RESIDUAL_IMPACT			AS RISK_RESIDUAL_IMPACT
			, A.RISK_RESIDUAL_RATIONG			AS RISK_RESIDUAL_RATING
			, A.AFTER_RISK_RESIDUAL_LIKEHOOD	AS CNRL_RESIDUAL_LIKEHOOD
			, A.AFTER_RISK_RESIDUAL_IMPACT		AS CNRL_RESIDUAL_IMPACT
			, A.AFTER_RISK_RESIDUAL_RATIONG		AS CNRL_RESIDUAL_RATING
			, A.CNRL_IMPRVM_NM					AS CNRL_IMPRVM_NM
			, A.CNRL_IMPRVM_DC					AS CNRL_IMPRVM_CN
			<choose>
		    	<when test=' procsStep != null and procsStep == 2 ' >
		     		, '' AS SUB_ID, '' AS SUB_NO, '' AS SUB_NM
		     	</when>
		   		<otherwise>
			    	, SU.OBJECT_ID AS SUB_ID, SU.OBJECT_NO AS SUB_NO, SU.OBJECT_NM AS SUB_NM
		     	</otherwise>
			</choose>
		    , MJ.OBJECT_ID AS MJR_ID
		    , MJ.OBJECT_NO AS MJR_NO
		    , MJ.OBJECT_NM AS MJR_NM   
		    , MA.OBJECT_ID AS MEGA_ID
		    , MA.OBJECT_NO AS MEGA_NO
		    , MA.OBJECT_NM AS MEGA_NM
		FROM TB_CW_RCM_CNRL A
		INNER JOIN TB_CW_RCM_MAPNG CM
		    ON A.CNRL_ID = CM.OBJECT_ID
		INNER JOIN TB_CW_RCM_MAPNG RM
		    ON CM.UPPER_MAPNG_ID = RM.MAPNG_ID
		INNER JOIN TB_CW_RCM_RISK R
		    ON RM.OBJECT_ID = R.RISK_ID
		<choose>
	    	<when test=' procsStep != null and procsStep == 2 ' >
	     		INNER JOIN TB_CW_RCM_MAPNG MJ
		   			ON RM.UPPER_MAPNG_ID = MJ.MAPNG_ID
	     	</when>
	   		<otherwise>
		    	INNER JOIN TB_CW_RCM_MAPNG SU
		    		ON RM.UPPER_MAPNG_ID = SU.MAPNG_ID
				INNER JOIN TB_CW_RCM_MAPNG MJ
		   			ON SU.UPPER_MAPNG_ID = MJ.MAPNG_ID
	     	</otherwise>
		</choose>
		INNER JOIN TB_CW_RCM_MAPNG MA
		    ON MJ.UPPER_MAPNG_ID = MA.MAPNG_ID
		LEFT OUTER JOIN TB_CO_CODE AA
            ON A.CNRL_TY01_CD_ID = AA.CODE_ID
        LEFT OUTER JOIN TB_CO_CODE AB
            ON A.CNRL_TY02_CD_ID = AB.CODE_ID 
        LEFT OUTER JOIN TB_CO_CODE AC
            ON A.CNRL_TY03_CD_ID = AC.CODE_ID
        LEFT OUTER JOIN TB_CO_CODE AD
            ON A.TEST_CYCLE_CD_ID = AD.CODE_ID
        LEFT OUTER JOIN TB_CO_CODE AE
            ON A.OFFICE_TY_CD_ID = AE.CODE_ID  
        LEFT OUTER JOIN TB_CO_CODE AF
            ON A.CNRL_PURPS_CD_ID = AF.CODE_ID
        LEFT OUTER JOIN TB_CO_CODE AG
            ON A.CNRL_CYCLE_CD_ID = AG.CODE_ID
        LEFT OUTER JOIN TB_CO_CODE AH
            ON A.DELNG_TY_CD_ID = AH.CODE_ID  
        LEFT OUTER JOIN TB_CO_CODE AI
            ON A.CNRL_TY_CD_ID = AI.CODE_ID  
    	ORDER BY A.CNRL_NO ASC    
	</select>
		
	<!-- 하위 RCM 리스트 -->
	<select id="lwprtRcmList" resultType="EgovMap">   
	   SELECT 
            A.MAPNG_ID
          , A.OBJECT_ID
          , A.OBJECT_NO
          , A.OBJECT_NM
          , (A.OBJECT_NO+' '+ A.OBJECT_NM) AS OBJECT_STR
          , A.OBJECT_LEVEL
          , A.OBJECT_KND_CD_ID
          , A.UPPER_OBJECT_ID
          , A.UPPER_MAPNG_ID
       FROM TB_CW_RCM_MAPNG A
       <trim prefix="WHERE" prefixOverrides="AND|OR ">
			<choose>
				<when test=' srchUpperObjectId != null and srchUpperObjectId != "" '>	AND	A.UPPER_OBJECT_ID = #{srchUpperObjectId}	</when>
	            <otherwise>	AND A.UPPER_OBJECT_ID IS NULL	</otherwise>
			</choose>
		</trim>
		ORDER BY A.MAPNG_ID ASC	
	</select>
	
	
	<insert id="insert">
		<![CDATA[
		BEGIN
			INSERT INTO TB_CW_RCM_MAPNG (
				MAPNG_ID, OBJECT_ID, OBJECT_NO, OBJECT_NM, OBJECT_LEVEL, OBJECT_KND_CD_ID, UPPER_OBJECT_ID, UPPER_MAPNG_ID, CMPNY_CD_ID, RGS_DT, RGS_USER_ID, UPD_DT, UPD_USER_ID
			) VALUES (
				#{mapngId}, #{objectId}, #{objectNo}, #{objectNm}, #{objectLevel}, #{objectKndCdId}, #{upperObjectId}, #{upperMapngId}, #{cmpnyCdId}, GETDATE(), #{suserId}, GETDATE(), #{suserId}
			);
			
			/** 맵핑 이력 종료 */
	    	UPDATE TB_CW_RCM_MAPNG_HIST
			   SET ENDTMSTMP = #{endtmstmp}
			     , UPD_DT = GETDATE()
			     , UPD_USER_ID = #{suserId} 
			 WHERE OBJECT_ID = #{objectId}
			   AND ENDTMSTMP = '99991231235959999999';
			
			INSERT INTO TB_CW_RCM_MAPNG_HIST (
					  MAPNG_ID, BGNTMSTMP, ENDTMSTMP, OBJECT_ID, OBJECT_NO, OBJECT_NM, OBJECT_LEVEL, OBJECT_KND_CD_ID, UPPER_OBJECT_ID, UPPER_MAPNG_ID, CMPNY_CD_ID
					, RGS_DT, RGS_USER_ID, UPD_DT, UPD_USER_ID, RM
			) VALUES (
					  #{mapngId}, #{bgntmstmp}, '99991231235959999999', #{objectId}, #{objectNo}, #{objectNm}, #{objectLevel}, #{objectKndCdId}, #{upperObjectId}, #{upperMapngId}, #{cmpnyCdId}
					, GETDATE(), #{suserId}, GETDATE(), #{suserId}, 'RCM 매핑 등록'
			);
		END; 	
		]]>
	</insert>

	<update id="update">
		<![CDATA[
		BEGIN
			UPDATE TB_CW_RCM_MAPNG SET 
				  OBJECT_ID        = #{objectId}
				, OBJECT_NO        = #{objectNo}
				, OBJECT_NM        = #{objectNm}
				, OBJECT_LEVEL     = #{objectLevel}
				, OBJECT_KND_CD_ID = #{objectKndCdId}
				, UPPER_OBJECT_ID  = #{upperObjectId}
				, UPPER_MAPNG_ID   = #{upperMapngId}
				, UPD_DT 	 	= GETDATE()
				, UPD_USER_ID	= #{suserId}   
			WHERE MAPNG_ID      = #{mapngId};
		
		/** 맵핑 이력 종료/시작 */    
	    	UPDATE TB_CW_RCM_MAPNG_HIST
			   SET ENDTMSTMP = #{endtmstmp}
			     , UPD_DT = GETDATE()
			     , UPD_USER_ID = #{suserId} 
			 WHERE MAPNG_ID = #{mapngId}
			   AND ENDTMSTMP = '99991231235959999999';
	    
			INSERT INTO TB_CW_RCM_MAPNG_HIST (
					  MAPNG_ID, BGNTMSTMP, ENDTMSTMP, OBJECT_ID, OBJECT_NO, OBJECT_NM, OBJECT_LEVEL, OBJECT_KND_CD_ID, UPPER_OBJECT_ID, UPPER_MAPNG_ID, CMPNY_CD_ID
					, RGS_DT, RGS_USER_ID, UPD_DT, UPD_USER_ID, RM
				) VALUES (
					  #{mapngId}, #{bgntmstmp}, '99991231235959999999', #{objectId}, #{objectNo}, #{objectNm}, #{objectLevel}, #{objectKndCdId}, #{upperObjectId}, #{upperMapngId}, #{cmpnyCdId}
					, GETDATE(), #{suserId}, GETDATE(), #{suserId}, 'RCM 매핑 수정'
				);
		END; 	
		]]>
	</update>

	<delete id="delete">
		<![CDATA[
			BEGIN
				DELETE FROM TB_CW_RCM_MAPNG
				WHERE OBJECT_ID = #{objectId};
				    
				/** 맵핑 이력 종료 */
		    	UPDATE TB_CW_RCM_MAPNG_HIST
				   SET ENDTMSTMP = #{endtmstmp}
				     , UPD_DT = GETDATE()
				     , UPD_USER_ID = #{suserId} 
				 WHERE OBJECT_ID = #{objectId}
				   AND ENDTMSTMP = '99991231235959999999';
		END; 	
		]]>
	</delete>

	<delete id="deleteAll">
		<![CDATA[
		BEGIN
			/** 매핑 테이블 삭제 */
			DELETE FROM TB_CW_RCM_MAPNG;

			/** 매핑 이력 종료 */
			UPDATE TB_CW_RCM_MAPNG_HIST
		       SET ENDTMSTMP = #{endtmstmp}
		         , UPD_DT = GETDATE()
		         , UPD_USER_ID = #{suserId} 
		 	 WHERE ENDTMSTMP = '99991231235959999999';
		END;
		]]>
	</delete>
			
</mapper>
