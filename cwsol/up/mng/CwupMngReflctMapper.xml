<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.cas.cwsol.up.mng.serviceimpl.CwupMngReflctMapper">
	<!-- RCM DOC MAP  -->   
    <resultMap id="procsUpdtMap" type="CwupMngVO" >
        <result property="unityId"              column="UNITY_ID"           /> 
        <collection property="typeList"         column="{unityId=UNITY_ID}" select="selectProcsUpdtList" />
    </resultMap>
    
	<!-- CTW 관리부서의 미비점 관리 메뉴 클릭시 미비점개선 목록 조회 쿼리 -->
	<select id="list" resultType="EgovMap">
		SELECT 
			  UE.EVL_ID
		  	, UE.OBJECT_ID
			, UE.STTUS_CD_ID
			, C1.CODE_NM AS STTUS_CD_NM
			, UP.UPRPD_CL_CD_ID
			, C2.CODE_NM AS UPRPD_CL_CD_NM
			, UP.UPRPD_TY_CD_ID
			, C3.CODE_NM AS UPRPD_TY_CD_NM
			, UE.EXC_COMPT_CD_ID
			, C4.CODE_NM AS EXC_COMPT_CD_NM
			, CASE WHEN (E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') AND CRM.OBJECT_ID IS NOT NULL THEN 'Y'
				   WHEN (E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') AND CEM.OBJECT_ID IS NOT NULL THEN 'Y'
				   ELSE 'N' END AS NOW_RCM_AT
			, CASE WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_002' THEN CONVERT ( VARCHAR , PU.REFLCT_DT , 23 ) + ' ' + CONVERT ( VARCHAR , PU.REFLCT_DT , 8)
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') THEN CONVERT ( VARCHAR , CU.REFLCT_DT , 23 ) + ' ' + CONVERT ( VARCHAR , CU.REFLCT_DT , 8)
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') THEN CONVERT ( VARCHAR , ECU.REFLCT_DT , 23 ) + ' ' + CONVERT ( VARCHAR , ECU.REFLCT_DT , 8)
			       ELSE '' END AS REFLCT_DT
			, CASE WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_002' THEN PU.REFLCT_AT
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') THEN CU.REFLCT_AT
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') THEN ECU.REFLCT_AT
			       ELSE '' END AS REFLCT_AT
			, CASE WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_002' AND (E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') AND PU.REFLCT_BGNTMSTMP != PH.BGNTMSTMP THEN 'N'
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_002' AND (E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') AND PU.REFLCT_BGNTMSTMP != EH.BGNTMSTMP THEN 'N'
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') AND CU.REFLCT_BGNTMSTMP != CH.BGNTMSTMP AND CU.CNRL_ID IS NOT NULL THEN 'N'
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') AND ECU.REFLCT_BGNTMSTMP != ECH.BGNTMSTMP AND ECU.CNRL_ID IS NOT NULL THEN 'N'
			       ELSE 'Y' END AS REFLCT_BGNTMSTMP_AT --반영시작일자 비교 여부
			, CASE WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_002' THEN S1.SANCTN_SJ
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') THEN S2.SANCTN_SJ
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') THEN S3.SANCTN_SJ
			       ELSE '' END AS SANCTN_SJ
			, CASE WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_002' THEN PU.SANCTN_ID
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') THEN CU.SANCTN_ID
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') THEN ECU.SANCTN_ID
			       ELSE '' END AS REFLCT_SANCTN_ID
			, CASE WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_002' THEN PU.STTUS_CD_ID
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') THEN CU.STTUS_CD_ID
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') THEN ECU.STTUS_CD_ID
			       ELSE '' END AS REFLCT_STTUS_CD_ID
			, CASE WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_002' THEN C5.CODE_NM
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') THEN C6.CODE_NM
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') THEN C7.CODE_NM
			       ELSE '' END AS REFLCT_STTUS_CD_NM
			, M.OBJECT_NO
			, M.OBJECT_NM
		FROM TB_CW_UPRPD_EXC UE
		  	LEFT OUTER JOIN TB_CW_EVL E
		    	ON 	UE.EVL_ID = E.EVL_ID
		  	LEFT OUTER JOIN TB_CW_UPRPD UP
		    	ON 	UE.EVL_ID = UP.EVL_ID
		    	AND UE.OBJECT_ID = UP.OBJECT_ID
			LEFT OUTER JOIN TB_CW_EVL_EXC EE
				ON	UP.EVL_ID 			= EE.EVL_ID
				AND UP.OBJECT_ID 		= EE.OBJECT_ID
				AND UP.CHRG_USER_ID 	= EE.CHRG_USER_ID 
				AND UP.CHRG_USER_TY_CD_ID = EE.CHRG_USER_TY_CD_ID
		  	LEFT OUTER JOIN TB_CW_EVL_RCM_MAPNG M
		    	ON 	UE.EVL_ID = M.EVL_ID
		    	AND UE.OBJECT_ID = M.OBJECT_ID
		  	LEFT OUTER JOIN TB_CW_RCM_MAPNG CRM
		    	ON 	UE.OBJECT_ID = CRM.OBJECT_ID
		  	LEFT OUTER JOIN TB_CW_ELC_RCM_MAPNG CEM
		    	ON 	UE.OBJECT_ID = CEM.OBJECT_ID
		  	LEFT OUTER JOIN TB_CW_EVL_RCM_DOC_UPDT PU 
		   		ON 	UE.EVL_ID = PU.EVL_ID
		    	AND UE.OBJECT_ID = PU.PROCS_ID
		  	LEFT OUTER JOIN TB_CW_UPRPD_CNRL_UPDT CU 
		    	ON 	UE.EVL_ID = CU.EVL_ID
		    	AND UE.OBJECT_ID = CU.CNRL_ID
		  	LEFT OUTER JOIN TB_CW_UPRPD_ELC_CNRL_UPDT ECU 
		    	ON 	UE.EVL_ID = ECU.EVL_ID
		    	AND UE.OBJECT_ID = ECU.CNRL_ID
		  	LEFT OUTER JOIN TB_CW_RCM_DOC_HIST PH
		    	ON 	UE.OBJECT_ID = PH.PROCS_ID
		    	AND PH.ENDTMSTMP = '99991231235959999999'
		  	LEFT OUTER JOIN TB_CW_ELC_RCM_DOC_HIST EH
		    	ON 	UE.OBJECT_ID = EH.PROCS_ID
		    	AND EH.ENDTMSTMP = '99991231235959999999'
		  	LEFT OUTER JOIN TB_CW_RCM_CNRL_HIST CH
		    	ON 	UE.OBJECT_ID = CH.CNRL_ID
		    	AND CH.ENDTMSTMP = '99991231235959999999'
		  	LEFT OUTER JOIN TB_CW_ELC_RCM_CNRL_HIST ECH
		    	ON 	UE.OBJECT_ID = ECH.CNRL_ID
		    	AND ECH.ENDTMSTMP = '99991231235959999999'
		  	LEFT OUTER JOIN TB_CO_CODE C1
		    	ON 	UE.STTUS_CD_ID = C1.CODE_ID
		  	LEFT OUTER JOIN TB_CO_CODE C2
		    	ON 	UP.UPRPD_CL_CD_ID = C2.CODE_ID
		  	LEFT OUTER JOIN TB_CO_CODE C3
		    	ON 	UP.UPRPD_TY_CD_ID = C3.CODE_ID
		  	LEFT OUTER JOIN TB_CO_CODE C4
		    	ON 	UE.EXC_COMPT_CD_ID = C4.CODE_ID
		  	LEFT OUTER JOIN TB_CO_CODE C5
		    	ON 	PU.STTUS_CD_ID = C5.CODE_ID
		  	LEFT OUTER JOIN TB_CO_CODE C6
		    	ON 	CU.STTUS_CD_ID = C6.CODE_ID
		  	LEFT OUTER JOIN TB_CO_CODE C7
		    	ON 	ECU.STTUS_CD_ID = C7.CODE_ID
		    LEFT OUTER JOIN TB_CO_SANCTN S1
		    	ON 	PU.SANCTN_ID = S1.SANCTN_ID
		    LEFT OUTER JOIN TB_CO_SANCTN S2
		    	ON 	CU.SANCTN_ID = S2.SANCTN_ID
		    LEFT OUTER JOIN TB_CO_SANCTN S3
		    	ON 	ECU.SANCTN_ID = S3.SANCTN_ID
		WHERE E.EVL_ID = #{evlId}
			AND E.STTUS_CD_ID 		= 'CTW_101_006'
		  	AND UP.UPRPD_TY_CD_ID IN ('CTW_204_001', 'CTW_204_002')
		  	AND UE.STTUS_CD_ID 		= 'COM_023_007' 
		  	AND UE.EXC_COMPT_CD_ID 	= 'CTW_207_002'
            AND EE.STTUS_CD_ID IN ('CTW_106_003', 'CTW_106_005', 'CTW_106_007')
      	<if test='srchUprpdClCdId != null and srchUprpdClCdId != "" '>
      		AND UP.UPRPD_CL_CD_ID = #{srchUprpdClCdId} 
      	</if>          
      	<if test='srchExcComptCdId != null and srchExcComptCdId != "" '>
          	AND UE.EXC_COMPT_CD_ID = #{srchExcComptCdId} 
      	</if> 
      	<if test='srchReflctAt != null and srchReflctAt != "" '>
          	AND (	PU.REFLCT_AT = #{srchReflctAt}	
          			OR CU.REFLCT_AT = #{srchReflctAt}
          			OR ECU.REFLCT_AT = #{srchReflctAt}	)
      	</if> 
      	<if test='psrchWrd != null and psrchWrd != "" '>
          	AND M.OBJECT_NM LIKE '%' + #{psrchWrd} + '%' 
      	</if>
		ORDER BY PU.SANCTN_ID, CU.SANCTN_ID, ECU.SANCTN_ID, M.OBJECT_ID
	</select>

	<!-- 평가 종류 코드 확인-->
	<select id="view" resultType="CwupMngVO">
		SELECT  
			  E.EVL_ID
			, E.EVL_KND_CD_ID
			, E.EVL_SJ
			, M.OBJECT_ID
			, M.OBJECT_KND_CD_ID
		FROM TB_CW_EVL E
			LEFT OUTER JOIN TB_CW_EVL_RCM_MAPNG M
				ON E.EVL_ID = M.EVL_ID
		WHERE  
			E.EVL_ID = #{evlId}
			AND M.OBJECT_ID = #{objectId}
	</select>
	
	<!-- 결재 정보 -->
	<select id="sanctnView" resultType="CwupMngVO">
		SELECT  
			  	SANCTN_ID	AS REFLCT_SANCTN_ID
			  , SANCTN_SJ
			  , SANCTN_STTUS_CD_ID  AS REFLCT_STTUS_CD_ID
		FROM 	TB_CO_SANCTN
		WHERE	SANCTN_ID = #{reflctSanctnId}
	</select>
  	
  	<select id="sanctnList" resultType="EgovMap">
  		SELECT  
			  UE.EVL_ID
		  	, UE.OBJECT_ID
			, UE.STTUS_CD_ID
			, C1.CODE_NM AS STTUS_CD_NM
			, UP.UPRPD_CL_CD_ID
			, C2.CODE_NM AS UPRPD_CL_CD_NM
			, UP.UPRPD_TY_CD_ID
			, C3.CODE_NM AS UPRPD_TY_CD_NM
			, UE.EXC_COMPT_CD_ID
			, C4.CODE_NM AS EXC_COMPT_CD_NM
			, CASE WHEN (E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') AND CRM.OBJECT_ID IS NOT NULL THEN 'Y'
				   WHEN (E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') AND CEM.OBJECT_ID IS NOT NULL THEN 'Y'
				   ELSE 'N' END AS NOW_RCM_AT
			, CASE WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_002' THEN CONVERT ( VARCHAR , PU.REFLCT_DT , 23 ) + ' ' + CONVERT ( VARCHAR , PU.REFLCT_DT , 8)
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') THEN CONVERT ( VARCHAR , CU.REFLCT_DT , 23 ) + ' ' + CONVERT ( VARCHAR , CU.REFLCT_DT , 8)
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') THEN CONVERT ( VARCHAR , ECU.REFLCT_DT , 23 ) + ' ' + CONVERT ( VARCHAR , ECU.REFLCT_DT , 8)
			       ELSE '' END AS REFLCT_DT
			, CASE WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_002' THEN PU.REFLCT_AT
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') THEN CU.REFLCT_AT
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') THEN ECU.REFLCT_AT
			       ELSE '' END AS REFLCT_AT
			, CASE WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_002' AND (E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') AND PU.REFLCT_BGNTMSTMP != PH.BGNTMSTMP THEN 'N'
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_002' AND (E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') AND PU.REFLCT_BGNTMSTMP != EH.BGNTMSTMP THEN 'N'
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') AND CU.REFLCT_BGNTMSTMP != CH.BGNTMSTMP AND CU.CNRL_ID IS NOT NULL THEN 'N'
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') AND ECU.REFLCT_BGNTMSTMP != ECH.BGNTMSTMP AND ECU.CNRL_ID IS NOT NULL THEN 'N'
			       ELSE 'Y' END AS REFLCT_BGNTMSTMP_AT --반영시작일자 비교 여부
			, CASE WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_002' THEN S1.SANCTN_SJ
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') THEN S2.SANCTN_SJ
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') THEN S3.SANCTN_SJ
			       ELSE '' END AS SANCTN_SJ
			, CASE WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_002' THEN PU.SANCTN_ID
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') THEN CU.SANCTN_ID
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') THEN ECU.SANCTN_ID
			       ELSE '' END AS REFLCT_SANCTN_ID
			, CASE WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_002' THEN PU.STTUS_CD_ID
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') THEN CU.STTUS_CD_ID
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') THEN ECU.STTUS_CD_ID
			       ELSE '' END AS REFLCT_STTUS_CD_ID
			, CASE WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_002' THEN C5.CODE_NM
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') THEN C6.CODE_NM
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') THEN C7.CODE_NM
			       ELSE '' END AS REFLCT_STTUS_CD_NM
			, M.OBJECT_NO
			, M.OBJECT_NM
		
		FROM TB_CW_UPRPD_EXC UE
		  	LEFT OUTER JOIN TB_CW_EVL E
		    	ON 	UE.EVL_ID = E.EVL_ID
		  	LEFT OUTER JOIN TB_CW_UPRPD UP
		    	ON 	UE.EVL_ID = UP.EVL_ID
		    	AND UE.OBJECT_ID = UP.OBJECT_ID
		  	LEFT OUTER JOIN TB_CW_EVL_RCM_MAPNG M
		    	ON 	UE.EVL_ID = M.EVL_ID
		    	AND UE.OBJECT_ID = M.OBJECT_ID
		  	LEFT OUTER JOIN TB_CW_EVL_RCM_DOC_UPDT PU 
		   		ON 	UE.EVL_ID = PU.EVL_ID
		    	AND UE.OBJECT_ID = PU.PROCS_ID
		  	LEFT OUTER JOIN TB_CW_UPRPD_CNRL_UPDT CU 
		    	ON 	UE.EVL_ID = CU.EVL_ID
		    	AND UE.OBJECT_ID = CU.CNRL_ID
		  	LEFT OUTER JOIN TB_CW_UPRPD_ELC_CNRL_UPDT ECU 
		    	ON 	UE.EVL_ID = ECU.EVL_ID
		    	AND UE.OBJECT_ID = ECU.CNRL_ID
		  	LEFT OUTER JOIN TB_CW_RCM_DOC_HIST PH
		    	ON 	UE.OBJECT_ID = PH.PROCS_ID
		    	AND PH.ENDTMSTMP = '99991231235959999999'
		  	LEFT OUTER JOIN TB_CW_ELC_RCM_DOC_HIST EH
		    	ON 	UE.OBJECT_ID = EH.PROCS_ID
		    	AND EH.ENDTMSTMP = '99991231235959999999'
		  	LEFT OUTER JOIN TB_CW_RCM_CNRL_HIST CH
		    	ON 	UE.OBJECT_ID = CH.CNRL_ID
		    	AND CH.ENDTMSTMP = '99991231235959999999'
		  	LEFT OUTER JOIN TB_CW_ELC_RCM_CNRL_HIST ECH
		    	ON 	UE.OBJECT_ID = ECH.CNRL_ID
		    	AND ECH.ENDTMSTMP = '99991231235959999999'
		  	LEFT OUTER JOIN TB_CO_CODE C1
		    	ON 	UE.STTUS_CD_ID = C1.CODE_ID
		  	LEFT OUTER JOIN TB_CO_CODE C2
		    	ON 	UP.UPRPD_CL_CD_ID = C2.CODE_ID
		  	LEFT OUTER JOIN TB_CO_CODE C3
		    	ON 	UP.UPRPD_TY_CD_ID = C3.CODE_ID
		  	LEFT OUTER JOIN TB_CO_CODE C4
		    	ON 	UE.EXC_COMPT_CD_ID = C4.CODE_ID
		  	LEFT OUTER JOIN TB_CO_CODE C5
		    	ON 	PU.STTUS_CD_ID = C5.CODE_ID
		  	LEFT OUTER JOIN TB_CO_CODE C6
		    	ON 	CU.STTUS_CD_ID = C6.CODE_ID
		  	LEFT OUTER JOIN TB_CO_CODE C7
		    	ON 	ECU.STTUS_CD_ID = C7.CODE_ID
		    LEFT OUTER JOIN TB_CO_SANCTN S1
		    	ON 	PU.SANCTN_ID = S1.SANCTN_ID
		    LEFT OUTER JOIN TB_CO_SANCTN S2
		    	ON 	CU.SANCTN_ID = S2.SANCTN_ID
		    LEFT OUTER JOIN TB_CO_SANCTN S3
		    	ON 	ECU.SANCTN_ID = S3.SANCTN_ID
		WHERE E.EVL_ID = #{evlId}
			AND E.STTUS_CD_ID 		= 'CTW_101_006'
		  	AND UP.UPRPD_TY_CD_ID IN ('CTW_204_001', 'CTW_204_002')
		  	AND UE.STTUS_CD_ID 		= 'COM_023_007' 
		  	AND UE.EXC_COMPT_CD_ID 	= 'CTW_207_002'
			<choose>
				<when test=" objectIdArr != null and objectIdArr.length > 0 "> 
					AND ((PU.SANCTN_ID = #{reflctSanctnId} OR CU.SANCTN_ID = #{reflctSanctnId} OR ECU.SANCTN_ID = #{reflctSanctnId}) 
							OR UE.OBJECT_ID IN 
							<foreach collection="objectIdArr" item="item" open="(" close=")" separator=", ">
								#{item}
							</foreach>
							)
				</when>
				<otherwise>
					AND (PU.SANCTN_ID = #{reflctSanctnId} OR CU.SANCTN_ID = #{reflctSanctnId} OR ECU.SANCTN_ID = #{reflctSanctnId})
				</otherwise>
			</choose>
  	</select>
  	
  	
  	<select id="sanctnListForSanctn" resultType="egovframework.cas.cwsol.up.mng.service.CwupMngVO">
  		SELECT  
			  UE.EVL_ID
		  	, UE.OBJECT_ID
			, UE.STTUS_CD_ID
			, C1.CODE_NM AS STTUS_CD_NM
			, UP.UPRPD_CL_CD_ID
			, C2.CODE_NM AS UPRPD_CL_CD_NM
			, UP.UPRPD_TY_CD_ID
			, C3.CODE_NM AS UPRPD_TY_CD_NM
			, UE.EXC_COMPT_CD_ID
			, C4.CODE_NM AS EXC_COMPT_CD_NM
			, CASE WHEN (E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') AND CRM.OBJECT_ID IS NOT NULL THEN 'Y'
				   WHEN (E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') AND CEM.OBJECT_ID IS NOT NULL THEN 'Y'
				   ELSE 'N' END AS NOW_RCM_AT
			, CASE WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_002' THEN CONVERT ( VARCHAR , PU.REFLCT_DT , 23 ) + ' ' + CONVERT ( VARCHAR , PU.REFLCT_DT , 8)
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') THEN CONVERT ( VARCHAR , CU.REFLCT_DT , 23 ) + ' ' + CONVERT ( VARCHAR , CU.REFLCT_DT , 8)
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') THEN CONVERT ( VARCHAR , ECU.REFLCT_DT , 23 ) + ' ' + CONVERT ( VARCHAR , ECU.REFLCT_DT , 8)
			       ELSE '' END AS REFLCT_DT
			, CASE WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_002' THEN PU.REFLCT_AT
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') THEN CU.REFLCT_AT
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') THEN ECU.REFLCT_AT
			       ELSE '' END AS REFLCT_AT
			, CASE WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_002' AND (E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') AND PU.REFLCT_BGNTMSTMP != PH.BGNTMSTMP THEN 'N'
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_002' AND (E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') AND PU.REFLCT_BGNTMSTMP != EH.BGNTMSTMP THEN 'N'
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') AND CU.REFLCT_BGNTMSTMP != CH.BGNTMSTMP AND CU.CNRL_ID IS NOT NULL THEN 'N'
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') AND ECU.REFLCT_BGNTMSTMP != ECH.BGNTMSTMP AND ECU.CNRL_ID IS NOT NULL THEN 'N'
			       ELSE 'Y' END AS REFLCT_BGNTMSTMP_AT --반영시작일자 비교 여부
			, CASE WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_002' THEN S1.SANCTN_SJ
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') THEN S2.SANCTN_SJ
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') THEN S3.SANCTN_SJ
			       ELSE '' END AS SANCTN_SJ
			, CASE WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_002' THEN PU.SANCTN_ID
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') THEN CU.SANCTN_ID
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') THEN ECU.SANCTN_ID
			       ELSE '' END AS REFLCT_SANCTN_ID
			, CASE WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_002' THEN PU.STTUS_CD_ID
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') THEN CU.STTUS_CD_ID
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') THEN ECU.STTUS_CD_ID
			       ELSE '' END AS REFLCT_STTUS_CD_ID
			, CASE WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_002' THEN C5.CODE_NM
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') THEN C6.CODE_NM
			       WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_001' AND (E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') THEN C7.CODE_NM
			       ELSE '' END AS REFLCT_STTUS_CD_NM
			, M.OBJECT_NO
			, M.OBJECT_NM
		
		FROM TB_CW_UPRPD_EXC UE
		  	LEFT OUTER JOIN TB_CW_EVL E
		    	ON 	UE.EVL_ID = E.EVL_ID
		  	LEFT OUTER JOIN TB_CW_UPRPD UP
		    	ON 	UE.EVL_ID = UP.EVL_ID
		    	AND UE.OBJECT_ID = UP.OBJECT_ID
		  	LEFT OUTER JOIN TB_CW_EVL_RCM_MAPNG M
		    	ON 	UE.EVL_ID = M.EVL_ID
		    	AND UE.OBJECT_ID = M.OBJECT_ID
		  	LEFT OUTER JOIN TB_CW_EVL_RCM_DOC_UPDT PU 
		   		ON 	UE.EVL_ID = PU.EVL_ID
		    	AND UE.OBJECT_ID = PU.PROCS_ID
		  	LEFT OUTER JOIN TB_CW_UPRPD_CNRL_UPDT CU 
		    	ON 	UE.EVL_ID = CU.EVL_ID
		    	AND UE.OBJECT_ID = CU.CNRL_ID
		  	LEFT OUTER JOIN TB_CW_UPRPD_ELC_CNRL_UPDT ECU 
		    	ON 	UE.EVL_ID = ECU.EVL_ID
		    	AND UE.OBJECT_ID = ECU.CNRL_ID
		  	LEFT OUTER JOIN TB_CW_RCM_DOC_HIST PH
		    	ON 	UE.OBJECT_ID = PH.PROCS_ID
		    	AND PH.ENDTMSTMP = '99991231235959999999'
		  	LEFT OUTER JOIN TB_CW_ELC_RCM_DOC_HIST EH
		    	ON 	UE.OBJECT_ID = EH.PROCS_ID
		    	AND EH.ENDTMSTMP = '99991231235959999999'
		  	LEFT OUTER JOIN TB_CW_RCM_CNRL_HIST CH
		    	ON 	UE.OBJECT_ID = CH.CNRL_ID
		    	AND CH.ENDTMSTMP = '99991231235959999999'
		  	LEFT OUTER JOIN TB_CW_ELC_RCM_CNRL_HIST ECH
		    	ON 	UE.OBJECT_ID = ECH.CNRL_ID
		    	AND ECH.ENDTMSTMP = '99991231235959999999'
		  	LEFT OUTER JOIN TB_CO_CODE C1
		    	ON 	UE.STTUS_CD_ID = C1.CODE_ID
		  	LEFT OUTER JOIN TB_CO_CODE C2
		    	ON 	UP.UPRPD_CL_CD_ID = C2.CODE_ID
		  	LEFT OUTER JOIN TB_CO_CODE C3
		    	ON 	UP.UPRPD_TY_CD_ID = C3.CODE_ID
		  	LEFT OUTER JOIN TB_CO_CODE C4
		    	ON 	UE.EXC_COMPT_CD_ID = C4.CODE_ID
		  	LEFT OUTER JOIN TB_CO_CODE C5
		    	ON 	PU.STTUS_CD_ID = C5.CODE_ID
		  	LEFT OUTER JOIN TB_CO_CODE C6
		    	ON 	CU.STTUS_CD_ID = C6.CODE_ID
		  	LEFT OUTER JOIN TB_CO_CODE C7
		    	ON 	ECU.STTUS_CD_ID = C7.CODE_ID
		    LEFT OUTER JOIN TB_CO_SANCTN S1
		    	ON 	PU.SANCTN_ID = S1.SANCTN_ID
		    LEFT OUTER JOIN TB_CO_SANCTN S2
		    	ON 	CU.SANCTN_ID = S2.SANCTN_ID
		    LEFT OUTER JOIN TB_CO_SANCTN S3
		    	ON 	ECU.SANCTN_ID = S3.SANCTN_ID
		WHERE E.EVL_ID = #{evlId}
			AND E.STTUS_CD_ID 		= 'CTW_101_006'
		  	AND UP.UPRPD_TY_CD_ID IN ('CTW_204_001', 'CTW_204_002')
		  	AND UE.STTUS_CD_ID 		= 'COM_023_007' 
		  	AND UE.EXC_COMPT_CD_ID 	= 'CTW_207_002'
			<choose>
				<when test=" objectIdArr != null and objectIdArr.length > 0 "> 
					AND ((PU.SANCTN_ID = #{reflctSanctnId} OR CU.SANCTN_ID = #{reflctSanctnId} OR ECU.SANCTN_ID = #{reflctSanctnId}) 
							OR UE.OBJECT_ID IN 
							<foreach collection="objectIdArr" item="item" open="(" close=")" separator=", ">
								#{item}
							</foreach>
							)
				</when>
				<otherwise>
					AND (PU.SANCTN_ID = #{reflctSanctnId} OR CU.SANCTN_ID = #{reflctSanctnId} OR ECU.SANCTN_ID = #{reflctSanctnId})
				</otherwise>
			</choose>
  	</select>
  	
  	<update id="save">
	    UPDATE TB_CW_UPRPD_CNRL_UPDT
		SET 
			  SANCTN_ID 	= #{reflctSanctnId}
			, STTUS_CD_ID 	= #{reflctSttusCdId}
	    WHERE	EVL_ID 		= #{evlId}
			AND CNRL_ID 	= #{objectId}
	</update>
  	
  	<update id="docSave">
	    UPDATE TB_CW_EVL_RCM_DOC_UPDT
		SET 
			  SANCTN_ID 	= #{reflctSanctnId}
			, STTUS_CD_ID 	= #{reflctSttusCdId}
	    WHERE	EVL_ID 		= #{evlId}
			AND PROCS_ID 	= #{objectId}
	</update>
	
  	<update id="elcSave">
	    UPDATE TB_CW_UPRPD_ELC_CNRL_UPDT
		SET 
			  SANCTN_ID = #{reflctSanctnId}
			, STTUS_CD_ID = #{reflctSttusCdId}
	    WHERE	EVL_ID = #{evlId}
			AND CNRL_ID = #{objectId}
	</update>
	
 	<!-- 1. PLC/DOC 반영취소 가능 여부 확인 -->
	<select id="reflctPosblCeck" resultType="String">
		SELECT REFLCT_CECK
		FROM (	SELECT 	CASE WHEN U.REFLCT_BGNTMSTMP = H.BGNTMSTMP THEN 'Y'
					  	ELSE 'N' END REFLCT_CECK 
				FROM TB_CW_UPRPD_CNRL_UPDT U
				LEFT OUTER JOIN TB_CW_RCM_CNRL_HIST H
					ON U.CNRL_ID = H.CNRL_ID
					AND H.ENDTMSTMP = '99991231235959999999'
				WHERE 
					U.EVL_ID = #{evlId}
					AND U.CNRL_ID = #{objectId}
					
				UNION
				SELECT 	CASE WHEN U.REFLCT_BGNTMSTMP = H.BGNTMSTMP THEN 'Y'
					  	ELSE 'N' END REFLCT_CECK 
				FROM TB_CW_EVL_RCM_DOC_UPDT U
				LEFT OUTER JOIN TB_CW_RCM_DOC_HIST H
					ON U.PROCS_ID = H.PROCS_ID
					AND H.ENDTMSTMP = '99991231235959999999'
				WHERE 
					U.EVL_ID = #{evlId}
					AND U.PROCS_ID = #{objectId}
		) 
		WHERE REFLCT_CECK IS NOT NULL
	</select>
	
  	<!-- 2. PLC/DOC 최신이력 이전 데이터 기준일자 조회 -->
	<select id="reflctBgntmstmp" resultType="String">
		SELECT REFLCT_BGNTMSTMP
		FROM (	SELECT  
					  MAX(BGNTMSTMP) AS REFLCT_BGNTMSTMP 
				FROM TB_CW_RCM_CNRL_HIST A
				WHERE
					A.CNRL_ID = #{cnrlId}
					AND A.ENDTMSTMP != '99991231235959999999'
					
				UNION
				SELECT  
					  MAX(BGNTMSTMP) AS REFLCT_BGNTMSTMP 
				FROM TB_CW_RCM_DOC_HIST A
				WHERE  
					A.PROCS_ID = #{objectId}
					AND A.ENDTMSTMP != '99991231235959999999'
		) 
		WHERE REFLCT_BGNTMSTMP IS NOT NULL
	</select>
  		
<!-- PLC 통제 반영 버튼 part 시작 -->
  	<!-- 1. PLC 통제 이력 테이블의 종료 타임스탬프 업데이트 -->
  	<update id="rcmCnrlHistEndstampUpdate">
	    UPDATE TB_CW_RCM_CNRL_HIST
		SET 
			ENDTMSTMP = #{endtmstmp}
			,UPD_USER_ID = #{suserId}
			,UPD_DT = GETDATE()
	    WHERE CNRL_ID = #{cnrlId}
	    AND ENDTMSTMP = '99991231235959999999'
	</update>
  	
  	<!-- 2. PLC 통제  테이블의 데이터를 통제 이력테이블에 insert -->
  	<insert id="rcmCnrlHistSave">
	    INSERT INTO TB_CW_RCM_CNRL_HIST 
	    	(
		      CNRL_ID
		    , BGNTMSTMP
		    , ENDTMSTMP
		    , CNRL_NO, CNRL_NM, CNRL_CN
		    , KEY_CNRL_AT
		    , REFRN_NO, CNRL_RELATE_REF
			, CNRL_EXC_UPPER_DEPT, CNRL_EXC_DEPT, CNRL_EXCBER, CNRL_RSPNSBL_UPPER_DEPT, CNRL_RSPNSBL_DEPT, CNRL_RSPNBER
			, RELATE_REGLTN_NM, CNRL_RELATE_DOC, CNRL_RELATE_SYS, CNRL_RM
			, CNRL_PURPS, CNRL_PURPS_CD_ID, CNRL_PURPS_FNNR_RLABLTY, CNRL_PURPS_ASSET_PRTC, CNRL_PURPS_INSTC_PRVN
			, CNRL_TY_CD_ID, CNRL_TY_CECK01, CNRL_TY_CECK02, CNRL_TY_CECK03, CNRL_TY_CECK04, CNRL_TY_CECK05, CNRL_TY_CECK06, CNRL_TY_CECK07, CNRL_TY_CECK08, CNRL_TY_CECK09
			, CNRL_TY01_CD_ID, CNRL_TY03_CD_ID, CNRL_TY02_CD_ID
			, DELNG_TY_CD_ID, CNRL_CTGRY, CNRL_CYCLE_CD_ID
			, CNRL_CYCLE01, CNRL_CYCLE02, CNRL_CYCLE03, CNRL_CYCLE04, CNRL_CYCLE05, CNRL_CYCLE06, CNRL_CYCLE07, CNRL_CYCLE08, CNRL_CYCLE09
			, OFFICE_TY_CD_ID, DSGN_EFCT_AT, OPER_EFCT_AT, CNRL_UPRPD_NO
			, MRC_CNRL_AT, MRC_CTGRY_CD_ID, MRC_NO, IPE_CNRL_AT, IPE_CTGRY_CD_ID, IPE_NO, IPE_NM, IPE_TEST_PROCSS
			, COSO_NO
			, TEST_CYCLE_CD_ID
			, TEST_CYCLE01, TEST_CYCLE02, TEST_CYCLE03, TEST_CYCLE04, TEST_CYCLE05, TEST_CYCLE06, TEST_CYCLE07, TEST_CYCLE08, TEST_CYCLE09
			, TEST_RELATE_DOC, TEST_TRGET, SAMPLE_SIZE, TEST_PROCSS, EXCP_CNT
			, TEST_MTH, TEST_MTH_QESTN, TEST_MTH_OBSERV, TEST_MTH_VRIFY, TEST_MTH_ECGN, TEST_MTH_SYS_TRACE
			, ATMC_SAMPLE_AT, TEST_SANCTN_AT, ACNT_CD, CNRL_ACNTCTGR, RELATE_ACNTCTGR_PBLNTF, CNRL_CM_IEM
			, ASSE_C_AT, ASSE_E_AT, ASSE_R_AT, ASSE_V_AT, ASSE_P_AT, ASSE_S_AT, ASSE_O_AT, ASSE_A_AT, ASSE_PF_AT
			, TREXAMIN_PROCSS, TREXAMIN_PRUF, TREXAMIN_CNCLSN
			, RISK_RESIDUAL_LIKEHOOD, RISK_RESIDUAL_IMPACT, RISK_RESIDUAL_RATIONG
			, AFTER_RISK_RESIDUAL_LIKEHOOD, AFTER_RISK_RESIDUAL_IMPACT, AFTER_RISK_RESIDUAL_RATIONG, CNRL_IMPRVM_NM, CNRL_IMPRVM_DC
			, FNREP_RISKEVL_CSFCTR01, FNREP_RISKEVL_CSFCTR02, FNREP_RISKEVL_CSFCTR03
            , FNREP_RISKEVL_CSFCTR04, FNREP_RISKEVL_CSFCTR05, FNREP_RISKEVL_CSFCTR06
            , FNREP_RISKEVL_CSFCTR07, FNREP_RISKEVL_CSFCTR08, FNREP_RISKEVL_CSFCTR09, FNREP_RISKEVL_CSFCTR10
            , FNREP_CNRL_RISK_CNCLSN, FNREP_ACNT_RISK_CNCLSN, FNREP_PROCS_RISK_CNCLSN, FNREP_GNRLZ_EVL_CNCLSN
		    , CMPNY_CD_ID
		    , RGS_DT
		    , RGS_USER_ID
		    , UPD_DT
		    , UPD_USER_ID
		    , RM
		    )
	    SELECT
			CNRL_ID
		    , #{bgntmstmp}
		    , '99991231235959999999'
		     , CNRL_NO, CNRL_NM, CNRL_CN
		    , KEY_CNRL_AT
		    , REFRN_NO, CNRL_RELATE_REF
			, CNRL_EXC_UPPER_DEPT, CNRL_EXC_DEPT, CNRL_EXCBER, CNRL_RSPNSBL_UPPER_DEPT, CNRL_RSPNSBL_DEPT, CNRL_RSPNBER
			, RELATE_REGLTN_NM, CNRL_RELATE_DOC, CNRL_RELATE_SYS, CNRL_RM
			, CNRL_PURPS, CNRL_PURPS_CD_ID, CNRL_PURPS_FNNR_RLABLTY, CNRL_PURPS_ASSET_PRTC, CNRL_PURPS_INSTC_PRVN
			, CNRL_TY_CD_ID, CNRL_TY_CECK01, CNRL_TY_CECK02, CNRL_TY_CECK03, CNRL_TY_CECK04, CNRL_TY_CECK05, CNRL_TY_CECK06, CNRL_TY_CECK07, CNRL_TY_CECK08, CNRL_TY_CECK09
			, CNRL_TY01_CD_ID, CNRL_TY03_CD_ID, CNRL_TY02_CD_ID
			, DELNG_TY_CD_ID, CNRL_CTGRY, CNRL_CYCLE_CD_ID
			, CNRL_CYCLE01, CNRL_CYCLE02, CNRL_CYCLE03, CNRL_CYCLE04, CNRL_CYCLE05, CNRL_CYCLE06, CNRL_CYCLE07, CNRL_CYCLE08, CNRL_CYCLE09
			, OFFICE_TY_CD_ID, DSGN_EFCT_AT, OPER_EFCT_AT, CNRL_UPRPD_NO
			, MRC_CNRL_AT, MRC_CTGRY_CD_ID, MRC_NO, IPE_CNRL_AT, IPE_CTGRY_CD_ID, IPE_NO, IPE_NM, IPE_TEST_PROCSS
			, COSO_NO
			, TEST_CYCLE_CD_ID
			, TEST_CYCLE01, TEST_CYCLE02, TEST_CYCLE03, TEST_CYCLE04, TEST_CYCLE05, TEST_CYCLE06, TEST_CYCLE07, TEST_CYCLE08, TEST_CYCLE09
			, TEST_RELATE_DOC, TEST_TRGET, SAMPLE_SIZE, TEST_PROCSS, EXCP_CNT
			, TEST_MTH, TEST_MTH_QESTN, TEST_MTH_OBSERV, TEST_MTH_VRIFY, TEST_MTH_ECGN, TEST_MTH_SYS_TRACE
			, ATMC_SAMPLE_AT, TEST_SANCTN_AT, ACNT_CD, CNRL_ACNTCTGR, RELATE_ACNTCTGR_PBLNTF, CNRL_CM_IEM
			, ASSE_C_AT, ASSE_E_AT, ASSE_R_AT, ASSE_V_AT, ASSE_P_AT, ASSE_S_AT, ASSE_O_AT, ASSE_A_AT, ASSE_PF_AT
			, TREXAMIN_PROCSS, TREXAMIN_PRUF, TREXAMIN_CNCLSN
			, RISK_RESIDUAL_LIKEHOOD, RISK_RESIDUAL_IMPACT, RISK_RESIDUAL_RATIONG
			, AFTER_RISK_RESIDUAL_LIKEHOOD, AFTER_RISK_RESIDUAL_IMPACT, AFTER_RISK_RESIDUAL_RATIONG, CNRL_IMPRVM_NM, CNRL_IMPRVM_DC
			, FNREP_RISKEVL_CSFCTR01, FNREP_RISKEVL_CSFCTR02, FNREP_RISKEVL_CSFCTR03
            , FNREP_RISKEVL_CSFCTR04, FNREP_RISKEVL_CSFCTR05, FNREP_RISKEVL_CSFCTR06
            , FNREP_RISKEVL_CSFCTR07, FNREP_RISKEVL_CSFCTR08, FNREP_RISKEVL_CSFCTR09, FNREP_RISKEVL_CSFCTR10
            , FNREP_CNRL_RISK_CNCLSN, FNREP_ACNT_RISK_CNCLSN, FNREP_PROCS_RISK_CNCLSN, FNREP_GNRLZ_EVL_CNCLSN
		    , #{cmpnyCdId}
		    , GETDATE()
		    , #{suserId}
		    , GETDATE()
		    , #{suserId}
		    , 'RCM 반영 [' + #{evlSj} + ']'
	    FROM TB_CW_UPRPD_CNRL_UPDT
	    WHERE	EVL_ID = #{evlId}
			AND CNRL_ID = #{cnrlId}
	</insert>
  	
  	<!-- 3. PLC 통제  수정정보 테이블의 데이터를 통제 테이블에 update -->
  	<update id="rcmCnrlUpdate">
  		UPDATE TB_CW_RCM_CNRL
		SET 
			(
			  CNRL_NO, CNRL_NM, CNRL_CN
		    , KEY_CNRL_AT
		    , REFRN_NO, CNRL_RELATE_REF
			, CNRL_EXC_UPPER_DEPT, CNRL_EXC_DEPT, CNRL_EXCBER, CNRL_RSPNSBL_UPPER_DEPT, CNRL_RSPNSBL_DEPT, CNRL_RSPNBER
			, RELATE_REGLTN_NM, CNRL_RELATE_DOC, CNRL_RELATE_SYS, CNRL_RM
			, CNRL_PURPS, CNRL_PURPS_CD_ID, CNRL_PURPS_FNNR_RLABLTY, CNRL_PURPS_ASSET_PRTC, CNRL_PURPS_INSTC_PRVN
			, CNRL_TY_CD_ID, CNRL_TY_CECK01, CNRL_TY_CECK02, CNRL_TY_CECK03, CNRL_TY_CECK04, CNRL_TY_CECK05, CNRL_TY_CECK06, CNRL_TY_CECK07, CNRL_TY_CECK08, CNRL_TY_CECK09
			, CNRL_TY01_CD_ID, CNRL_TY03_CD_ID, CNRL_TY02_CD_ID
			, DELNG_TY_CD_ID, CNRL_CTGRY, CNRL_CYCLE_CD_ID
			, CNRL_CYCLE01, CNRL_CYCLE02, CNRL_CYCLE03, CNRL_CYCLE04, CNRL_CYCLE05, CNRL_CYCLE06, CNRL_CYCLE07, CNRL_CYCLE08, CNRL_CYCLE09
			, OFFICE_TY_CD_ID, DSGN_EFCT_AT, OPER_EFCT_AT, CNRL_UPRPD_NO
			, MRC_CNRL_AT, MRC_CTGRY_CD_ID, MRC_NO, IPE_CNRL_AT, IPE_CTGRY_CD_ID, IPE_NO, IPE_NM, IPE_TEST_PROCSS
			, COSO_NO
			, TEST_CYCLE_CD_ID
			, TEST_CYCLE01, TEST_CYCLE02, TEST_CYCLE03, TEST_CYCLE04, TEST_CYCLE05, TEST_CYCLE06, TEST_CYCLE07, TEST_CYCLE08, TEST_CYCLE09
			, TEST_RELATE_DOC, TEST_TRGET, SAMPLE_SIZE, TEST_PROCSS, EXCP_CNT
			, TEST_MTH, TEST_MTH_QESTN, TEST_MTH_OBSERV, TEST_MTH_VRIFY, TEST_MTH_ECGN, TEST_MTH_SYS_TRACE
			, ATMC_SAMPLE_AT, TEST_SANCTN_AT, ACNT_CD, CNRL_ACNTCTGR, RELATE_ACNTCTGR_PBLNTF, CNRL_CM_IEM
			, ASSE_C_AT, ASSE_E_AT, ASSE_R_AT, ASSE_V_AT, ASSE_P_AT, ASSE_S_AT, ASSE_O_AT, ASSE_A_AT, ASSE_PF_AT
			, TREXAMIN_PROCSS, TREXAMIN_PRUF, TREXAMIN_CNCLSN
			, RISK_RESIDUAL_LIKEHOOD, RISK_RESIDUAL_IMPACT, RISK_RESIDUAL_RATIONG
			, AFTER_RISK_RESIDUAL_LIKEHOOD, AFTER_RISK_RESIDUAL_IMPACT, AFTER_RISK_RESIDUAL_RATIONG, CNRL_IMPRVM_NM, CNRL_IMPRVM_DC
			, FNREP_RISKEVL_CSFCTR01, FNREP_RISKEVL_CSFCTR02, FNREP_RISKEVL_CSFCTR03
            , FNREP_RISKEVL_CSFCTR04, FNREP_RISKEVL_CSFCTR05, FNREP_RISKEVL_CSFCTR06
            , FNREP_RISKEVL_CSFCTR07, FNREP_RISKEVL_CSFCTR08, FNREP_RISKEVL_CSFCTR09, FNREP_RISKEVL_CSFCTR10
            , FNREP_CNRL_RISK_CNCLSN, FNREP_ACNT_RISK_CNCLSN, FNREP_PROCS_RISK_CNCLSN, FNREP_GNRLZ_EVL_CNCLSN
			, UPD_DT
			, UPD_USER_ID
		    ) = ( SELECT
					  CNRL_NO, CNRL_NM, CNRL_CN
				    , KEY_CNRL_AT
				    , REFRN_NO, CNRL_RELATE_REF
					, CNRL_EXC_UPPER_DEPT, CNRL_EXC_DEPT, CNRL_EXCBER, CNRL_RSPNSBL_UPPER_DEPT, CNRL_RSPNSBL_DEPT, CNRL_RSPNBER
					, RELATE_REGLTN_NM, CNRL_RELATE_DOC, CNRL_RELATE_SYS, CNRL_RM
					, CNRL_PURPS, CNRL_PURPS_CD_ID, CNRL_PURPS_FNNR_RLABLTY, CNRL_PURPS_ASSET_PRTC, CNRL_PURPS_INSTC_PRVN
					, CNRL_TY_CD_ID, CNRL_TY_CECK01, CNRL_TY_CECK02, CNRL_TY_CECK03, CNRL_TY_CECK04, CNRL_TY_CECK05, CNRL_TY_CECK06, CNRL_TY_CECK07, CNRL_TY_CECK08, CNRL_TY_CECK09
					, CNRL_TY01_CD_ID, CNRL_TY03_CD_ID, CNRL_TY02_CD_ID
					, DELNG_TY_CD_ID, CNRL_CTGRY, CNRL_CYCLE_CD_ID
					, CNRL_CYCLE01, CNRL_CYCLE02, CNRL_CYCLE03, CNRL_CYCLE04, CNRL_CYCLE05, CNRL_CYCLE06, CNRL_CYCLE07, CNRL_CYCLE08, CNRL_CYCLE09
					, OFFICE_TY_CD_ID, DSGN_EFCT_AT, OPER_EFCT_AT, CNRL_UPRPD_NO
					, MRC_CNRL_AT, MRC_CTGRY_CD_ID, MRC_NO, IPE_CNRL_AT, IPE_CTGRY_CD_ID, IPE_NO, IPE_NM, IPE_TEST_PROCSS
					, COSO_NO
					, TEST_CYCLE_CD_ID
					, TEST_CYCLE01, TEST_CYCLE02, TEST_CYCLE03, TEST_CYCLE04, TEST_CYCLE05, TEST_CYCLE06, TEST_CYCLE07, TEST_CYCLE08, TEST_CYCLE09
					, TEST_RELATE_DOC, TEST_TRGET, SAMPLE_SIZE, TEST_PROCSS, EXCP_CNT
					, TEST_MTH, TEST_MTH_QESTN, TEST_MTH_OBSERV, TEST_MTH_VRIFY, TEST_MTH_ECGN, TEST_MTH_SYS_TRACE
					, ATMC_SAMPLE_AT, TEST_SANCTN_AT, ACNT_CD, CNRL_ACNTCTGR, RELATE_ACNTCTGR_PBLNTF, CNRL_CM_IEM
					, ASSE_C_AT, ASSE_E_AT, ASSE_R_AT, ASSE_V_AT, ASSE_P_AT, ASSE_S_AT, ASSE_O_AT, ASSE_A_AT, ASSE_PF_AT
					, TREXAMIN_PROCSS, TREXAMIN_PRUF, TREXAMIN_CNCLSN
					, RISK_RESIDUAL_LIKEHOOD, RISK_RESIDUAL_IMPACT, RISK_RESIDUAL_RATIONG
					, AFTER_RISK_RESIDUAL_LIKEHOOD, AFTER_RISK_RESIDUAL_IMPACT, AFTER_RISK_RESIDUAL_RATIONG, CNRL_IMPRVM_NM, CNRL_IMPRVM_DC
					, FNREP_RISKEVL_CSFCTR01, FNREP_RISKEVL_CSFCTR02, FNREP_RISKEVL_CSFCTR03
                    , FNREP_RISKEVL_CSFCTR04, FNREP_RISKEVL_CSFCTR05, FNREP_RISKEVL_CSFCTR06
                    , FNREP_RISKEVL_CSFCTR07, FNREP_RISKEVL_CSFCTR08, FNREP_RISKEVL_CSFCTR09, FNREP_RISKEVL_CSFCTR10
                    , FNREP_CNRL_RISK_CNCLSN, FNREP_ACNT_RISK_CNCLSN, FNREP_PROCS_RISK_CNCLSN, FNREP_GNRLZ_EVL_CNCLSN
					, GETDATE()
					, #{suserId}          
				FROM TB_CW_UPRPD_CNRL_UPDT
				WHERE 
					EVL_ID = #{evlId}
					AND CNRL_ID = #{cnrlId}
				)
			WHERE CNRL_ID = #{cnrlId}
  	</update>
  	
  	<!-- 4. PLC 통제  수정정보 테이블 update -->
  	<update id="rcmCnrlUpdtUpdate">
  		UPDATE TB_CW_UPRPD_CNRL_UPDT
		SET   REFLCT_BGNTMSTMP = #{bgntmstmp}
			, STTUS_CD_ID = #{reflctSttusCdId}
			, REFLCT_AT = #{reflctAt}
		    , REFLCT_DT = GETDATE()
		WHERE EVL_ID = #{evlId}
		AND CNRL_ID = #{cnrlId}
  	</update>
<!-- PLC 통제 반영 버튼 part 종료 -->
  	
<!-- PLC 통제 반영 취소버튼 part 시작 -->
  	<!-- 3.  PLC 통제  이력 테이블의 정보를 통제 이력 테이블에 insert -->
  	<update id="rcmCnrlHistCanclSave">
	    INSERT INTO TB_CW_RCM_CNRL_HIST 
	    	(
		      CNRL_ID
		    , BGNTMSTMP
		    , ENDTMSTMP
		    , CNRL_NO, CNRL_NM, CNRL_CN
		    , KEY_CNRL_AT
		    , REFRN_NO, CNRL_RELATE_REF
			, CNRL_EXC_UPPER_DEPT, CNRL_EXC_DEPT, CNRL_EXCBER, CNRL_RSPNSBL_UPPER_DEPT, CNRL_RSPNSBL_DEPT, CNRL_RSPNBER
			, RELATE_REGLTN_NM, CNRL_RELATE_DOC, CNRL_RELATE_SYS, CNRL_RM
			, CNRL_PURPS, CNRL_PURPS_CD_ID, CNRL_PURPS_FNNR_RLABLTY, CNRL_PURPS_ASSET_PRTC, CNRL_PURPS_INSTC_PRVN
			, CNRL_TY_CD_ID, CNRL_TY_CECK01, CNRL_TY_CECK02, CNRL_TY_CECK03, CNRL_TY_CECK04, CNRL_TY_CECK05, CNRL_TY_CECK06, CNRL_TY_CECK07, CNRL_TY_CECK08, CNRL_TY_CECK09
			, CNRL_TY01_CD_ID, CNRL_TY03_CD_ID, CNRL_TY02_CD_ID
			, DELNG_TY_CD_ID, CNRL_CTGRY, CNRL_CYCLE_CD_ID
			, CNRL_CYCLE01, CNRL_CYCLE02, CNRL_CYCLE03, CNRL_CYCLE04, CNRL_CYCLE05, CNRL_CYCLE06, CNRL_CYCLE07, CNRL_CYCLE08, CNRL_CYCLE09
			, OFFICE_TY_CD_ID, DSGN_EFCT_AT, OPER_EFCT_AT, CNRL_UPRPD_NO
			, MRC_CNRL_AT, MRC_CTGRY_CD_ID, MRC_NO, IPE_CNRL_AT, IPE_CTGRY_CD_ID, IPE_NO, IPE_NM, IPE_TEST_PROCSS
			, COSO_NO
			, TEST_CYCLE_CD_ID
			, TEST_CYCLE01, TEST_CYCLE02, TEST_CYCLE03, TEST_CYCLE04, TEST_CYCLE05, TEST_CYCLE06, TEST_CYCLE07, TEST_CYCLE08, TEST_CYCLE09
			, TEST_RELATE_DOC, TEST_TRGET, SAMPLE_SIZE, TEST_PROCSS, EXCP_CNT
			, TEST_MTH, TEST_MTH_QESTN, TEST_MTH_OBSERV, TEST_MTH_VRIFY, TEST_MTH_ECGN, TEST_MTH_SYS_TRACE
			, ATMC_SAMPLE_AT, TEST_SANCTN_AT, ACNT_CD, CNRL_ACNTCTGR, RELATE_ACNTCTGR_PBLNTF, CNRL_CM_IEM
			, ASSE_C_AT, ASSE_E_AT, ASSE_R_AT, ASSE_V_AT, ASSE_P_AT, ASSE_S_AT, ASSE_O_AT, ASSE_A_AT, ASSE_PF_AT
			, TREXAMIN_PROCSS, TREXAMIN_PRUF, TREXAMIN_CNCLSN
			, RISK_RESIDUAL_LIKEHOOD, RISK_RESIDUAL_IMPACT, RISK_RESIDUAL_RATIONG
			, AFTER_RISK_RESIDUAL_LIKEHOOD, AFTER_RISK_RESIDUAL_IMPACT, AFTER_RISK_RESIDUAL_RATIONG, CNRL_IMPRVM_NM, CNRL_IMPRVM_DC
			, FNREP_RISKEVL_CSFCTR01, FNREP_RISKEVL_CSFCTR02, FNREP_RISKEVL_CSFCTR03
            , FNREP_RISKEVL_CSFCTR04, FNREP_RISKEVL_CSFCTR05, FNREP_RISKEVL_CSFCTR06
            , FNREP_RISKEVL_CSFCTR07, FNREP_RISKEVL_CSFCTR08, FNREP_RISKEVL_CSFCTR09, FNREP_RISKEVL_CSFCTR10
            , FNREP_CNRL_RISK_CNCLSN, FNREP_ACNT_RISK_CNCLSN, FNREP_PROCS_RISK_CNCLSN, FNREP_GNRLZ_EVL_CNCLSN
		    , CMPNY_CD_ID
		    , RGS_DT
		    , RGS_USER_ID
		    , UPD_DT
		    , UPD_USER_ID
		    , RM
		    )
	    SELECT
			CNRL_ID
		    , #{endtmstmp}
		    , '99991231235959999999'
		     , CNRL_NO, CNRL_NM, CNRL_CN
		    , KEY_CNRL_AT
		    , REFRN_NO, CNRL_RELATE_REF
			, CNRL_EXC_UPPER_DEPT, CNRL_EXC_DEPT, CNRL_EXCBER, CNRL_RSPNSBL_UPPER_DEPT, CNRL_RSPNSBL_DEPT, CNRL_RSPNBER
			, RELATE_REGLTN_NM, CNRL_RELATE_DOC, CNRL_RELATE_SYS, CNRL_RM
			, CNRL_PURPS, CNRL_PURPS_CD_ID, CNRL_PURPS_FNNR_RLABLTY, CNRL_PURPS_ASSET_PRTC, CNRL_PURPS_INSTC_PRVN
			, CNRL_TY_CD_ID, CNRL_TY_CECK01, CNRL_TY_CECK02, CNRL_TY_CECK03, CNRL_TY_CECK04, CNRL_TY_CECK05, CNRL_TY_CECK06, CNRL_TY_CECK07, CNRL_TY_CECK08, CNRL_TY_CECK09
			, CNRL_TY01_CD_ID, CNRL_TY03_CD_ID, CNRL_TY02_CD_ID
			, DELNG_TY_CD_ID, CNRL_CTGRY, CNRL_CYCLE_CD_ID
			, CNRL_CYCLE01, CNRL_CYCLE02, CNRL_CYCLE03, CNRL_CYCLE04, CNRL_CYCLE05, CNRL_CYCLE06, CNRL_CYCLE07, CNRL_CYCLE08, CNRL_CYCLE09
			, OFFICE_TY_CD_ID, DSGN_EFCT_AT, OPER_EFCT_AT, CNRL_UPRPD_NO
			, MRC_CNRL_AT, MRC_CTGRY_CD_ID, MRC_NO, IPE_CNRL_AT, IPE_CTGRY_CD_ID, IPE_NO, IPE_NM, IPE_TEST_PROCSS
			, COSO_NO
			, TEST_CYCLE_CD_ID
			, TEST_CYCLE01, TEST_CYCLE02, TEST_CYCLE03, TEST_CYCLE04, TEST_CYCLE05, TEST_CYCLE06, TEST_CYCLE07, TEST_CYCLE08, TEST_CYCLE09
			, TEST_RELATE_DOC, TEST_TRGET, SAMPLE_SIZE, TEST_PROCSS, EXCP_CNT
			, TEST_MTH, TEST_MTH_QESTN, TEST_MTH_OBSERV, TEST_MTH_VRIFY, TEST_MTH_ECGN, TEST_MTH_SYS_TRACE
			, ATMC_SAMPLE_AT, TEST_SANCTN_AT, ACNT_CD, CNRL_ACNTCTGR, RELATE_ACNTCTGR_PBLNTF, CNRL_CM_IEM
			, ASSE_C_AT, ASSE_E_AT, ASSE_R_AT, ASSE_V_AT, ASSE_P_AT, ASSE_S_AT, ASSE_O_AT, ASSE_A_AT, ASSE_PF_AT
			, TREXAMIN_PROCSS, TREXAMIN_PRUF, TREXAMIN_CNCLSN
			, RISK_RESIDUAL_LIKEHOOD, RISK_RESIDUAL_IMPACT, RISK_RESIDUAL_RATIONG
			, AFTER_RISK_RESIDUAL_LIKEHOOD, AFTER_RISK_RESIDUAL_IMPACT, AFTER_RISK_RESIDUAL_RATIONG, CNRL_IMPRVM_NM, CNRL_IMPRVM_DC
			, FNREP_RISKEVL_CSFCTR01, FNREP_RISKEVL_CSFCTR02, FNREP_RISKEVL_CSFCTR03
            , FNREP_RISKEVL_CSFCTR04, FNREP_RISKEVL_CSFCTR05, FNREP_RISKEVL_CSFCTR06
            , FNREP_RISKEVL_CSFCTR07, FNREP_RISKEVL_CSFCTR08, FNREP_RISKEVL_CSFCTR09, FNREP_RISKEVL_CSFCTR10
            , FNREP_CNRL_RISK_CNCLSN, FNREP_ACNT_RISK_CNCLSN, FNREP_PROCS_RISK_CNCLSN, FNREP_GNRLZ_EVL_CNCLSN
		    , #{cmpnyCdId}
		    , GETDATE()
		    , #{suserId}
		    , GETDATE()
		    , #{suserId}
		    , '반영취소 [' + #{evlSj} + ']'
			FROM TB_CW_RCM_CNRL_HIST
			WHERE 
				CNRL_ID = #{cnrlId}
	          	AND BGNTMSTMP = #{reflctBgntmstmp}
  	</update>
  	<!-- 4.  PLC 통제 이력 테이블의 정보를 통제 테이블로 원복 -->
  	<update id="rcmCnrlRollbackUpdate">
  		UPDATE TB_CW_RCM_CNRL
		SET 
			(
			  CNRL_NO, CNRL_NM, CNRL_CN
		    , KEY_CNRL_AT
		    , REFRN_NO, CNRL_RELATE_REF
			, CNRL_EXC_UPPER_DEPT, CNRL_EXC_DEPT, CNRL_EXCBER, CNRL_RSPNSBL_UPPER_DEPT, CNRL_RSPNSBL_DEPT, CNRL_RSPNBER
			, RELATE_REGLTN_NM, CNRL_RELATE_DOC, CNRL_RELATE_SYS, CNRL_RM
			, CNRL_PURPS, CNRL_PURPS_CD_ID, CNRL_PURPS_FNNR_RLABLTY, CNRL_PURPS_ASSET_PRTC, CNRL_PURPS_INSTC_PRVN
			, CNRL_TY_CD_ID, CNRL_TY_CECK01, CNRL_TY_CECK02, CNRL_TY_CECK03, CNRL_TY_CECK04, CNRL_TY_CECK05, CNRL_TY_CECK06, CNRL_TY_CECK07, CNRL_TY_CECK08, CNRL_TY_CECK09
			, CNRL_TY01_CD_ID, CNRL_TY03_CD_ID, CNRL_TY02_CD_ID
			, DELNG_TY_CD_ID, CNRL_CTGRY, CNRL_CYCLE_CD_ID
			, CNRL_CYCLE01, CNRL_CYCLE02, CNRL_CYCLE03, CNRL_CYCLE04, CNRL_CYCLE05, CNRL_CYCLE06, CNRL_CYCLE07, CNRL_CYCLE08, CNRL_CYCLE09
			, OFFICE_TY_CD_ID, DSGN_EFCT_AT, OPER_EFCT_AT, CNRL_UPRPD_NO
			, MRC_CNRL_AT, MRC_CTGRY_CD_ID, MRC_NO, IPE_CNRL_AT, IPE_CTGRY_CD_ID, IPE_NO, IPE_NM, IPE_TEST_PROCSS
			, COSO_NO
			, TEST_CYCLE_CD_ID
			, TEST_CYCLE01, TEST_CYCLE02, TEST_CYCLE03, TEST_CYCLE04, TEST_CYCLE05, TEST_CYCLE06, TEST_CYCLE07, TEST_CYCLE08, TEST_CYCLE09
			, TEST_RELATE_DOC, TEST_TRGET, SAMPLE_SIZE, TEST_PROCSS, EXCP_CNT
			, TEST_MTH, TEST_MTH_QESTN, TEST_MTH_OBSERV, TEST_MTH_VRIFY, TEST_MTH_ECGN, TEST_MTH_SYS_TRACE
			, ATMC_SAMPLE_AT, TEST_SANCTN_AT, ACNT_CD, CNRL_ACNTCTGR, RELATE_ACNTCTGR_PBLNTF, CNRL_CM_IEM
			, ASSE_C_AT, ASSE_E_AT, ASSE_R_AT, ASSE_V_AT, ASSE_P_AT, ASSE_S_AT, ASSE_O_AT, ASSE_A_AT, ASSE_PF_AT
			, TREXAMIN_PROCSS, TREXAMIN_PRUF, TREXAMIN_CNCLSN
			, RISK_RESIDUAL_LIKEHOOD, RISK_RESIDUAL_IMPACT, RISK_RESIDUAL_RATIONG
			, AFTER_RISK_RESIDUAL_LIKEHOOD, AFTER_RISK_RESIDUAL_IMPACT, AFTER_RISK_RESIDUAL_RATIONG, CNRL_IMPRVM_NM, CNRL_IMPRVM_DC
			, FNREP_RISKEVL_CSFCTR01, FNREP_RISKEVL_CSFCTR02, FNREP_RISKEVL_CSFCTR03
            , FNREP_RISKEVL_CSFCTR04, FNREP_RISKEVL_CSFCTR05, FNREP_RISKEVL_CSFCTR06
            , FNREP_RISKEVL_CSFCTR07, FNREP_RISKEVL_CSFCTR08, FNREP_RISKEVL_CSFCTR09, FNREP_RISKEVL_CSFCTR10
            , FNREP_CNRL_RISK_CNCLSN, FNREP_ACNT_RISK_CNCLSN, FNREP_PROCS_RISK_CNCLSN, FNREP_GNRLZ_EVL_CNCLSN
			, UPD_DT
			, UPD_USER_ID
			) = ( SELECT
					  CNRL_NO, CNRL_NM, CNRL_CN
				    , KEY_CNRL_AT
				    , REFRN_NO, CNRL_RELATE_REF
					, CNRL_EXC_UPPER_DEPT, CNRL_EXC_DEPT, CNRL_EXCBER, CNRL_RSPNSBL_UPPER_DEPT, CNRL_RSPNSBL_DEPT, CNRL_RSPNBER
					, RELATE_REGLTN_NM, CNRL_RELATE_DOC, CNRL_RELATE_SYS, CNRL_RM
					, CNRL_PURPS, CNRL_PURPS_CD_ID, CNRL_PURPS_FNNR_RLABLTY, CNRL_PURPS_ASSET_PRTC, CNRL_PURPS_INSTC_PRVN
					, CNRL_TY_CD_ID, CNRL_TY_CECK01, CNRL_TY_CECK02, CNRL_TY_CECK03, CNRL_TY_CECK04, CNRL_TY_CECK05, CNRL_TY_CECK06, CNRL_TY_CECK07, CNRL_TY_CECK08, CNRL_TY_CECK09
					, CNRL_TY01_CD_ID, CNRL_TY03_CD_ID, CNRL_TY02_CD_ID
					, DELNG_TY_CD_ID, CNRL_CTGRY, CNRL_CYCLE_CD_ID
					, CNRL_CYCLE01, CNRL_CYCLE02, CNRL_CYCLE03, CNRL_CYCLE04, CNRL_CYCLE05, CNRL_CYCLE06, CNRL_CYCLE07, CNRL_CYCLE08, CNRL_CYCLE09
					, OFFICE_TY_CD_ID, DSGN_EFCT_AT, OPER_EFCT_AT, CNRL_UPRPD_NO
					, MRC_CNRL_AT, MRC_CTGRY_CD_ID, MRC_NO, IPE_CNRL_AT, IPE_CTGRY_CD_ID, IPE_NO, IPE_NM, IPE_TEST_PROCSS
					, COSO_NO
					, TEST_CYCLE_CD_ID
					, TEST_CYCLE01, TEST_CYCLE02, TEST_CYCLE03, TEST_CYCLE04, TEST_CYCLE05, TEST_CYCLE06, TEST_CYCLE07, TEST_CYCLE08, TEST_CYCLE09
					, TEST_RELATE_DOC, TEST_TRGET, SAMPLE_SIZE, TEST_PROCSS, EXCP_CNT
					, TEST_MTH, TEST_MTH_QESTN, TEST_MTH_OBSERV, TEST_MTH_VRIFY, TEST_MTH_ECGN, TEST_MTH_SYS_TRACE
					, ATMC_SAMPLE_AT, TEST_SANCTN_AT, ACNT_CD, CNRL_ACNTCTGR, RELATE_ACNTCTGR_PBLNTF, CNRL_CM_IEM
					, ASSE_C_AT, ASSE_E_AT, ASSE_R_AT, ASSE_V_AT, ASSE_P_AT, ASSE_S_AT, ASSE_O_AT, ASSE_A_AT, ASSE_PF_AT
					, TREXAMIN_PROCSS, TREXAMIN_PRUF, TREXAMIN_CNCLSN
					, RISK_RESIDUAL_LIKEHOOD, RISK_RESIDUAL_IMPACT, RISK_RESIDUAL_RATIONG
					, AFTER_RISK_RESIDUAL_LIKEHOOD, AFTER_RISK_RESIDUAL_IMPACT, AFTER_RISK_RESIDUAL_RATIONG, CNRL_IMPRVM_NM, CNRL_IMPRVM_DC
					, FNREP_RISKEVL_CSFCTR01, FNREP_RISKEVL_CSFCTR02, FNREP_RISKEVL_CSFCTR03
                    , FNREP_RISKEVL_CSFCTR04, FNREP_RISKEVL_CSFCTR05, FNREP_RISKEVL_CSFCTR06
                    , FNREP_RISKEVL_CSFCTR07, FNREP_RISKEVL_CSFCTR08, FNREP_RISKEVL_CSFCTR09, FNREP_RISKEVL_CSFCTR10
                    , FNREP_CNRL_RISK_CNCLSN, FNREP_ACNT_RISK_CNCLSN, FNREP_PROCS_RISK_CNCLSN, FNREP_GNRLZ_EVL_CNCLSN
					, GETDATE()
					, #{suserId}          
				FROM TB_CW_RCM_CNRL_HIST
				WHERE 
					CNRL_ID = #{cnrlId}
		          	AND BGNTMSTMP = #{reflctBgntmstmp}
		        )
			WHERE CNRL_ID = #{cnrlId}
  	</update>
<!-- PLC 통제 반영 취소버튼 part 종료 -->

<!-- PLC 규준문서 반영 버튼 part 시작 -->
  	<!-- 1. PLC 규준문서 이력 테이블의 종료 타임스탬프 업데이트 -->
  	<update id="rcmDocHistEndstampUpdate">
	    UPDATE TB_CW_RCM_DOC_HIST
		SET 
			  ENDTMSTMP = #{endtmstmp}
			, UPD_USER_ID = #{suserId}
			, UPD_DT = GETDATE()
	    WHERE PROCS_ID = #{objectId}
	    AND ENDTMSTMP = '99991231235959999999'
	</update>
  	
  	<!-- 2. 통제 테이블의 데이터를 통제 이력테이블에 insert -->
  	<insert id="rcmDocHistSave">
	    INSERT INTO TB_CW_RCM_DOC_HIST 
	    ( 	  PROCS_ID
			, UNITY_ID
		    , BGNTMSTMP
		    , ENDTMSTMP
		    , CMPNY_CD_ID
		    , RGS_DT
		    , RGS_USER_ID
		    , UPD_DT
		    , UPD_USER_ID
		    , RM
		) VALUES (
      		  #{objectId}
			, ISNULL(( SELECT UNITY_ID FROM TB_CW_EVL_RCM_DOC_UPDT WHERE EVL_ID = #{evlId} AND PROCS_ID = #{objectId} ), 'NULL')
		    , #{bgntmstmp}
		    , '99991231235959999999'
		    , #{cmpnyCdId}
		    , GETDATE()
		    , #{suserId}
		    , GETDATE()
		    , #{suserId}
		    , '규준문서 반영 [' + #{evlSj} + ']'
		)
	</insert>
  	
  	<!-- 3. PLC 규준문서  수정정보 테이블의 데이터를 통제 테이블에 update -->
  	<update id="rcmDocUpdate">
  		MERGE INTO TB_CW_RCM_DOC T1
  		USING (VALUES (1)) AS Source (Number) 
		ON ( T1.PROCS_ID = #{objectId} )
		WHEN MATCHED THEN
		 		UPDATE SET 
		 			  UNITY_ID 		= ISNULL(( SELECT UNITY_ID FROM TB_CW_EVL_RCM_DOC_UPDT WHERE EVL_ID = #{evlId} AND PROCS_ID = #{objectId} ), 'NULL')
					, UPD_DT 		= GETDATE()
					, UPD_USER_ID 	= #{suserId}
		WHEN NOT MATCHED THEN 
    	INSERT (
    		  PROCS_ID, UNITY_ID
			, RGS_DT, RGS_USER_ID, UPD_DT, UPD_USER_ID
    	) VALUES (
    		  #{objectId}, ISNULL(( SELECT UNITY_ID FROM TB_CW_EVL_RCM_DOC_UPDT WHERE EVL_ID = #{evlId} AND PROCS_ID = #{objectId} ), 'NULL')
    		, GETDATE(), #{suserId}, GETDATE(), #{suserId}
    	)
  		<!-- UPDATE TB_CW_RCM_DOC
		SET   UNITY_ID 		= ISNULL(( SELECT UNITY_ID FROM TB_CW_EVL_RCM_DOC_UPDT WHERE EVL_ID = #{evlId} AND PROCS_ID = #{objectId} ), 'NULL')
			, UPD_DT 		= GETDATE()
			, UPD_USER_ID 	= #{suserId}
		WHERE PROCS_ID 		= #{objectId} -->
  	</update>
  	
  	<!-- 4. PLC 규준문서  수정정보 테이블 update -->
  	<update id="rcmDocUpdtUpdate">
  		UPDATE TB_CW_EVL_RCM_DOC_UPDT
		SET   REFLCT_BGNTMSTMP = #{bgntmstmp}
			, STTUS_CD_ID = #{reflctSttusCdId}
			, REFLCT_AT = #{reflctAt}
		    , REFLCT_DT = GETDATE()
		WHERE EVL_ID = #{evlId}
		AND PROCS_ID = #{objectId}
  	</update>
  	<!-- PLC 규준문서 반영 버튼 part 종료 -->
  	
  	<!-- PLC 규준문서 반영 취소버튼 part 시작 -->
  	<!-- 3. PLC 규준문서  이력 테이블의 정보를 PLC 규준문서  이력 테이블에 insert -->
  	<update id="rcmDocHistCanclSave">
	    INSERT INTO TB_CW_RCM_DOC_HIST 
    	(     PROCS_ID
			, UNITY_ID
		    , BGNTMSTMP
		    , ENDTMSTMP
		    , CMPNY_CD_ID
		    , RGS_DT
		    , RGS_USER_ID
		    , UPD_DT
		    , UPD_USER_ID
		    , RM
	    ) VALUES (
		      #{objectId}
			, ISNULL(( SELECT UNITY_ID FROM TB_CW_RCM_DOC_HIST WHERE PROCS_ID = #{objectId} AND BGNTMSTMP = #{reflctBgntmstmp} ), 'NULL')
			, #{endtmstmp}
		    , '99991231235959999999'
		    , #{cmpnyCdId}
		    , GETDATE()
		    , #{suserId}
		    , GETDATE()
		    , #{suserId}
		    , '반영취소 [' + #{evlSj} + ']'
	    )
  	</update>
  	<!-- 4. 규준문서 이력 테이블의 정보를 규준문서 테이블로 원복 -->
  	<update id="rcmDocRollbackUpdate">
    	<!--MERGE INTO TB_CW_RCM_DOC
  		USING (VALUES (1)) AS Source (Number) 
		ON ( T1.PROCS_ID = #{objectId}
		WHEN MATCHED THEN
		 		UPDATE SET 
		 			  UNITY_ID 		= ISNULL(( SELECT UNITY_ID FROM TB_CW_RCM_DOC_HIST WHERE PROCS_ID = #{objectId} AND BGNTMSTMP = #{reflctBgntmstmp} ), 'NULL')
					, UPD_DT 		= GETDATE()
					, UPD_USER_ID 	= #{suserId}
		WHEN NOT MATCHED THEN 
    	INSERT (
    		  PROCS_ID, UNITY_ID
			, RGS_DT, RGS_USER_ID, UPD_DT, UPD_USER_ID
    	) VALUES (
    		#{objectId}, 'NULL'
    		GETDATE(), #{suserId}, GETDATE(), #{suserId}
    	)  -->
  		UPDATE TB_CW_RCM_DOC
		SET   UNITY_ID 		= ISNULL(( SELECT UNITY_ID FROM TB_CW_RCM_DOC_HIST WHERE PROCS_ID = #{objectId} AND BGNTMSTMP = #{reflctBgntmstmp} ), 'NULL')
			, UPD_DT 		= GETDATE()
			, UPD_USER_ID 	= #{suserId}
		WHERE PROCS_ID 		= #{objectId}
  	</update>
<!-- PLC 규준문서 반영 취소버튼 part 종료 -->


	
 	<!-- 1. ELC/DOC 반영취소 가능 여부 확인 -->
	<select id="elcReflctPosblCeck" resultType="String">
		SELECT REFLCT_CECK
		FROM (	SELECT 	CASE WHEN U.REFLCT_BGNTMSTMP = H.BGNTMSTMP THEN 'Y'
					  	ELSE 'N' END REFLCT_CECK 
				FROM TB_CW_UPRPD_ELC_CNRL_UPDT U
				LEFT OUTER JOIN TB_CW_ELC_RCM_CNRL_HIST H
					ON U.CNRL_ID = H.CNRL_ID
					AND H.ENDTMSTMP = '99991231235959999999'
				WHERE 
					U.EVL_ID = #{evlId}
					AND U.CNRL_ID = #{objectId}
					
				UNION
				SELECT 	CASE WHEN U.REFLCT_BGNTMSTMP = H.BGNTMSTMP THEN 'Y'
					  	ELSE 'N' END REFLCT_CECK 
				FROM TB_CW_EVL_RCM_DOC_UPDT U
				LEFT OUTER JOIN TB_CW_ELC_RCM_DOC_HIST H
					ON U.PROCS_ID = H.PROCS_ID
					AND H.ENDTMSTMP = '99991231235959999999'
				WHERE 
					U.EVL_ID = #{evlId}
					AND U.PROCS_ID = #{objectId}
		) 
		WHERE REFLCT_CECK IS NOT NULL
	</select>
	
  	<!-- 2. ELC/DOC 최신이력 이전 데이터 기준일자 조회 -->
	<select id="elcReflctBgntmstmp" resultType="String">
		SELECT REFLCT_BGNTMSTMP
		FROM (	SELECT  
					  MAX(BGNTMSTMP) AS REFLCT_BGNTMSTMP
				FROM TB_CW_ELC_RCM_CNRL_HIST A
				WHERE  
					A.CNRL_ID = #{cnrlId}
					AND A.ENDTMSTMP != '99991231235959999999'
						
				UNION	
				SELECT  
					  MAX(BGNTMSTMP) AS REFLCT_BGNTMSTMP 
				FROM TB_CW_ELC_RCM_DOC_HIST A
				WHERE  
					A.PROCS_ID = #{objectId}
					AND A.ENDTMSTMP != '99991231235959999999'
		) 
		WHERE REFLCT_BGNTMSTMP IS NOT NULL
	</select>

<!-- ELC 반영 버튼 part 시작 -->
  	<!-- 1. CNRL_HIST 통제이력 테이블의 종료 타임스탬프 업데이트 -->
  	<update id="elcCnrlHistEndstampUpdate">
	    UPDATE TB_CW_ELC_RCM_CNRL_HIST
		SET 
			ENDTMSTMP = #{endtmstmp}
			,UPD_USER_ID = #{suserId}
			,UPD_DT = GETDATE()
	    WHERE CNRL_ID = #{cnrlId}
	    AND ENDTMSTMP = '99991231235959999999'
	</update>

  	<!-- 2. 통제 테이블의 데이터를 통제 이력테이블에 insert -->
  	<insert id="elcCnrlHistSave">
	    INSERT INTO TB_CW_ELC_RCM_CNRL_HIST 
	    	( CNRL_ID
		    , BGNTMSTMP
		    , ENDTMSTMP
		    , CNRL_NO, CNRL_NM, CNRL_CN
		    , KEY_CNRL_AT
		    , REFRN_NO, CNRL_RELATE_REF
			, CNRL_EXC_UPPER_DEPT, CNRL_EXC_DEPT, CNRL_EXCBER, CNRL_RSPNSBL_UPPER_DEPT, CNRL_RSPNSBL_DEPT, CNRL_RSPNBER
			, RELATE_REGLTN_NM, CNRL_RELATE_DOC, CNRL_RELATE_SYS, CNRL_RM
			, CNRL_PURPS, CNRL_PURPS_CD_ID, CNRL_PURPS_FNNR_RLABLTY, CNRL_PURPS_ASSET_PRTC, CNRL_PURPS_INSTC_PRVN
			, CNRL_TY_CD_ID, CNRL_TY_CECK01, CNRL_TY_CECK02, CNRL_TY_CECK03, CNRL_TY_CECK04, CNRL_TY_CECK05, CNRL_TY_CECK06, CNRL_TY_CECK07, CNRL_TY_CECK08, CNRL_TY_CECK09
			, CNRL_TY01_CD_ID, CNRL_TY03_CD_ID, CNRL_TY02_CD_ID
			, DELNG_TY_CD_ID, CNRL_CTGRY, CNRL_CYCLE_CD_ID
			, CNRL_CYCLE01, CNRL_CYCLE02, CNRL_CYCLE03, CNRL_CYCLE04, CNRL_CYCLE05, CNRL_CYCLE06, CNRL_CYCLE07, CNRL_CYCLE08, CNRL_CYCLE09
			, OFFICE_TY_CD_ID, DSGN_EFCT_AT, OPER_EFCT_AT, CNRL_UPRPD_NO
			, MRC_CNRL_AT, MRC_CTGRY_CD_ID, MRC_NO, IPE_CNRL_AT, IPE_CTGRY_CD_ID, IPE_NO, IPE_NM, IPE_TEST_PROCSS
			, COSO_NO
			, TEST_CYCLE_CD_ID
			, TEST_CYCLE01, TEST_CYCLE02, TEST_CYCLE03, TEST_CYCLE04, TEST_CYCLE05, TEST_CYCLE06, TEST_CYCLE07, TEST_CYCLE08, TEST_CYCLE09
			, TEST_RELATE_DOC, TEST_TRGET, SAMPLE_SIZE, TEST_PROCSS, EXCP_CNT
			, TEST_MTH, TEST_MTH_QESTN, TEST_MTH_OBSERV, TEST_MTH_VRIFY, TEST_MTH_ECGN, TEST_MTH_SYS_TRACE
			, ATMC_SAMPLE_AT, TEST_SANCTN_AT, ACNT_CD, CNRL_ACNTCTGR, RELATE_ACNTCTGR_PBLNTF, CNRL_CM_IEM
			, ASSE_C_AT, ASSE_E_AT, ASSE_R_AT, ASSE_V_AT, ASSE_P_AT, ASSE_S_AT, ASSE_O_AT, ASSE_A_AT, ASSE_PF_AT
			, TREXAMIN_PROCSS, TREXAMIN_PRUF, TREXAMIN_CNCLSN
			, RISK_RESIDUAL_LIKEHOOD, RISK_RESIDUAL_IMPACT, RISK_RESIDUAL_RATIONG
			, AFTER_RISK_RESIDUAL_LIKEHOOD, AFTER_RISK_RESIDUAL_IMPACT, AFTER_RISK_RESIDUAL_RATIONG, CNRL_IMPRVM_NM, CNRL_IMPRVM_DC
			, FNREP_RISKEVL_CSFCTR01, FNREP_RISKEVL_CSFCTR02, FNREP_RISKEVL_CSFCTR03
            , FNREP_RISKEVL_CSFCTR04, FNREP_RISKEVL_CSFCTR05, FNREP_RISKEVL_CSFCTR06
            , FNREP_RISKEVL_CSFCTR07, FNREP_RISKEVL_CSFCTR08, FNREP_RISKEVL_CSFCTR09, FNREP_RISKEVL_CSFCTR10
            , FNREP_CNRL_RISK_CNCLSN, FNREP_ACNT_RISK_CNCLSN, FNREP_PROCS_RISK_CNCLSN, FNREP_GNRLZ_EVL_CNCLSN
		    , CMPNY_CD_ID
		    , RGS_DT
		    , RGS_USER_ID
		    , UPD_DT
		    , UPD_USER_ID
		    , RM
		    )
	    SELECT
			CNRL_ID
		    , #{bgntmstmp}
		    , '99991231235959999999'
		     , CNRL_NO, CNRL_NM, CNRL_CN
		    , KEY_CNRL_AT
		    , REFRN_NO, CNRL_RELATE_REF
			, CNRL_EXC_UPPER_DEPT, CNRL_EXC_DEPT, CNRL_EXCBER, CNRL_RSPNSBL_UPPER_DEPT, CNRL_RSPNSBL_DEPT, CNRL_RSPNBER
			, RELATE_REGLTN_NM, CNRL_RELATE_DOC, CNRL_RELATE_SYS, CNRL_RM
			, CNRL_PURPS, CNRL_PURPS_CD_ID, CNRL_PURPS_FNNR_RLABLTY, CNRL_PURPS_ASSET_PRTC, CNRL_PURPS_INSTC_PRVN
			, CNRL_TY_CD_ID, CNRL_TY_CECK01, CNRL_TY_CECK02, CNRL_TY_CECK03, CNRL_TY_CECK04, CNRL_TY_CECK05, CNRL_TY_CECK06, CNRL_TY_CECK07, CNRL_TY_CECK08, CNRL_TY_CECK09
			, CNRL_TY01_CD_ID, CNRL_TY03_CD_ID, CNRL_TY02_CD_ID
			, DELNG_TY_CD_ID, CNRL_CTGRY, CNRL_CYCLE_CD_ID
			, CNRL_CYCLE01, CNRL_CYCLE02, CNRL_CYCLE03, CNRL_CYCLE04, CNRL_CYCLE05, CNRL_CYCLE06, CNRL_CYCLE07, CNRL_CYCLE08, CNRL_CYCLE09
			, OFFICE_TY_CD_ID, DSGN_EFCT_AT, OPER_EFCT_AT, CNRL_UPRPD_NO
			, MRC_CNRL_AT, MRC_CTGRY_CD_ID, MRC_NO, IPE_CNRL_AT, IPE_CTGRY_CD_ID, IPE_NO, IPE_NM, IPE_TEST_PROCSS
			, COSO_NO
			, TEST_CYCLE_CD_ID
			, TEST_CYCLE01, TEST_CYCLE02, TEST_CYCLE03, TEST_CYCLE04, TEST_CYCLE05, TEST_CYCLE06, TEST_CYCLE07, TEST_CYCLE08, TEST_CYCLE09
			, TEST_RELATE_DOC, TEST_TRGET, SAMPLE_SIZE, TEST_PROCSS, EXCP_CNT
			, TEST_MTH, TEST_MTH_QESTN, TEST_MTH_OBSERV, TEST_MTH_VRIFY, TEST_MTH_ECGN, TEST_MTH_SYS_TRACE
			, ATMC_SAMPLE_AT, TEST_SANCTN_AT, ACNT_CD, CNRL_ACNTCTGR, RELATE_ACNTCTGR_PBLNTF, CNRL_CM_IEM
			, ASSE_C_AT, ASSE_E_AT, ASSE_R_AT, ASSE_V_AT, ASSE_P_AT, ASSE_S_AT, ASSE_O_AT, ASSE_A_AT, ASSE_PF_AT
			, TREXAMIN_PROCSS, TREXAMIN_PRUF, TREXAMIN_CNCLSN
			, RISK_RESIDUAL_LIKEHOOD, RISK_RESIDUAL_IMPACT, RISK_RESIDUAL_RATIONG
			, AFTER_RISK_RESIDUAL_LIKEHOOD, AFTER_RISK_RESIDUAL_IMPACT, AFTER_RISK_RESIDUAL_RATIONG, CNRL_IMPRVM_NM, CNRL_IMPRVM_DC
			, FNREP_RISKEVL_CSFCTR01, FNREP_RISKEVL_CSFCTR02, FNREP_RISKEVL_CSFCTR03
            , FNREP_RISKEVL_CSFCTR04, FNREP_RISKEVL_CSFCTR05, FNREP_RISKEVL_CSFCTR06
            , FNREP_RISKEVL_CSFCTR07, FNREP_RISKEVL_CSFCTR08, FNREP_RISKEVL_CSFCTR09, FNREP_RISKEVL_CSFCTR10
            , FNREP_CNRL_RISK_CNCLSN, FNREP_ACNT_RISK_CNCLSN, FNREP_PROCS_RISK_CNCLSN, FNREP_GNRLZ_EVL_CNCLSN
		    , #{cmpnyCdId}
		    , GETDATE()
		    , #{suserId}
		    , GETDATE()
		    , #{suserId}
		    , 'RCM 반영 [' + #{evlSj} + ']'
	    FROM TB_CW_UPRPD_ELC_CNRL_UPDT
	    WHERE	EVL_ID = #{evlId}
			AND CNRL_ID = #{cnrlId}
	</insert>
  	
  	<!-- 3. 통제 수정정보 테이블의 데이터를 통제 테이블에 update -->
  	<update id="elcCnrlUpdate">
  		UPDATE TB_CW_ELC_RCM_CNRL
		SET 
			( 
			  CNRL_NO, CNRL_NM, CNRL_CN
		    , KEY_CNRL_AT
		    , REFRN_NO, CNRL_RELATE_REF
			, CNRL_EXC_UPPER_DEPT, CNRL_EXC_DEPT, CNRL_EXCBER, CNRL_RSPNSBL_UPPER_DEPT, CNRL_RSPNSBL_DEPT, CNRL_RSPNBER
			, RELATE_REGLTN_NM, CNRL_RELATE_DOC, CNRL_RELATE_SYS, CNRL_RM
			, CNRL_PURPS, CNRL_PURPS_CD_ID, CNRL_PURPS_FNNR_RLABLTY, CNRL_PURPS_ASSET_PRTC, CNRL_PURPS_INSTC_PRVN
			, CNRL_TY_CD_ID, CNRL_TY_CECK01, CNRL_TY_CECK02, CNRL_TY_CECK03, CNRL_TY_CECK04, CNRL_TY_CECK05, CNRL_TY_CECK06, CNRL_TY_CECK07, CNRL_TY_CECK08, CNRL_TY_CECK09
			, CNRL_TY01_CD_ID, CNRL_TY03_CD_ID, CNRL_TY02_CD_ID
			, DELNG_TY_CD_ID, CNRL_CTGRY, CNRL_CYCLE_CD_ID
			, CNRL_CYCLE01, CNRL_CYCLE02, CNRL_CYCLE03, CNRL_CYCLE04, CNRL_CYCLE05, CNRL_CYCLE06, CNRL_CYCLE07, CNRL_CYCLE08, CNRL_CYCLE09
			, OFFICE_TY_CD_ID, DSGN_EFCT_AT, OPER_EFCT_AT, CNRL_UPRPD_NO
			, MRC_CNRL_AT, MRC_CTGRY_CD_ID, MRC_NO, IPE_CNRL_AT, IPE_CTGRY_CD_ID, IPE_NO, IPE_NM, IPE_TEST_PROCSS
			, COSO_NO
			, TEST_CYCLE_CD_ID
			, TEST_CYCLE01, TEST_CYCLE02, TEST_CYCLE03, TEST_CYCLE04, TEST_CYCLE05, TEST_CYCLE06, TEST_CYCLE07, TEST_CYCLE08, TEST_CYCLE09
			, TEST_RELATE_DOC, TEST_TRGET, SAMPLE_SIZE, TEST_PROCSS, EXCP_CNT
			, TEST_MTH, TEST_MTH_QESTN, TEST_MTH_OBSERV, TEST_MTH_VRIFY, TEST_MTH_ECGN, TEST_MTH_SYS_TRACE
			, ATMC_SAMPLE_AT, TEST_SANCTN_AT, ACNT_CD, CNRL_ACNTCTGR, RELATE_ACNTCTGR_PBLNTF, CNRL_CM_IEM
			, ASSE_C_AT, ASSE_E_AT, ASSE_R_AT, ASSE_V_AT, ASSE_P_AT, ASSE_S_AT, ASSE_O_AT, ASSE_A_AT, ASSE_PF_AT
			, TREXAMIN_PROCSS, TREXAMIN_PRUF, TREXAMIN_CNCLSN
			, RISK_RESIDUAL_LIKEHOOD, RISK_RESIDUAL_IMPACT, RISK_RESIDUAL_RATIONG
			, AFTER_RISK_RESIDUAL_LIKEHOOD, AFTER_RISK_RESIDUAL_IMPACT, AFTER_RISK_RESIDUAL_RATIONG, CNRL_IMPRVM_NM, CNRL_IMPRVM_DC
			, FNREP_RISKEVL_CSFCTR01, FNREP_RISKEVL_CSFCTR02, FNREP_RISKEVL_CSFCTR03
            , FNREP_RISKEVL_CSFCTR04, FNREP_RISKEVL_CSFCTR05, FNREP_RISKEVL_CSFCTR06
            , FNREP_RISKEVL_CSFCTR07, FNREP_RISKEVL_CSFCTR08, FNREP_RISKEVL_CSFCTR09, FNREP_RISKEVL_CSFCTR10
            , FNREP_CNRL_RISK_CNCLSN, FNREP_ACNT_RISK_CNCLSN, FNREP_PROCS_RISK_CNCLSN, FNREP_GNRLZ_EVL_CNCLSN
			, UPD_DT
			, UPD_USER_ID
		    ) = ( SELECT
					  CNRL_NO, CNRL_NM, CNRL_CN
				    , KEY_CNRL_AT
				    , REFRN_NO, CNRL_RELATE_REF
					, CNRL_EXC_UPPER_DEPT, CNRL_EXC_DEPT, CNRL_EXCBER, CNRL_RSPNSBL_UPPER_DEPT, CNRL_RSPNSBL_DEPT, CNRL_RSPNBER
					, RELATE_REGLTN_NM, CNRL_RELATE_DOC, CNRL_RELATE_SYS, CNRL_RM
					, CNRL_PURPS, CNRL_PURPS_CD_ID, CNRL_PURPS_FNNR_RLABLTY, CNRL_PURPS_ASSET_PRTC, CNRL_PURPS_INSTC_PRVN
					, CNRL_TY_CD_ID, CNRL_TY_CECK01, CNRL_TY_CECK02, CNRL_TY_CECK03, CNRL_TY_CECK04, CNRL_TY_CECK05, CNRL_TY_CECK06, CNRL_TY_CECK07, CNRL_TY_CECK08, CNRL_TY_CECK09
					, CNRL_TY01_CD_ID, CNRL_TY03_CD_ID, CNRL_TY02_CD_ID
					, DELNG_TY_CD_ID, CNRL_CTGRY, CNRL_CYCLE_CD_ID
					, CNRL_CYCLE01, CNRL_CYCLE02, CNRL_CYCLE03, CNRL_CYCLE04, CNRL_CYCLE05, CNRL_CYCLE06, CNRL_CYCLE07, CNRL_CYCLE08, CNRL_CYCLE09
					, OFFICE_TY_CD_ID, DSGN_EFCT_AT, OPER_EFCT_AT, CNRL_UPRPD_NO
					, MRC_CNRL_AT, MRC_CTGRY_CD_ID, MRC_NO, IPE_CNRL_AT, IPE_CTGRY_CD_ID, IPE_NO, IPE_NM, IPE_TEST_PROCSS
					, COSO_NO
					, TEST_CYCLE_CD_ID
					, TEST_CYCLE01, TEST_CYCLE02, TEST_CYCLE03, TEST_CYCLE04, TEST_CYCLE05, TEST_CYCLE06, TEST_CYCLE07, TEST_CYCLE08, TEST_CYCLE09
					, TEST_RELATE_DOC, TEST_TRGET, SAMPLE_SIZE, TEST_PROCSS, EXCP_CNT
					, TEST_MTH, TEST_MTH_QESTN, TEST_MTH_OBSERV, TEST_MTH_VRIFY, TEST_MTH_ECGN, TEST_MTH_SYS_TRACE
					, ATMC_SAMPLE_AT, TEST_SANCTN_AT, ACNT_CD, CNRL_ACNTCTGR, RELATE_ACNTCTGR_PBLNTF, CNRL_CM_IEM
					, ASSE_C_AT, ASSE_E_AT, ASSE_R_AT, ASSE_V_AT, ASSE_P_AT, ASSE_S_AT, ASSE_O_AT, ASSE_A_AT, ASSE_PF_AT
					, TREXAMIN_PROCSS, TREXAMIN_PRUF, TREXAMIN_CNCLSN
					, RISK_RESIDUAL_LIKEHOOD, RISK_RESIDUAL_IMPACT, RISK_RESIDUAL_RATIONG
					, AFTER_RISK_RESIDUAL_LIKEHOOD, AFTER_RISK_RESIDUAL_IMPACT, AFTER_RISK_RESIDUAL_RATIONG, CNRL_IMPRVM_NM, CNRL_IMPRVM_DC
					, FNREP_RISKEVL_CSFCTR01, FNREP_RISKEVL_CSFCTR02, FNREP_RISKEVL_CSFCTR03
                    , FNREP_RISKEVL_CSFCTR04, FNREP_RISKEVL_CSFCTR05, FNREP_RISKEVL_CSFCTR06
                    , FNREP_RISKEVL_CSFCTR07, FNREP_RISKEVL_CSFCTR08, FNREP_RISKEVL_CSFCTR09, FNREP_RISKEVL_CSFCTR10
                    , FNREP_CNRL_RISK_CNCLSN, FNREP_ACNT_RISK_CNCLSN, FNREP_PROCS_RISK_CNCLSN, FNREP_GNRLZ_EVL_CNCLSN
					, GETDATE()
					, #{suserId}                
				FROM TB_CW_UPRPD_ELC_CNRL_UPDT
				WHERE 
					EVL_ID = #{evlId}
					AND CNRL_ID = #{cnrlId}
				)
			WHERE CNRL_ID = #{cnrlId}
  	</update>

  	<!-- 4. 통제 수정정보 테이블 update -->
  	<update id="elcCnrlUpdtUpdate">
  		UPDATE TB_CW_UPRPD_ELC_CNRL_UPDT
		SET   REFLCT_BGNTMSTMP = #{bgntmstmp}
			, STTUS_CD_ID = #{reflctSttusCdId}
			, REFLCT_AT = #{reflctAt}
		    , REFLCT_DT = GETDATE()
		WHERE EVL_ID = #{evlId}
		AND CNRL_ID = #{cnrlId}
  	</update>
  	<!-- ELC 반영 버튼 part 종료 -->
  	
  	<!-- ELC 반영 취소버튼 part 시작 -->
  	<!-- 1. 반영취소 가능 여부 확인 -->
  	<!-- 2. 최신이력 이전 데이터 기준일자 조회 -->
  	
  	<!-- 3. 통제 이력 테이블의 정보를 통제 이력 테이블에 insert -->
  	<update id="elcCnrlHistCanclSave">
	    INSERT INTO TB_CW_ELC_RCM_CNRL_HIST 
	    	(
		      CNRL_ID
		    , BGNTMSTMP
		    , ENDTMSTMP
		    , CNRL_NO, CNRL_NM, CNRL_CN
		    , KEY_CNRL_AT
		    , REFRN_NO, CNRL_RELATE_REF
			, CNRL_EXC_UPPER_DEPT, CNRL_EXC_DEPT, CNRL_EXCBER, CNRL_RSPNSBL_UPPER_DEPT, CNRL_RSPNSBL_DEPT, CNRL_RSPNBER
			, RELATE_REGLTN_NM, CNRL_RELATE_DOC, CNRL_RELATE_SYS, CNRL_RM
			, CNRL_PURPS, CNRL_PURPS_CD_ID, CNRL_PURPS_FNNR_RLABLTY, CNRL_PURPS_ASSET_PRTC, CNRL_PURPS_INSTC_PRVN
			, CNRL_TY_CD_ID, CNRL_TY_CECK01, CNRL_TY_CECK02, CNRL_TY_CECK03, CNRL_TY_CECK04, CNRL_TY_CECK05, CNRL_TY_CECK06, CNRL_TY_CECK07, CNRL_TY_CECK08, CNRL_TY_CECK09
			, CNRL_TY01_CD_ID, CNRL_TY03_CD_ID, CNRL_TY02_CD_ID
			, DELNG_TY_CD_ID, CNRL_CTGRY, CNRL_CYCLE_CD_ID
			, CNRL_CYCLE01, CNRL_CYCLE02, CNRL_CYCLE03, CNRL_CYCLE04, CNRL_CYCLE05, CNRL_CYCLE06, CNRL_CYCLE07, CNRL_CYCLE08, CNRL_CYCLE09
			, OFFICE_TY_CD_ID, DSGN_EFCT_AT, OPER_EFCT_AT, CNRL_UPRPD_NO
			, MRC_CNRL_AT, MRC_CTGRY_CD_ID, MRC_NO, IPE_CNRL_AT, IPE_CTGRY_CD_ID, IPE_NO, IPE_NM, IPE_TEST_PROCSS
			, COSO_NO
			, TEST_CYCLE_CD_ID
			, TEST_CYCLE01, TEST_CYCLE02, TEST_CYCLE03, TEST_CYCLE04, TEST_CYCLE05, TEST_CYCLE06, TEST_CYCLE07, TEST_CYCLE08, TEST_CYCLE09
			, TEST_RELATE_DOC, TEST_TRGET, SAMPLE_SIZE, TEST_PROCSS, EXCP_CNT
			, TEST_MTH, TEST_MTH_QESTN, TEST_MTH_OBSERV, TEST_MTH_VRIFY, TEST_MTH_ECGN, TEST_MTH_SYS_TRACE
			, ATMC_SAMPLE_AT, TEST_SANCTN_AT, ACNT_CD, CNRL_ACNTCTGR, RELATE_ACNTCTGR_PBLNTF, CNRL_CM_IEM
			, ASSE_C_AT, ASSE_E_AT, ASSE_R_AT, ASSE_V_AT, ASSE_P_AT, ASSE_S_AT, ASSE_O_AT, ASSE_A_AT, ASSE_PF_AT
			, TREXAMIN_PROCSS, TREXAMIN_PRUF, TREXAMIN_CNCLSN
			, RISK_RESIDUAL_LIKEHOOD, RISK_RESIDUAL_IMPACT, RISK_RESIDUAL_RATIONG
			, AFTER_RISK_RESIDUAL_LIKEHOOD, AFTER_RISK_RESIDUAL_IMPACT, AFTER_RISK_RESIDUAL_RATIONG, CNRL_IMPRVM_NM, CNRL_IMPRVM_DC
			, FNREP_RISKEVL_CSFCTR01, FNREP_RISKEVL_CSFCTR02, FNREP_RISKEVL_CSFCTR03
            , FNREP_RISKEVL_CSFCTR04, FNREP_RISKEVL_CSFCTR05, FNREP_RISKEVL_CSFCTR06
            , FNREP_RISKEVL_CSFCTR07, FNREP_RISKEVL_CSFCTR08, FNREP_RISKEVL_CSFCTR09, FNREP_RISKEVL_CSFCTR10
            , FNREP_CNRL_RISK_CNCLSN, FNREP_ACNT_RISK_CNCLSN, FNREP_PROCS_RISK_CNCLSN, FNREP_GNRLZ_EVL_CNCLSN
		    , CMPNY_CD_ID
		    , RGS_DT
		    , RGS_USER_ID
		    , UPD_DT
		    , UPD_USER_ID
		    , RM
		)
	    SELECT
			CNRL_ID
		    , #{endtmstmp}
		    , '99991231235959999999'
		     , CNRL_NO, CNRL_NM, CNRL_CN
		    , KEY_CNRL_AT
		    , REFRN_NO, CNRL_RELATE_REF
			, CNRL_EXC_UPPER_DEPT, CNRL_EXC_DEPT, CNRL_EXCBER, CNRL_RSPNSBL_UPPER_DEPT, CNRL_RSPNSBL_DEPT, CNRL_RSPNBER
			, RELATE_REGLTN_NM, CNRL_RELATE_DOC, CNRL_RELATE_SYS, CNRL_RM
			, CNRL_PURPS, CNRL_PURPS_CD_ID, CNRL_PURPS_FNNR_RLABLTY, CNRL_PURPS_ASSET_PRTC, CNRL_PURPS_INSTC_PRVN
			, CNRL_TY_CD_ID, CNRL_TY_CECK01, CNRL_TY_CECK02, CNRL_TY_CECK03, CNRL_TY_CECK04, CNRL_TY_CECK05, CNRL_TY_CECK06, CNRL_TY_CECK07, CNRL_TY_CECK08, CNRL_TY_CECK09
			, CNRL_TY01_CD_ID, CNRL_TY03_CD_ID, CNRL_TY02_CD_ID
			, DELNG_TY_CD_ID, CNRL_CTGRY, CNRL_CYCLE_CD_ID
			, CNRL_CYCLE01, CNRL_CYCLE02, CNRL_CYCLE03, CNRL_CYCLE04, CNRL_CYCLE05, CNRL_CYCLE06, CNRL_CYCLE07, CNRL_CYCLE08, CNRL_CYCLE09
			, OFFICE_TY_CD_ID, DSGN_EFCT_AT, OPER_EFCT_AT, CNRL_UPRPD_NO
			, MRC_CNRL_AT, MRC_CTGRY_CD_ID, MRC_NO, IPE_CNRL_AT, IPE_CTGRY_CD_ID, IPE_NO, IPE_NM, IPE_TEST_PROCSS
			, COSO_NO
			, TEST_CYCLE_CD_ID
			, TEST_CYCLE01, TEST_CYCLE02, TEST_CYCLE03, TEST_CYCLE04, TEST_CYCLE05, TEST_CYCLE06, TEST_CYCLE07, TEST_CYCLE08, TEST_CYCLE09
			, TEST_RELATE_DOC, TEST_TRGET, SAMPLE_SIZE, TEST_PROCSS, EXCP_CNT
			, TEST_MTH, TEST_MTH_QESTN, TEST_MTH_OBSERV, TEST_MTH_VRIFY, TEST_MTH_ECGN, TEST_MTH_SYS_TRACE
			, ATMC_SAMPLE_AT, TEST_SANCTN_AT, ACNT_CD, CNRL_ACNTCTGR, RELATE_ACNTCTGR_PBLNTF, CNRL_CM_IEM
			, ASSE_C_AT, ASSE_E_AT, ASSE_R_AT, ASSE_V_AT, ASSE_P_AT, ASSE_S_AT, ASSE_O_AT, ASSE_A_AT, ASSE_PF_AT
			, TREXAMIN_PROCSS, TREXAMIN_PRUF, TREXAMIN_CNCLSN
			, RISK_RESIDUAL_LIKEHOOD, RISK_RESIDUAL_IMPACT, RISK_RESIDUAL_RATIONG
			, AFTER_RISK_RESIDUAL_LIKEHOOD, AFTER_RISK_RESIDUAL_IMPACT, AFTER_RISK_RESIDUAL_RATIONG, CNRL_IMPRVM_NM, CNRL_IMPRVM_DC
			, FNREP_RISKEVL_CSFCTR01, FNREP_RISKEVL_CSFCTR02, FNREP_RISKEVL_CSFCTR03
            , FNREP_RISKEVL_CSFCTR04, FNREP_RISKEVL_CSFCTR05, FNREP_RISKEVL_CSFCTR06
            , FNREP_RISKEVL_CSFCTR07, FNREP_RISKEVL_CSFCTR08, FNREP_RISKEVL_CSFCTR09, FNREP_RISKEVL_CSFCTR10
            , FNREP_CNRL_RISK_CNCLSN, FNREP_ACNT_RISK_CNCLSN, FNREP_PROCS_RISK_CNCLSN, FNREP_GNRLZ_EVL_CNCLSN
		    , #{cmpnyCdId}
		    , GETDATE()
		    , #{suserId}
		    , GETDATE()
		    , #{suserId}
		    , '반영취소 [' + #{evlSj} + ']'
			FROM TB_CW_ELC_RCM_CNRL_HIST
			WHERE 
				CNRL_ID = #{cnrlId}
	          	AND BGNTMSTMP = #{reflctBgntmstmp}
  	</update>
  	<!-- 4. 통제 이력 테이블의 정보를 통제 테이블로 원복 -->
  	<update id="elcCnrlRollbackUpdate">
  		UPDATE TB_CW_ELC_RCM_CNRL
		SET 
			( 
			  CNRL_NO, CNRL_NM, CNRL_CN
		    , KEY_CNRL_AT
		    , REFRN_NO, CNRL_RELATE_REF
			, CNRL_EXC_UPPER_DEPT, CNRL_EXC_DEPT, CNRL_EXCBER, CNRL_RSPNSBL_UPPER_DEPT, CNRL_RSPNSBL_DEPT, CNRL_RSPNBER
			, RELATE_REGLTN_NM, CNRL_RELATE_DOC, CNRL_RELATE_SYS, CNRL_RM
			, CNRL_PURPS, CNRL_PURPS_CD_ID, CNRL_PURPS_FNNR_RLABLTY, CNRL_PURPS_ASSET_PRTC, CNRL_PURPS_INSTC_PRVN
			, CNRL_TY_CD_ID, CNRL_TY_CECK01, CNRL_TY_CECK02, CNRL_TY_CECK03, CNRL_TY_CECK04, CNRL_TY_CECK05, CNRL_TY_CECK06, CNRL_TY_CECK07, CNRL_TY_CECK08, CNRL_TY_CECK09
			, CNRL_TY01_CD_ID, CNRL_TY03_CD_ID, CNRL_TY02_CD_ID
			, DELNG_TY_CD_ID, CNRL_CTGRY, CNRL_CYCLE_CD_ID
			, CNRL_CYCLE01, CNRL_CYCLE02, CNRL_CYCLE03, CNRL_CYCLE04, CNRL_CYCLE05, CNRL_CYCLE06, CNRL_CYCLE07, CNRL_CYCLE08, CNRL_CYCLE09
			, OFFICE_TY_CD_ID, DSGN_EFCT_AT, OPER_EFCT_AT, CNRL_UPRPD_NO
			, MRC_CNRL_AT, MRC_CTGRY_CD_ID, MRC_NO, IPE_CNRL_AT, IPE_CTGRY_CD_ID, IPE_NO, IPE_NM, IPE_TEST_PROCSS
			, COSO_NO
			, TEST_CYCLE_CD_ID
			, TEST_CYCLE01, TEST_CYCLE02, TEST_CYCLE03, TEST_CYCLE04, TEST_CYCLE05, TEST_CYCLE06, TEST_CYCLE07, TEST_CYCLE08, TEST_CYCLE09
			, TEST_RELATE_DOC, TEST_TRGET, SAMPLE_SIZE, TEST_PROCSS, EXCP_CNT
			, TEST_MTH, TEST_MTH_QESTN, TEST_MTH_OBSERV, TEST_MTH_VRIFY, TEST_MTH_ECGN, TEST_MTH_SYS_TRACE
			, ATMC_SAMPLE_AT, TEST_SANCTN_AT, ACNT_CD, CNRL_ACNTCTGR, RELATE_ACNTCTGR_PBLNTF, CNRL_CM_IEM
			, ASSE_C_AT, ASSE_E_AT, ASSE_R_AT, ASSE_V_AT, ASSE_P_AT, ASSE_S_AT, ASSE_O_AT, ASSE_A_AT, ASSE_PF_AT
			, TREXAMIN_PROCSS, TREXAMIN_PRUF, TREXAMIN_CNCLSN
			, RISK_RESIDUAL_LIKEHOOD, RISK_RESIDUAL_IMPACT, RISK_RESIDUAL_RATIONG
			, AFTER_RISK_RESIDUAL_LIKEHOOD, AFTER_RISK_RESIDUAL_IMPACT, AFTER_RISK_RESIDUAL_RATIONG, CNRL_IMPRVM_NM, CNRL_IMPRVM_DC
			, FNREP_RISKEVL_CSFCTR01, FNREP_RISKEVL_CSFCTR02, FNREP_RISKEVL_CSFCTR03
            , FNREP_RISKEVL_CSFCTR04, FNREP_RISKEVL_CSFCTR05, FNREP_RISKEVL_CSFCTR06
            , FNREP_RISKEVL_CSFCTR07, FNREP_RISKEVL_CSFCTR08, FNREP_RISKEVL_CSFCTR09, FNREP_RISKEVL_CSFCTR10
            , FNREP_CNRL_RISK_CNCLSN, FNREP_ACNT_RISK_CNCLSN, FNREP_PROCS_RISK_CNCLSN, FNREP_GNRLZ_EVL_CNCLSN
			, UPD_DT
			, UPD_USER_ID
			) = ( SELECT
					  CNRL_NO, CNRL_NM, CNRL_CN
				    , KEY_CNRL_AT
				    , REFRN_NO, CNRL_RELATE_REF
					, CNRL_EXC_UPPER_DEPT, CNRL_EXC_DEPT, CNRL_EXCBER, CNRL_RSPNSBL_UPPER_DEPT, CNRL_RSPNSBL_DEPT, CNRL_RSPNBER
					, RELATE_REGLTN_NM, CNRL_RELATE_DOC, CNRL_RELATE_SYS, CNRL_RM
					, CNRL_PURPS, CNRL_PURPS_CD_ID, CNRL_PURPS_FNNR_RLABLTY, CNRL_PURPS_ASSET_PRTC, CNRL_PURPS_INSTC_PRVN
					, CNRL_TY_CD_ID, CNRL_TY_CECK01, CNRL_TY_CECK02, CNRL_TY_CECK03, CNRL_TY_CECK04, CNRL_TY_CECK05, CNRL_TY_CECK06, CNRL_TY_CECK07, CNRL_TY_CECK08, CNRL_TY_CECK09
					, CNRL_TY01_CD_ID, CNRL_TY03_CD_ID, CNRL_TY02_CD_ID
					, DELNG_TY_CD_ID, CNRL_CTGRY, CNRL_CYCLE_CD_ID
					, CNRL_CYCLE01, CNRL_CYCLE02, CNRL_CYCLE03, CNRL_CYCLE04, CNRL_CYCLE05, CNRL_CYCLE06, CNRL_CYCLE07, CNRL_CYCLE08, CNRL_CYCLE09
					, OFFICE_TY_CD_ID, DSGN_EFCT_AT, OPER_EFCT_AT, CNRL_UPRPD_NO
					, MRC_CNRL_AT, MRC_CTGRY_CD_ID, MRC_NO, IPE_CNRL_AT, IPE_CTGRY_CD_ID, IPE_NO, IPE_NM, IPE_TEST_PROCSS
					, COSO_NO
					, TEST_CYCLE_CD_ID
					, TEST_CYCLE01, TEST_CYCLE02, TEST_CYCLE03, TEST_CYCLE04, TEST_CYCLE05, TEST_CYCLE06, TEST_CYCLE07, TEST_CYCLE08, TEST_CYCLE09
					, TEST_RELATE_DOC, TEST_TRGET, SAMPLE_SIZE, TEST_PROCSS, EXCP_CNT
					, TEST_MTH, TEST_MTH_QESTN, TEST_MTH_OBSERV, TEST_MTH_VRIFY, TEST_MTH_ECGN, TEST_MTH_SYS_TRACE
					, ATMC_SAMPLE_AT, TEST_SANCTN_AT, ACNT_CD, CNRL_ACNTCTGR, RELATE_ACNTCTGR_PBLNTF, CNRL_CM_IEM
					, ASSE_C_AT, ASSE_E_AT, ASSE_R_AT, ASSE_V_AT, ASSE_P_AT, ASSE_S_AT, ASSE_O_AT, ASSE_A_AT, ASSE_PF_AT
					, TREXAMIN_PROCSS, TREXAMIN_PRUF, TREXAMIN_CNCLSN
					, RISK_RESIDUAL_LIKEHOOD, RISK_RESIDUAL_IMPACT, RISK_RESIDUAL_RATIONG
					, AFTER_RISK_RESIDUAL_LIKEHOOD, AFTER_RISK_RESIDUAL_IMPACT, AFTER_RISK_RESIDUAL_RATIONG, CNRL_IMPRVM_NM, CNRL_IMPRVM_DC
					, FNREP_RISKEVL_CSFCTR01, FNREP_RISKEVL_CSFCTR02, FNREP_RISKEVL_CSFCTR03
                    , FNREP_RISKEVL_CSFCTR04, FNREP_RISKEVL_CSFCTR05, FNREP_RISKEVL_CSFCTR06
                    , FNREP_RISKEVL_CSFCTR07, FNREP_RISKEVL_CSFCTR08, FNREP_RISKEVL_CSFCTR09, FNREP_RISKEVL_CSFCTR10
                    , FNREP_CNRL_RISK_CNCLSN, FNREP_ACNT_RISK_CNCLSN, FNREP_PROCS_RISK_CNCLSN, FNREP_GNRLZ_EVL_CNCLSN
					, GETDATE()
					, #{suserId}          
				FROM TB_CW_ELC_RCM_CNRL_HIST
				WHERE 
					CNRL_ID = #{cnrlId}
		          	AND BGNTMSTMP = #{reflctBgntmstmp}
		        )
			WHERE CNRL_ID = #{cnrlId}
  	</update>
  	<!-- ELC 반영 취소버튼 part 종료 -->
  	
  	
  	
<!-- ELC 규준문서 반영 버튼 part 시작 -->
  	<!-- 1. ELC 규준문서 이력 테이블의 종료 타임스탬프 업데이트 -->
  	<update id="elcDocHistEndstampUpdate">
	    UPDATE TB_CW_ELC_RCM_DOC_HIST
		SET 
			  ENDTMSTMP = #{endtmstmp}
			, UPD_USER_ID = #{suserId}
			, UPD_DT = GETDATE()
	    WHERE PROCS_ID = #{objectId}
	    AND ENDTMSTMP = '99991231235959999999'
	</update>
  	
  	<!-- 2. 규준문서 테이블의 데이터를 규준문서 이력테이블에 insert -->
  	<insert id="elcDocHistSave">
	    INSERT INTO TB_CW_ELC_RCM_DOC_HIST 
	    ( 	  PROCS_ID
			, UNITY_ID
		    , BGNTMSTMP
		    , ENDTMSTMP
		    , CMPNY_CD_ID
		    , RGS_DT
		    , RGS_USER_ID
		    , UPD_DT
		    , UPD_USER_ID
		    , RM
		) VALUES (
      		  #{objectId}
			, ISNULL(( SELECT UNITY_ID FROM TB_CW_EVL_RCM_DOC_UPDT WHERE EVL_ID = #{evlId} AND PROCS_ID = #{objectId} ), 'NULL')
		    , #{bgntmstmp}
		    , '99991231235959999999'
		    , #{cmpnyCdId}
		    , GETDATE()
		    , #{suserId}
		    , GETDATE()
		    , #{suserId}
		    , '규준문서 반영 [' + #{evlSj} + ']'
		)
	</insert>
  	
  	<!-- 3. ELC 규준문서  수정정보 테이블의 데이터를 통제 테이블에 update -->
  	<update id="elcDocUpdate">
  		MERGE INTO TB_CW_ELC_RCM_DOC T1
  		USING (VALUES (1)) AS Source (Number) 
		ON ( T1.PROCS_ID = #{objectId} )
		WHEN MATCHED THEN
		 		UPDATE SET 
		 			  UNITY_ID 		= ISNULL(( SELECT UNITY_ID FROM TB_CW_EVL_RCM_DOC_UPDT WHERE EVL_ID = #{evlId} AND PROCS_ID = #{objectId} ), 'NULL')
					, UPD_DT 		= GETDATE()
					, UPD_USER_ID 	= #{suserId}
		WHEN NOT MATCHED THEN 
    	INSERT (
    		  PROCS_ID, UNITY_ID
			, RGS_DT, RGS_USER_ID, UPD_DT, UPD_USER_ID
    	) VALUES (
    		  #{objectId}, ISNULL(( SELECT UNITY_ID FROM TB_CW_EVL_RCM_DOC_UPDT WHERE EVL_ID = #{evlId} AND PROCS_ID = #{objectId} ), 'NULL')
    		, GETDATE(), #{suserId}, GETDATE(), #{suserId}
    	)
  	</update>
  	
  	<!-- 4. ELC 규준문서  수정정보 테이블 update -->
  	<update id="elcDocUpdtUpdate">
  		UPDATE TB_CW_EVL_RCM_DOC_UPDT
		SET   REFLCT_BGNTMSTMP = #{bgntmstmp}
			, STTUS_CD_ID = #{reflctSttusCdId}
			, REFLCT_AT = #{reflctAt}
		    , REFLCT_DT = GETDATE()
		WHERE EVL_ID = #{evlId}
		AND PROCS_ID = #{objectId}
  	</update>
  	<!-- ELC 규준문서 반영 버튼 part 종료 -->
  	
  	<!-- ELC 규준문서 반영 취소버튼 part 시작 -->
  	<!-- 3. ELC 규준문서  이력 테이블의 정보를 PLC 규준문서  이력 테이블에 insert -->
  	<update id="elcDocHistCanclSave">
	    INSERT INTO TB_CW_ELC_RCM_DOC_HIST 
    	(     PROCS_ID
			, UNITY_ID
		    , BGNTMSTMP
		    , ENDTMSTMP
		    , CMPNY_CD_ID
		    , RGS_DT
		    , RGS_USER_ID
		    , UPD_DT
		    , UPD_USER_ID
		    , RM
	    ) VALUES (
		      #{objectId}
			, ISNULL(( SELECT UNITY_ID FROM TB_CW_ELC_RCM_DOC_HIST WHERE PROCS_ID = #{objectId} AND BGNTMSTMP = #{reflctBgntmstmp} ), 'NULL')
			, #{endtmstmp}
		    , '99991231235959999999'
		    , #{cmpnyCdId}
		    , GETDATE()
		    , #{suserId}
		    , GETDATE()
		    , #{suserId}
		    , '반영취소 [' + #{evlSj} + ']'
	    )
  	</update>
  	<!-- 4. 규준문서 이력 테이블의 정보를 규준문서 테이블로 원복 -->
  	<update id="elcDocRollbackUpdate">
  		UPDATE TB_CW_ELC_RCM_DOC
		SET   UNITY_ID 		= ISNULL(( SELECT UNITY_ID FROM TB_CW_ELC_RCM_DOC_HIST WHERE PROCS_ID = #{objectId} AND BGNTMSTMP = #{reflctBgntmstmp} ), 'NULL')
			, UPD_DT 		= GETDATE()
			, UPD_USER_ID 	= #{suserId}
		WHERE PROCS_ID 		= #{objectId}
  	</update>
<!-- PLC 규준문서 반영 취소버튼 part 종료 -->
  	
  	
	<!-- 통제 RCM개선 반영 현황  목록 -->
	<select id="cnrlUpdtList" resultType="EgovMap">
		SELECT 
			  UP.EVL_ID
			, UP.OBJECT_ID
			, 'PLC' AS EVL_TY
			, M.OBJECT_KND_CD_ID
			, UPS.POSMANT_SN
			, ECU.REFLCT_AT
			, CONVERT ( VARCHAR , ECU.REFLCT_DT , 23 ) AS REFLCT_DE 
			, CONVERT ( VARCHAR , ECU.REFLCT_DT , 23 ) + ' ' + CONVERT ( VARCHAR , ECU.REFLCT_DT , 8) AS REFLCT_DT
			, EC.CNRL_NM
			, EC.CNRL_NO
			, EC.CNRL_CN
			, EC.OFFICE_TY_CD_ID
			, EC.KEY_CNRL_AT
	        , EC.MRC_CNRL_AT
	        , EC.IPE_CNRL_AT
			, EC.REFRN_NO
			/** 수정여부 수정된 컬럼 오리지널과 UPDT를 비교해서 같으면 변경 안됨, 양쪽 모두 NULL이면 변경안됨, UPDT_CNRL_ID가 없으면 NULL, 
				수정된 컬럼 오리지널과 UPDT를 비교해서 다르고 양쪽 모두 NULL이 아니고 UPDT_CNRL_ID가 있으면! NULL아닐 경우 변경된 정보 출력 NULL일 경우 삭제 출력 
			, CASE WHEN EC.ACNT_CD 						= ECU.ACNT_CD 						THEN NULL WHEN EC.ACNT_CD 						IS NULL AND ECU.ACNT_CD 						IS NULL THEN NULL WHEN ECU.ACNT_CD 						IS NULL THEN NULL ELSE 'Y' END 		AS 	ACNT_CD_AT
			, CASE WHEN EC.AFTER_RISK_RESIDUAL_IMPACT 	= ECU.AFTER_RISK_RESIDUAL_IMPACT 	THEN NULL WHEN EC.AFTER_RISK_RESIDUAL_IMPACT 	IS NULL AND ECU.AFTER_RISK_RESIDUAL_IMPACT 		IS NULL THEN NULL WHEN ECU.AFTER_RISK_RESIDUAL_IMPACT 	IS NULL THEN NULL ELSE 'Y' END 		AS 	AR_RESIDUAL_IMPACT_AT
			, CASE WHEN EC.AFTER_RISK_RESIDUAL_LIKEHOOD = ECU.AFTER_RISK_RESIDUAL_LIKEHOOD 	THEN NULL WHEN EC.AFTER_RISK_RESIDUAL_LIKEHOOD 	IS NULL AND ECU.AFTER_RISK_RESIDUAL_LIKEHOOD 	IS NULL THEN NULL WHEN ECU.AFTER_RISK_RESIDUAL_LIKEHOOD IS NULL THEN NULL ELSE 'Y' END 		AS 	AR_RESIDUAL_LIKEHOOD_AT
			, CASE WHEN EC.AFTER_RISK_RESIDUAL_RATIONG 	= ECU.AFTER_RISK_RESIDUAL_RATIONG 	THEN NULL WHEN EC.AFTER_RISK_RESIDUAL_RATIONG 	IS NULL AND ECU.AFTER_RISK_RESIDUAL_RATIONG 	IS NULL THEN NULL WHEN ECU.AFTER_RISK_RESIDUAL_RATIONG 	IS NULL THEN NULL ELSE 'Y' END 		AS 	AR_RESIDUAL_RATIONG_AT
			, CASE WHEN EC.ASSE_A_AT 					= ECU.ASSE_A_AT 					THEN NULL WHEN EC.ASSE_A_AT 					IS NULL AND ECU.ASSE_A_AT 						IS NULL THEN NULL WHEN ECU.ASSE_A_AT  					IS NULL THEN NULL ELSE 'Y' END 		AS 	ASSE_A_AT_AT
			, CASE WHEN EC.ASSE_C_AT 					= ECU.ASSE_C_AT 					THEN NULL WHEN EC.ASSE_C_AT 					IS NULL AND ECU.ASSE_C_AT 						IS NULL THEN NULL WHEN ECU.ASSE_C_AT  					IS NULL THEN NULL ELSE 'Y' END 		AS 	ASSE_C_AT_AT
			, CASE WHEN EC.ASSE_E_AT 					= ECU.ASSE_E_AT 					THEN NULL WHEN EC.ASSE_E_AT 					IS NULL AND ECU.ASSE_E_AT 						IS NULL THEN NULL WHEN ECU.ASSE_E_AT  					IS NULL THEN NULL ELSE 'Y' END 		AS 	ASSE_E_AT_AT
			, CASE WHEN EC.ASSE_O_AT 					= ECU.ASSE_O_AT 					THEN NULL WHEN EC.ASSE_O_AT 					IS NULL AND ECU.ASSE_O_AT 						IS NULL THEN NULL WHEN ECU.ASSE_O_AT  					IS NULL THEN NULL ELSE 'Y' END 		AS 	ASSE_O_AT_AT
			, CASE WHEN EC.ASSE_P_AT 					= ECU.ASSE_P_AT 					THEN NULL WHEN EC.ASSE_P_AT 					IS NULL AND ECU.ASSE_P_AT 						IS NULL THEN NULL WHEN ECU.ASSE_P_AT  					IS NULL THEN NULL ELSE 'Y' END 		AS 	ASSE_P_AT_AT
			, CASE WHEN EC.ASSE_PF_AT 					= ECU.ASSE_PF_AT 					THEN NULL WHEN EC.ASSE_PF_AT 					IS NULL AND ECU.ASSE_PF_AT						IS NULL THEN NULL WHEN ECU.ASSE_PF_AT 					IS NULL THEN NULL ELSE 'Y' END 		AS 	ASSE_PF_AT_AT
			, CASE WHEN EC.ASSE_R_AT 					= ECU.ASSE_R_AT 					THEN NULL WHEN EC.ASSE_R_AT 					IS NULL AND ECU.ASSE_R_AT 						IS NULL THEN NULL WHEN ECU.ASSE_R_AT  					IS NULL THEN NULL ELSE 'Y' END 		AS 	ASSE_R_AT_AT
			, CASE WHEN EC.ASSE_S_AT 					= ECU.ASSE_S_AT 					THEN NULL WHEN EC.ASSE_S_AT 					IS NULL AND ECU.ASSE_S_AT 						IS NULL THEN NULL WHEN ECU.ASSE_S_AT  					IS NULL THEN NULL ELSE 'Y' END 		AS 	ASSE_S_AT_AT
			, CASE WHEN EC.ASSE_V_AT 					= ECU.ASSE_V_AT 					THEN NULL WHEN EC.ASSE_V_AT 					IS NULL AND ECU.ASSE_V_AT 						IS NULL THEN NULL WHEN ECU.ASSE_V_AT  					IS NULL THEN NULL ELSE 'Y' END 		AS 	ASSE_V_AT_AT
			, CASE WHEN EC.ATMC_SAMPLE_AT 				= ECU.ATMC_SAMPLE_AT 				THEN NULL WHEN EC.ATMC_SAMPLE_AT 				IS NULL AND ECU.ATMC_SAMPLE_AT 					IS NULL THEN NULL WHEN ECU.ATMC_SAMPLE_AT  				IS NULL THEN NULL ELSE 'Y' END 		AS 	ATMC_SAMPLE_AT_AT
			, CASE WHEN EC.CNRL_ACNTCTGR 				= ECU.CNRL_ACNTCTGR 				THEN NULL WHEN EC.CNRL_ACNTCTGR 				IS NULL AND ECU.CNRL_ACNTCTGR 					IS NULL THEN NULL WHEN ECU.CNRL_ACNTCTGR  				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_ACNTCTGR_AT
			, CASE WHEN EC.CNRL_CM_IEM 					= ECU.CNRL_CM_IEM 					THEN NULL WHEN EC.CNRL_CM_IEM 					IS NULL AND ECU.CNRL_CM_IEM 					IS NULL THEN NULL WHEN ECU.CNRL_CM_IEM  				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_CM_IEM_AT
			, CASE WHEN EC.CNRL_CN 						= ECU.CNRL_CN 						THEN NULL WHEN EC.CNRL_CN 						IS NULL AND ECU.CNRL_CN 						IS NULL THEN NULL WHEN ECU.CNRL_CN  					IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_CN_AT
			, CASE WHEN EC.CNRL_CTGRY 					= ECU.CNRL_CTGRY 					THEN NULL WHEN EC.CNRL_CTGRY 					IS NULL AND ECU.CNRL_CTGRY 						IS NULL THEN NULL WHEN ECU.CNRL_CTGRY  					IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_CTGRY_AT
			, CASE WHEN EC.CNRL_CYCLE_CD_ID 			= ECU.CNRL_CYCLE_CD_ID 				THEN NULL WHEN EC.CNRL_CYCLE_CD_ID 				IS NULL AND ECU.CNRL_CYCLE_CD_ID 				IS NULL THEN NULL WHEN ECU.CNRL_CYCLE_CD_ID  			IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_CYCLE_CD_ID_AT
			, CASE WHEN EC.CNRL_CYCLE01					= ECU.CNRL_CYCLE01 					THEN NULL WHEN EC.CNRL_CYCLE01 					IS NULL AND ECU.CNRL_CYCLE01 					IS NULL THEN NULL WHEN ECU.CNRL_CYCLE01  				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_CYCLE01_AT
			, CASE WHEN EC.CNRL_CYCLE02					= ECU.CNRL_CYCLE02 					THEN NULL WHEN EC.CNRL_CYCLE02 					IS NULL AND ECU.CNRL_CYCLE02 					IS NULL THEN NULL WHEN ECU.CNRL_CYCLE02  				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_CYCLE02_AT
			, CASE WHEN EC.CNRL_CYCLE03					= ECU.CNRL_CYCLE03 					THEN NULL WHEN EC.CNRL_CYCLE03 					IS NULL AND ECU.CNRL_CYCLE03 					IS NULL THEN NULL WHEN ECU.CNRL_CYCLE03  				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_CYCLE03_AT
			, CASE WHEN EC.CNRL_CYCLE04					= ECU.CNRL_CYCLE04 					THEN NULL WHEN EC.CNRL_CYCLE04 					IS NULL AND ECU.CNRL_CYCLE04 					IS NULL THEN NULL WHEN ECU.CNRL_CYCLE04  				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_CYCLE04_AT
			, CASE WHEN EC.CNRL_CYCLE05					= ECU.CNRL_CYCLE05 					THEN NULL WHEN EC.CNRL_CYCLE05 					IS NULL AND ECU.CNRL_CYCLE05 					IS NULL THEN NULL WHEN ECU.CNRL_CYCLE05  				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_CYCLE05_AT
			, CASE WHEN EC.CNRL_CYCLE06					= ECU.CNRL_CYCLE06 					THEN NULL WHEN EC.CNRL_CYCLE06 					IS NULL AND ECU.CNRL_CYCLE06 					IS NULL THEN NULL WHEN ECU.CNRL_CYCLE06  				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_CYCLE06_AT
			, CASE WHEN EC.CNRL_CYCLE07					= ECU.CNRL_CYCLE07 					THEN NULL WHEN EC.CNRL_CYCLE07 					IS NULL AND ECU.CNRL_CYCLE07 					IS NULL THEN NULL WHEN ECU.CNRL_CYCLE07  				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_CYCLE07_AT
			, CASE WHEN EC.CNRL_CYCLE08					= ECU.CNRL_CYCLE08 					THEN NULL WHEN EC.CNRL_CYCLE08 					IS NULL AND ECU.CNRL_CYCLE08 					IS NULL THEN NULL WHEN ECU.CNRL_CYCLE08  				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_CYCLE08_AT
			, CASE WHEN EC.CNRL_CYCLE09					= ECU.CNRL_CYCLE09 					THEN NULL WHEN EC.CNRL_CYCLE09 					IS NULL AND ECU.CNRL_CYCLE09 					IS NULL THEN NULL WHEN ECU.CNRL_CYCLE09  				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_CYCLE09_AT
			, CASE WHEN EC.CNRL_EXC_DEPT 				= ECU.CNRL_EXC_DEPT 				THEN NULL WHEN EC.CNRL_EXC_DEPT 				IS NULL AND ECU.CNRL_EXC_DEPT 					IS NULL THEN NULL WHEN ECU.CNRL_EXC_DEPT  				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_EXC_DEPT_AT
			, CASE WHEN EC.CNRL_EXC_UPPER_DEPT 			= ECU.CNRL_EXC_UPPER_DEPT 			THEN NULL WHEN EC.CNRL_EXC_UPPER_DEPT 			IS NULL AND ECU.CNRL_EXC_UPPER_DEPT 			IS NULL THEN NULL WHEN ECU.CNRL_EXC_UPPER_DEPT  		IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_EXC_UPPER_DEPT_AT
			, CASE WHEN EC.CNRL_EXCBER 					= ECU.CNRL_EXCBER 					THEN NULL WHEN EC.CNRL_EXCBER 					IS NULL AND ECU.CNRL_EXCBER 					IS NULL THEN NULL WHEN ECU.CNRL_EXCBER  				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_EXCBER_AT
			, CASE WHEN EC.CNRL_ID 						= ECU.CNRL_ID 						THEN NULL WHEN EC.CNRL_ID 						IS NULL AND ECU.CNRL_ID 						IS NULL THEN NULL WHEN ECU.CNRL_ID 						IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_ID_AT
			, CASE WHEN EC.CNRL_IMPRVM_DC 				= ECU.CNRL_IMPRVM_DC 				THEN NULL WHEN EC.CNRL_IMPRVM_DC 				IS NULL AND ECU.CNRL_IMPRVM_DC 					IS NULL THEN NULL WHEN ECU.CNRL_IMPRVM_DC				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_IMPRVM_DC_AT
			, CASE WHEN EC.CNRL_IMPRVM_NM 				= ECU.CNRL_IMPRVM_NM 				THEN NULL WHEN EC.CNRL_IMPRVM_NM 				IS NULL AND ECU.CNRL_IMPRVM_NM 					IS NULL THEN NULL WHEN ECU.CNRL_IMPRVM_NM				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_IMPRVM_NM_AT
			, CASE WHEN EC.CNRL_NM 						= ECU.CNRL_NM 						THEN NULL WHEN EC.CNRL_NM 						IS NULL AND ECU.CNRL_NM 						IS NULL THEN NULL WHEN ECU.CNRL_NM 						IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_NM_AT
			, CASE WHEN EC.CNRL_NO						= ECU.CNRL_NO 						THEN NULL WHEN EC.CNRL_NO 						IS NULL AND ECU.CNRL_NO 						IS NULL THEN NULL WHEN ECU.CNRL_NO 						IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_NO_AT
			, CASE WHEN EC.CNRL_PURPS 					= ECU.CNRL_PURPS 					THEN NULL WHEN EC.CNRL_PURPS 					IS NULL AND ECU.CNRL_PURPS 						IS NULL THEN NULL WHEN ECU.CNRL_PURPS 					IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_PURPS_AT
			, CASE WHEN EC.CNRL_PURPS_ASSET_PRTC 		= ECU.CNRL_PURPS_ASSET_PRTC 		THEN NULL WHEN EC.CNRL_PURPS_ASSET_PRTC 		IS NULL AND ECU.CNRL_PURPS_ASSET_PRTC 			IS NULL THEN NULL WHEN ECU.CNRL_PURPS_ASSET_PRTC 		IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_PURPS_ASSET_PRTC_AT
			, CASE WHEN EC.CNRL_PURPS_CD_ID 			= ECU.CNRL_PURPS_CD_ID 				THEN NULL WHEN EC.CNRL_PURPS_CD_ID				IS NULL AND ECU.CNRL_PURPS_CD_ID 				IS NULL THEN NULL WHEN ECU.CNRL_PURPS_CD_ID 			IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_PURPS_CD_ID_AT
			, CASE WHEN EC.CNRL_PURPS_FNNR_RLABLTY 		= ECU.CNRL_PURPS_FNNR_RLABLTY 		THEN NULL WHEN EC.CNRL_PURPS_FNNR_RLABLTY 		IS NULL AND ECU.CNRL_PURPS_FNNR_RLABLTY 		IS NULL THEN NULL WHEN ECU.CNRL_PURPS_FNNR_RLABLTY 		IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_PURPS_FNNR_RLABLTY_AT
			, CASE WHEN EC.CNRL_PURPS_INSTC_PRVN 		= ECU.CNRL_PURPS_INSTC_PRVN 		THEN NULL WHEN EC.CNRL_PURPS_INSTC_PRVN 		IS NULL AND ECU.CNRL_PURPS_INSTC_PRVN 			IS NULL THEN NULL WHEN ECU.CNRL_PURPS_INSTC_PRVN 		IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_PURPS_INSTC_PRVN_AT
			, CASE WHEN EC.CNRL_RELATE_DOC 				= ECU.CNRL_RELATE_DOC 				THEN NULL WHEN EC.CNRL_RELATE_DOC 				IS NULL AND ECU.CNRL_RELATE_DOC 				IS NULL THEN NULL WHEN ECU.CNRL_RELATE_DOC 				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_RELATE_DOC_AT
			, CASE WHEN EC.CNRL_RELATE_REF 				= ECU.CNRL_RELATE_REF 				THEN NULL WHEN EC.CNRL_RELATE_REF 				IS NULL AND ECU.CNRL_RELATE_REF 				IS NULL THEN NULL WHEN ECU.CNRL_RELATE_REF 				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_RELATE_REF_AT
			, CASE WHEN EC.CNRL_RELATE_SYS 				= ECU.CNRL_RELATE_SYS 				THEN NULL WHEN EC.CNRL_RELATE_SYS 				IS NULL AND ECU.CNRL_RELATE_SYS 				IS NULL THEN NULL WHEN ECU.CNRL_RELATE_SYS 				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_RELATE_SYS_AT
			, CASE WHEN EC.CNRL_RM 						= ECU.CNRL_RM 						THEN NULL WHEN EC.CNRL_RM 						IS NULL AND ECU.CNRL_RM 						IS NULL THEN NULL WHEN ECU.CNRL_RM 						IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_RM_AT
			, CASE WHEN EC.CNRL_RSPNBER 				= ECU.CNRL_RSPNBER 					THEN NULL WHEN EC.CNRL_RSPNBER 					IS NULL AND ECU.CNRL_RSPNBER 					IS NULL THEN NULL WHEN ECU.CNRL_RSPNBER 				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_RSPNBER_AT
			, CASE WHEN EC.CNRL_RSPNSBL_DEPT 			= ECU.CNRL_RSPNSBL_DEPT 			THEN NULL WHEN EC.CNRL_RSPNSBL_DEPT 			IS NULL AND ECU.CNRL_RSPNSBL_DEPT				IS NULL THEN NULL WHEN ECU.CNRL_RSPNSBL_DEPT 			IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_RSPNSBL_DEPT_AT
			, CASE WHEN EC.CNRL_RSPNSBL_UPPER_DEPT 		= ECU.CNRL_RSPNSBL_UPPER_DEPT 		THEN NULL WHEN EC.CNRL_RSPNSBL_UPPER_DEPT 		IS NULL AND ECU.CNRL_RSPNSBL_UPPER_DEPT 		IS NULL THEN NULL WHEN ECU.CNRL_RSPNSBL_UPPER_DEPT 		IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_RSPNSBL_UPPER_DEPT_AT
			, CASE WHEN EC.CNRL_TY_CD_ID 				= ECU.CNRL_TY_CD_ID 				THEN NULL WHEN EC.CNRL_TY_CD_ID 				IS NULL AND ECU.CNRL_TY_CD_ID 					IS NULL THEN NULL WHEN ECU.CNRL_TY_CD_ID 				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_TY_CD_ID_AT
			, CASE WHEN EC.CNRL_TY_CECK01 				= ECU.CNRL_TY_CECK01 				THEN NULL WHEN EC.CNRL_TY_CECK01				IS NULL AND ECU.CNRL_TY_CECK01 					IS NULL THEN NULL WHEN ECU.CNRL_TY_CECK01				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_TY_CECK01_AT
			, CASE WHEN EC.CNRL_TY_CECK02 				= ECU.CNRL_TY_CECK02 				THEN NULL WHEN EC.CNRL_TY_CECK02				IS NULL AND ECU.CNRL_TY_CECK02 					IS NULL THEN NULL WHEN ECU.CNRL_TY_CECK02				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_TY_CECK02_AT
			, CASE WHEN EC.CNRL_TY_CECK03 				= ECU.CNRL_TY_CECK03 				THEN NULL WHEN EC.CNRL_TY_CECK03				IS NULL AND ECU.CNRL_TY_CECK03 					IS NULL THEN NULL WHEN ECU.CNRL_TY_CECK03				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_TY_CECK03_AT
			, CASE WHEN EC.CNRL_TY_CECK04 				= ECU.CNRL_TY_CECK04 				THEN NULL WHEN EC.CNRL_TY_CECK04				IS NULL AND ECU.CNRL_TY_CECK04 					IS NULL THEN NULL WHEN ECU.CNRL_TY_CECK04				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_TY_CECK04_AT
			, CASE WHEN EC.CNRL_TY_CECK05 				= ECU.CNRL_TY_CECK05 				THEN NULL WHEN EC.CNRL_TY_CECK05				IS NULL AND ECU.CNRL_TY_CECK05 					IS NULL THEN NULL WHEN ECU.CNRL_TY_CECK05				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_TY_CECK05_AT
			, CASE WHEN EC.CNRL_TY_CECK06 				= ECU.CNRL_TY_CECK06 				THEN NULL WHEN EC.CNRL_TY_CECK06				IS NULL AND ECU.CNRL_TY_CECK06 					IS NULL THEN NULL WHEN ECU.CNRL_TY_CECK06				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_TY_CECK06_AT
			, CASE WHEN EC.CNRL_TY_CECK07 				= ECU.CNRL_TY_CECK07 				THEN NULL WHEN EC.CNRL_TY_CECK07				IS NULL AND ECU.CNRL_TY_CECK07 					IS NULL THEN NULL WHEN ECU.CNRL_TY_CECK07				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_TY_CECK07_AT
			, CASE WHEN EC.CNRL_TY_CECK08 				= ECU.CNRL_TY_CECK08 				THEN NULL WHEN EC.CNRL_TY_CECK08				IS NULL AND ECU.CNRL_TY_CECK08 					IS NULL THEN NULL WHEN ECU.CNRL_TY_CECK08				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_TY_CECK08_AT
			, CASE WHEN EC.CNRL_TY_CECK09 				= ECU.CNRL_TY_CECK09 				THEN NULL WHEN EC.CNRL_TY_CECK09				IS NULL AND ECU.CNRL_TY_CECK09 					IS NULL THEN NULL WHEN ECU.CNRL_TY_CECK09				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_TY_CECK09_AT
			, CASE WHEN EC.CNRL_TY01_CD_ID 				= ECU.CNRL_TY01_CD_ID				THEN NULL WHEN EC.CNRL_TY01_CD_ID 				IS NULL AND ECU.CNRL_TY01_CD_ID 				IS NULL THEN NULL WHEN ECU.CNRL_TY01_CD_ID 				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_TY01_CD_ID_AT
			, CASE WHEN EC.CNRL_TY02_CD_ID 				= ECU.CNRL_TY02_CD_ID 				THEN NULL WHEN EC.CNRL_TY02_CD_ID 				IS NULL AND ECU.CNRL_TY02_CD_ID 				IS NULL THEN NULL WHEN ECU.CNRL_TY02_CD_ID 				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_TY02_CD_ID_AT
			, CASE WHEN EC.CNRL_TY03_CD_ID 				= ECU.CNRL_TY03_CD_ID 				THEN NULL WHEN EC.CNRL_TY03_CD_ID 				IS NULL AND ECU.CNRL_TY03_CD_ID 				IS NULL THEN NULL WHEN ECU.CNRL_TY03_CD_ID 				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_TY03_CD_ID_AT
			, CASE WHEN EC.CNRL_UPRPD_NO 				= ECU.CNRL_UPRPD_NO 				THEN NULL WHEN EC.CNRL_UPRPD_NO 				IS NULL AND ECU.CNRL_UPRPD_NO 					IS NULL THEN NULL WHEN ECU.CNRL_UPRPD_NO 				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_UPRPD_NO_AT
			, CASE WHEN EC.COSO_NO 						= ECU.COSO_NO 						THEN NULL WHEN EC.COSO_NO 						IS NULL AND ECU.COSO_NO 						IS NULL THEN NULL WHEN ECU.COSO_NO 						IS NULL THEN NULL ELSE 'Y' END 		AS 	COSO_NO_AT
			, CASE WHEN EC.DELNG_TY_CD_ID 				= ECU.DELNG_TY_CD_ID 				THEN NULL WHEN EC.DELNG_TY_CD_ID 				IS NULL AND ECU.DELNG_TY_CD_ID 					IS NULL THEN NULL WHEN ECU.DELNG_TY_CD_ID 				IS NULL THEN NULL ELSE 'Y' END 		AS 	DELNG_TY_CD_ID_AT
			, CASE WHEN EC.DSGN_EFCT_AT 				= ECU.DSGN_EFCT_AT 					THEN NULL WHEN EC.DSGN_EFCT_AT 					IS NULL AND ECU.DSGN_EFCT_AT 					IS NULL THEN NULL WHEN ECU.DSGN_EFCT_AT 				IS NULL THEN NULL ELSE 'Y' END 		AS 	DSGN_EFCT_AT_AT
			, CASE WHEN EC.EVL_ID 						= ECU.EVL_ID 						THEN NULL WHEN EC.EVL_ID 						IS NULL AND ECU.EVL_ID 							IS NULL THEN NULL WHEN ECU.EVL_ID 						IS NULL THEN NULL ELSE 'Y' END 		AS 	EVL_ID_AT
			, CASE WHEN EC.EXCP_CNT 					= ECU.EXCP_CNT						THEN NULL WHEN EC.EXCP_CNT 						IS NULL AND ECU.EXCP_CNT 						IS NULL THEN NULL WHEN ECU.EXCP_CNT 					IS NULL THEN NULL ELSE 'Y' END 		AS 	EXCP_CNT_AT
			, CASE WHEN EC.IPE_CNRL_AT 					= ECU.IPE_CNRL_AT 					THEN NULL WHEN EC.IPE_CNRL_AT 					IS NULL AND ECU.IPE_CNRL_AT 					IS NULL THEN NULL WHEN ECU.IPE_CNRL_AT 					IS NULL THEN NULL ELSE 'Y' END 		AS 	IPE_CNRL_AT_AT
			, CASE WHEN EC.IPE_CTGRY_CD_ID 				= ECU.IPE_CTGRY_CD_ID 				THEN NULL WHEN EC.IPE_CTGRY_CD_ID 				IS NULL AND ECU.IPE_CTGRY_CD_ID 				IS NULL THEN NULL WHEN ECU.IPE_CTGRY_CD_ID 				IS NULL THEN NULL ELSE 'Y' END 		AS 	IPE_CTGRY_CD_ID_AT
			, CASE WHEN EC.IPE_NM 						= ECU.IPE_NM 						THEN NULL WHEN EC.IPE_NM 						IS NULL AND ECU.IPE_NM 							IS NULL THEN NULL WHEN ECU.IPE_NM 						IS NULL THEN NULL ELSE 'Y' END 		AS 	IPE_NM_AT
			, CASE WHEN EC.IPE_NO 						= ECU.IPE_NO 						THEN NULL WHEN EC.IPE_NO 						IS NULL AND ECU.IPE_NO 							IS NULL THEN NULL WHEN ECU.IPE_NO 						IS NULL THEN NULL ELSE 'Y' END 		AS 	IPE_NO_AT
			, CASE WHEN EC.IPE_TEST_PROCSS 				= ECU.IPE_TEST_PROCSS 				THEN NULL WHEN EC.IPE_TEST_PROCSS 				IS NULL AND ECU.IPE_TEST_PROCSS 				IS NULL THEN NULL WHEN ECU.IPE_TEST_PROCSS 				IS NULL THEN NULL ELSE 'Y' END 		AS 	IPE_TEST_PROCSS_AT
			, CASE WHEN EC.KEY_CNRL_AT 					= ECU.KEY_CNRL_AT 					THEN NULL WHEN EC.KEY_CNRL_AT 					IS NULL AND ECU.KEY_CNRL_AT 					IS NULL THEN NULL WHEN ECU.KEY_CNRL_AT 					IS NULL THEN NULL ELSE 'Y' END 		AS 	KEY_CNRL_AT_AT
			, CASE WHEN EC.MRC_CNRL_AT 					= ECU.MRC_CNRL_AT 					THEN NULL WHEN EC.MRC_CNRL_AT 					IS NULL AND ECU.MRC_CNRL_AT 					IS NULL THEN NULL WHEN ECU.MRC_CNRL_AT 					IS NULL THEN NULL ELSE 'Y' END 		AS 	MRC_CNRL_AT_AT
			, CASE WHEN EC.MRC_CTGRY_CD_ID 				= ECU.MRC_CTGRY_CD_ID 				THEN NULL WHEN EC.MRC_CTGRY_CD_ID 				IS NULL AND ECU.MRC_CTGRY_CD_ID 				IS NULL THEN NULL WHEN ECU.MRC_CTGRY_CD_ID 				IS NULL THEN NULL ELSE 'Y' END 		AS 	MRC_CTGRY_CD_ID_AT
			, CASE WHEN EC.MRC_NO 						= ECU.MRC_NO 						THEN NULL WHEN EC.MRC_NO 						IS NULL AND ECU.MRC_NO 							IS NULL THEN NULL WHEN ECU.MRC_NO 						IS NULL THEN NULL ELSE 'Y' END 		AS 	MRC_NO_AT
			, CASE WHEN EC.OFFICE_TY_CD_ID 				= ECU.OFFICE_TY_CD_ID 				THEN NULL WHEN EC.OFFICE_TY_CD_ID 				IS NULL AND ECU.OFFICE_TY_CD_ID 				IS NULL THEN NULL WHEN ECU.OFFICE_TY_CD_ID 				IS NULL THEN NULL ELSE 'Y' END 		AS 	OFFICE_TY_CD_ID_AT
			, CASE WHEN EC.OPER_EFCT_AT 				= ECU.OPER_EFCT_AT 					THEN NULL WHEN EC.OPER_EFCT_AT 					IS NULL AND ECU.OPER_EFCT_AT 					IS NULL THEN NULL WHEN ECU.OPER_EFCT_AT 				IS NULL THEN NULL ELSE 'Y' END 		AS 	OPER_EFCT_AT_AT
			, CASE WHEN EC.REFRN_NO 					= ECU.REFRN_NO 						THEN NULL WHEN EC.REFRN_NO 						IS NULL AND ECU.REFRN_NO 						IS NULL THEN NULL WHEN ECU.REFRN_NO 					IS NULL THEN NULL ELSE 'Y' END 		AS 	REFRN_NO_AT
			, CASE WHEN EC.RELATE_ACNTCTGR_PBLNTF 		= ECU.RELATE_ACNTCTGR_PBLNTF 		THEN NULL WHEN EC.RELATE_ACNTCTGR_PBLNTF 		IS NULL AND ECU.RELATE_ACNTCTGR_PBLNTF 			IS NULL THEN NULL WHEN ECU.RELATE_ACNTCTGR_PBLNTF 		IS NULL THEN NULL ELSE 'Y' END 		AS 	RELATE_ACNTCTGR_PBLNTF_AT
			, CASE WHEN EC.RELATE_REGLTN_NM 			= ECU.RELATE_REGLTN_NM 				THEN NULL WHEN EC.RELATE_REGLTN_NM 				IS NULL AND ECU.RELATE_REGLTN_NM 				IS NULL THEN NULL WHEN ECU.RELATE_REGLTN_NM 			IS NULL THEN NULL ELSE 'Y' END 		AS 	RELATE_REGLTN_NM_AT
			, CASE WHEN EC.RISK_RESIDUAL_IMPACT 		= ECU.RISK_RESIDUAL_IMPACT 			THEN NULL WHEN EC.RISK_RESIDUAL_IMPACT 			IS NULL AND ECU.RISK_RESIDUAL_IMPACT 			IS NULL THEN NULL WHEN ECU.RISK_RESIDUAL_IMPACT 		IS NULL THEN NULL ELSE 'Y' END 		AS 	RISK_RESIDUAL_IMPACT_AT
			, CASE WHEN EC.RISK_RESIDUAL_LIKEHOOD 		= ECU.RISK_RESIDUAL_LIKEHOOD 		THEN NULL WHEN EC.RISK_RESIDUAL_LIKEHOOD 		IS NULL AND ECU.RISK_RESIDUAL_LIKEHOOD 			IS NULL THEN NULL WHEN ECU.RISK_RESIDUAL_LIKEHOOD 		IS NULL THEN NULL ELSE 'Y' END 		AS 	RISK_RESIDUAL_LIKEHOOD_AT
			, CASE WHEN EC.RISK_RESIDUAL_RATIONG 		= ECU.RISK_RESIDUAL_RATIONG 		THEN NULL WHEN EC.RISK_RESIDUAL_RATIONG 		IS NULL AND ECU.RISK_RESIDUAL_RATIONG 			IS NULL THEN NULL WHEN ECU.RISK_RESIDUAL_RATIONG 		IS NULL THEN NULL ELSE 'Y' END 		AS 	RISK_RESIDUAL_RATIONG_AT
			, CASE WHEN EC.SAMPLE_SIZE 					= ECU.SAMPLE_SIZE 					THEN NULL WHEN EC.SAMPLE_SIZE 					IS NULL AND ECU.SAMPLE_SIZE 					IS NULL THEN NULL WHEN ECU.SAMPLE_SIZE 					IS NULL THEN NULL ELSE 'Y' END 		AS 	SAMPLE_SIZE_AT
			, CASE WHEN EC.TEST_CYCLE_CD_ID 			= ECU.TEST_CYCLE_CD_ID 				THEN NULL WHEN EC.TEST_CYCLE_CD_ID 				IS NULL AND ECU.TEST_CYCLE_CD_ID 				IS NULL THEN NULL WHEN ECU.TEST_CYCLE_CD_ID 			IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_CYCLE_CD_ID_AT
			, CASE WHEN EC.TEST_CYCLE01					= ECU.TEST_CYCLE01 					THEN NULL WHEN EC.TEST_CYCLE01 				IS NULL AND ECU.TEST_CYCLE01 					IS NULL THEN NULL WHEN ECU.TEST_CYCLE01  				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_CYCLE01_AT
			, CASE WHEN EC.TEST_CYCLE02					= ECU.TEST_CYCLE02 					THEN NULL WHEN EC.TEST_CYCLE02 				IS NULL AND ECU.TEST_CYCLE02 					IS NULL THEN NULL WHEN ECU.TEST_CYCLE02  				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_CYCLE02_AT
			, CASE WHEN EC.TEST_CYCLE03					= ECU.TEST_CYCLE03 					THEN NULL WHEN EC.TEST_CYCLE03 				IS NULL AND ECU.TEST_CYCLE03 					IS NULL THEN NULL WHEN ECU.TEST_CYCLE03  				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_CYCLE03_AT
			, CASE WHEN EC.TEST_CYCLE04					= ECU.TEST_CYCLE04 					THEN NULL WHEN EC.TEST_CYCLE04 				IS NULL AND ECU.TEST_CYCLE04 					IS NULL THEN NULL WHEN ECU.TEST_CYCLE04  				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_CYCLE04_AT
			, CASE WHEN EC.TEST_CYCLE05					= ECU.TEST_CYCLE05 					THEN NULL WHEN EC.TEST_CYCLE05 				IS NULL AND ECU.TEST_CYCLE05 					IS NULL THEN NULL WHEN ECU.TEST_CYCLE05  				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_CYCLE05_AT
			, CASE WHEN EC.TEST_CYCLE06					= ECU.TEST_CYCLE06 					THEN NULL WHEN EC.TEST_CYCLE06 				IS NULL AND ECU.TEST_CYCLE06 					IS NULL THEN NULL WHEN ECU.TEST_CYCLE06  				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_CYCLE06_AT
			, CASE WHEN EC.TEST_CYCLE07					= ECU.TEST_CYCLE07 					THEN NULL WHEN EC.TEST_CYCLE07 				IS NULL AND ECU.TEST_CYCLE07 					IS NULL THEN NULL WHEN ECU.TEST_CYCLE07  				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_CYCLE07_AT
			, CASE WHEN EC.TEST_CYCLE08					= ECU.TEST_CYCLE08 					THEN NULL WHEN EC.TEST_CYCLE08 				IS NULL AND ECU.TEST_CYCLE08 					IS NULL THEN NULL WHEN ECU.TEST_CYCLE08  				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_CYCLE08_AT
			, CASE WHEN EC.TEST_CYCLE09					= ECU.TEST_CYCLE09 					THEN NULL WHEN EC.TEST_CYCLE09 				IS NULL AND ECU.TEST_CYCLE09 					IS NULL THEN NULL WHEN ECU.TEST_CYCLE09  				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_CYCLE09_AT
			, CASE WHEN EC.TEST_MTH 					= ECU.TEST_MTH 						THEN NULL WHEN EC.TEST_MTH 						IS NULL AND ECU.TEST_MTH 						IS NULL THEN NULL WHEN ECU.TEST_MTH 					IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_MTH_AT
			, CASE WHEN EC.TEST_MTH_ECGN 				= ECU.TEST_MTH_ECGN 				THEN NULL WHEN EC.TEST_MTH_ECGN 				IS NULL AND ECU.TEST_MTH_ECGN 					IS NULL THEN NULL WHEN ECU.TEST_MTH_ECGN 				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_MTH_ECGN_AT
			, CASE WHEN EC.TEST_MTH_OBSERV 				= ECU.TEST_MTH_OBSERV 				THEN NULL WHEN EC.TEST_MTH_OBSERV 				IS NULL AND ECU.TEST_MTH_OBSERV 				IS NULL THEN NULL WHEN ECU.TEST_MTH_OBSERV 				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_MTH_OBSERV_AT
			, CASE WHEN EC.TEST_MTH_QESTN 				= ECU.TEST_MTH_QESTN 				THEN NULL WHEN EC.TEST_MTH_QESTN 				IS NULL AND ECU.TEST_MTH_QESTN 					IS NULL THEN NULL WHEN ECU.TEST_MTH_QESTN 				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_MTH_QESTN_AT
			, CASE WHEN EC.TEST_MTH_SYS_TRACE 			= ECU.TEST_MTH_SYS_TRACE 			THEN NULL WHEN EC.TEST_MTH_SYS_TRACE 			IS NULL AND ECU.TEST_MTH_SYS_TRACE 				IS NULL THEN NULL WHEN ECU.TEST_MTH_SYS_TRACE 			IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_MTH_SYS_TRACE_AT
			, CASE WHEN EC.TEST_MTH_VRIFY 				= ECU.TEST_MTH_VRIFY 				THEN NULL WHEN EC.TEST_MTH_VRIFY 				IS NULL AND ECU.TEST_MTH_VRIFY 					IS NULL THEN NULL WHEN ECU.TEST_MTH_VRIFY 				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_MTH_VRIFY_AT
			, CASE WHEN EC.TEST_PROCSS 					= ECU.TEST_PROCSS 					THEN NULL WHEN EC.TEST_PROCSS 					IS NULL AND ECU.TEST_PROCSS 					IS NULL THEN NULL WHEN ECU.TEST_PROCSS 					IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_PROCSS_AT
			, CASE WHEN EC.TEST_RELATE_DOC 				= ECU.TEST_RELATE_DOC 				THEN NULL WHEN EC.TEST_RELATE_DOC				IS NULL AND ECU.TEST_RELATE_DOC 				IS NULL THEN NULL WHEN ECU.TEST_RELATE_DOC 				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_RELATE_DOC_AT
			, CASE WHEN EC.TEST_SANCTN_AT 				= ECU.TEST_SANCTN_AT 				THEN NULL WHEN EC.TEST_SANCTN_AT 				IS NULL AND ECU.TEST_SANCTN_AT 					IS NULL THEN NULL WHEN ECU.TEST_SANCTN_AT 				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_SANCTN_AT_AT
			, CASE WHEN EC.TEST_TRGET 					= ECU.TEST_TRGET 					THEN NULL WHEN EC.TEST_TRGET 					IS NULL AND ECU.TEST_TRGET 						IS NULL THEN NULL WHEN ECU.TEST_TRGET					IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_TRGET_AT
			, CASE WHEN EC.TREXAMIN_CNCLSN 				= ECU.TREXAMIN_CNCLSN 				THEN NULL WHEN EC.TREXAMIN_CNCLSN 				IS NULL AND ECU.TREXAMIN_CNCLSN 				IS NULL THEN NULL WHEN ECU.TREXAMIN_CNCLSN 				IS NULL THEN NULL ELSE 'Y' END 		AS 	TREXAMIN_CNCLSN_AT
			, CASE WHEN EC.TREXAMIN_PROCSS 				= ECU.TREXAMIN_PROCSS 				THEN NULL WHEN EC.TREXAMIN_PROCSS 				IS NULL AND ECU.TREXAMIN_PROCSS 				IS NULL THEN NULL WHEN ECU.TREXAMIN_PROCSS 				IS NULL THEN NULL ELSE 'Y' END 		AS 	TREXAMIN_PROCSS_AT
			, CASE WHEN EC.TREXAMIN_PRUF 				= ECU.TREXAMIN_PRUF 				THEN NULL WHEN EC.TREXAMIN_PRUF 				IS NULL AND ECU.TREXAMIN_PRUF 					IS NULL THEN NULL WHEN ECU.TREXAMIN_PRUF 				IS NULL THEN NULL ELSE 'Y' END 		AS 	TREXAMIN_PRUF_AT
			, CASE WHEN EC.FNREP_RISKEVL_CSFCTR01 			= ECU.FNREP_RISKEVL_CSFCTR01 			THEN NULL WHEN EC.FNREP_RISKEVL_CSFCTR01 			IS NULL AND ECU.FNREP_RISKEVL_CSFCTR01 				IS NULL THEN NULL WHEN ECU.FNREP_RISKEVL_CSFCTR01 			IS NULL THEN NULL ELSE 'Y' END 		AS 	FNREP_RISKEVL_CSFCTR01_AT
			, CASE WHEN EC.FNREP_RISKEVL_CSFCTR02 			= ECU.FNREP_RISKEVL_CSFCTR02 			THEN NULL WHEN EC.FNREP_RISKEVL_CSFCTR02 			IS NULL AND ECU.FNREP_RISKEVL_CSFCTR02 				IS NULL THEN NULL WHEN ECU.FNREP_RISKEVL_CSFCTR02 			IS NULL THEN NULL ELSE 'Y' END 		AS 	FNREP_RISKEVL_CSFCTR02_AT
			, CASE WHEN EC.FNREP_RISKEVL_CSFCTR03 			= ECU.FNREP_RISKEVL_CSFCTR03 			THEN NULL WHEN EC.FNREP_RISKEVL_CSFCTR03 			IS NULL AND ECU.FNREP_RISKEVL_CSFCTR03 				IS NULL THEN NULL WHEN ECU.FNREP_RISKEVL_CSFCTR03 			IS NULL THEN NULL ELSE 'Y' END 		AS 	FNREP_RISKEVL_CSFCTR03_AT
			, CASE WHEN EC.FNREP_RISKEVL_CSFCTR04 			= ECU.FNREP_RISKEVL_CSFCTR04 			THEN NULL WHEN EC.FNREP_RISKEVL_CSFCTR04 			IS NULL AND ECU.FNREP_RISKEVL_CSFCTR04 				IS NULL THEN NULL WHEN ECU.FNREP_RISKEVL_CSFCTR04 			IS NULL THEN NULL ELSE 'Y' END 		AS 	FNREP_RISKEVL_CSFCTR04_AT
			, CASE WHEN EC.FNREP_RISKEVL_CSFCTR05 			= ECU.FNREP_RISKEVL_CSFCTR05 			THEN NULL WHEN EC.FNREP_RISKEVL_CSFCTR05 			IS NULL AND ECU.FNREP_RISKEVL_CSFCTR05 				IS NULL THEN NULL WHEN ECU.FNREP_RISKEVL_CSFCTR05 			IS NULL THEN NULL ELSE 'Y' END 		AS 	FNREP_RISKEVL_CSFCTR05_AT
			, CASE WHEN EC.FNREP_RISKEVL_CSFCTR06 			= ECU.FNREP_RISKEVL_CSFCTR06 			THEN NULL WHEN EC.FNREP_RISKEVL_CSFCTR06 			IS NULL AND ECU.FNREP_RISKEVL_CSFCTR06 				IS NULL THEN NULL WHEN ECU.FNREP_RISKEVL_CSFCTR06 			IS NULL THEN NULL ELSE 'Y' END 		AS 	FNREP_RISKEVL_CSFCTR06_AT
			, CASE WHEN EC.FNREP_RISKEVL_CSFCTR07 			= ECU.FNREP_RISKEVL_CSFCTR07 			THEN NULL WHEN EC.FNREP_RISKEVL_CSFCTR07 			IS NULL AND ECU.FNREP_RISKEVL_CSFCTR07 				IS NULL THEN NULL WHEN ECU.FNREP_RISKEVL_CSFCTR07 			IS NULL THEN NULL ELSE 'Y' END 		AS 	FNREP_RISKEVL_CSFCTR07_AT
			, CASE WHEN EC.FNREP_RISKEVL_CSFCTR08 			= ECU.FNREP_RISKEVL_CSFCTR08 			THEN NULL WHEN EC.FNREP_RISKEVL_CSFCTR08 			IS NULL AND ECU.FNREP_RISKEVL_CSFCTR08 				IS NULL THEN NULL WHEN ECU.FNREP_RISKEVL_CSFCTR08 			IS NULL THEN NULL ELSE 'Y' END 		AS 	FNREP_RISKEVL_CSFCTR08_AT
			, CASE WHEN EC.FNREP_RISKEVL_CSFCTR09 			= ECU.FNREP_RISKEVL_CSFCTR09 			THEN NULL WHEN EC.FNREP_RISKEVL_CSFCTR09 			IS NULL AND ECU.FNREP_RISKEVL_CSFCTR09 				IS NULL THEN NULL WHEN ECU.FNREP_RISKEVL_CSFCTR09 			IS NULL THEN NULL ELSE 'Y' END 		AS 	FNREP_RISKEVL_CSFCTR09_AT
			, CASE WHEN EC.FNREP_RISKEVL_CSFCTR10 			= ECU.FNREP_RISKEVL_CSFCTR10 			THEN NULL WHEN EC.FNREP_RISKEVL_CSFCTR10 			IS NULL AND ECU.FNREP_RISKEVL_CSFCTR10 				IS NULL THEN NULL WHEN ECU.FNREP_RISKEVL_CSFCTR10 			IS NULL THEN NULL ELSE 'Y' END 		AS 	FNREP_RISKEVL_CSFCTR10_AT
			, CASE WHEN EC.FNREP_CNRL_RISK_CNCLSN 			= ECU.FNREP_CNRL_RISK_CNCLSN 			THEN NULL WHEN EC.FNREP_CNRL_RISK_CNCLSN 			IS NULL AND ECU.FNREP_CNRL_RISK_CNCLSN 				IS NULL THEN NULL WHEN ECU.FNREP_CNRL_RISK_CNCLSN 			IS NULL THEN NULL ELSE 'Y' END 		AS 	FNREP_CNRL_RISK_CNCLSN_AT
			, CASE WHEN EC.FNREP_ACNT_RISK_CNCLSN 			= ECU.FNREP_ACNT_RISK_CNCLSN 			THEN NULL WHEN EC.FNREP_ACNT_RISK_CNCLSN 			IS NULL AND ECU.FNREP_ACNT_RISK_CNCLSN 				IS NULL THEN NULL WHEN ECU.FNREP_ACNT_RISK_CNCLSN 			IS NULL THEN NULL ELSE 'Y' END 		AS 	FNREP_ACNT_RISK_CNCLSN_AT
			, CASE WHEN EC.FNREP_PROCS_RISK_CNCLSN 			= ECU.FNREP_PROCS_RISK_CNCLSN 			THEN NULL WHEN EC.FNREP_PROCS_RISK_CNCLSN 			IS NULL AND ECU.FNREP_PROCS_RISK_CNCLSN 				IS NULL THEN NULL WHEN ECU.FNREP_PROCS_RISK_CNCLSN 			IS NULL THEN NULL ELSE 'Y' END 		AS 	FNREP_PROCS_RISK_CNCLSN_AT
			, CASE WHEN EC.FNREP_GNRLZ_EVL_CNCLSN 			= ECU.FNREP_GNRLZ_EVL_CNCLSN 			THEN NULL WHEN EC.FNREP_GNRLZ_EVL_CNCLSN 			IS NULL AND ECU.FNREP_GNRLZ_EVL_CNCLSN 				IS NULL THEN NULL WHEN ECU.FNREP_GNRLZ_EVL_CNCLSN 			IS NULL THEN NULL ELSE 'Y' END 		AS 	FNREP_GNRLZ_EVL_CNCLSN_AT
			*/
			, (CASE WHEN ISNULL(EC.ACNT_CD 						, 'NULL') = ISNULL(ECU.ACNT_CD 						, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.AFTER_RISK_RESIDUAL_IMPACT 		, 'NULL') = ISNULL(ECU.AFTER_RISK_RESIDUAL_IMPACT 		, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.AFTER_RISK_RESIDUAL_LIKEHOOD 	, 'NULL') = ISNULL(ECU.AFTER_RISK_RESIDUAL_LIKEHOOD 	, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.AFTER_RISK_RESIDUAL_RATIONG 	, 'NULL') = ISNULL(ECU.AFTER_RISK_RESIDUAL_RATIONG 	, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.ASSE_A_AT 						, 'NULL') = ISNULL(ECU.ASSE_A_AT 						, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.ASSE_C_AT 						, 'NULL') = ISNULL(ECU.ASSE_C_AT 						, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.ASSE_E_AT 						, 'NULL') = ISNULL(ECU.ASSE_E_AT 						, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.ASSE_O_AT 						, 'NULL') = ISNULL(ECU.ASSE_O_AT 						, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.ASSE_P_AT 						, 'NULL') = ISNULL(ECU.ASSE_P_AT 						, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.ASSE_PF_AT 						, 'NULL') = ISNULL(ECU.ASSE_PF_AT 						, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.ASSE_R_AT 						, 'NULL') = ISNULL(ECU.ASSE_R_AT 						, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.ASSE_S_AT 						, 'NULL') = ISNULL(ECU.ASSE_S_AT 						, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.ASSE_V_AT 						, 'NULL') = ISNULL(ECU.ASSE_V_AT 						, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.ATMC_SAMPLE_AT 					, 'NULL') = ISNULL(ECU.ATMC_SAMPLE_AT 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_ACNTCTGR 					, 'NULL') = ISNULL(ECU.CNRL_ACNTCTGR 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_CM_IEM 					, 'NULL') = ISNULL(ECU.CNRL_CM_IEM 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_CN 						, 'NULL') = ISNULL(ECU.CNRL_CN 						, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_CTGRY 						, 'NULL') = ISNULL(ECU.CNRL_CTGRY 						, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_CYCLE_CD_ID 				, 'NULL') = ISNULL(ECU.CNRL_CYCLE_CD_ID 				, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_CYCLE01 				    , 'NULL') = ISNULL(ECU.CNRL_CYCLE01 				    , 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_CYCLE02 				    , 'NULL') = ISNULL(ECU.CNRL_CYCLE02 				    , 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_CYCLE03 				    , 'NULL') = ISNULL(ECU.CNRL_CYCLE03 				    , 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_CYCLE04 				    , 'NULL') = ISNULL(ECU.CNRL_CYCLE04 				    , 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_CYCLE05 				    , 'NULL') = ISNULL(ECU.CNRL_CYCLE05 				    , 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_CYCLE06 				    , 'NULL') = ISNULL(ECU.CNRL_CYCLE06 				    , 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_CYCLE07 				    , 'NULL') = ISNULL(ECU.CNRL_CYCLE07 				    , 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_CYCLE08 				    , 'NULL') = ISNULL(ECU.CNRL_CYCLE08 				    , 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_CYCLE09 				    , 'NULL') = ISNULL(ECU.CNRL_CYCLE09 				    , 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_EXC_DEPT 					, 'NULL') = ISNULL(ECU.CNRL_EXC_DEPT 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_EXC_UPPER_DEPT 			, 'NULL') = ISNULL(ECU.CNRL_EXC_UPPER_DEPT 			, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_EXCBER 					, 'NULL') = ISNULL(ECU.CNRL_EXCBER 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_ID 						, 'NULL') = ISNULL(ECU.CNRL_ID 						, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_IMPRVM_DC 					, 'NULL') = ISNULL(ECU.CNRL_IMPRVM_DC 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_IMPRVM_NM 					, 'NULL') = ISNULL(ECU.CNRL_IMPRVM_NM 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_NM 						, 'NULL') = ISNULL(ECU.CNRL_NM 						, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_NO							, 'NULL') = ISNULL(ECU.CNRL_NO 						, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_PURPS 						, 'NULL') = ISNULL(ECU.CNRL_PURPS 						, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_PURPS_ASSET_PRTC 			, 'NULL') = ISNULL(ECU.CNRL_PURPS_ASSET_PRTC 			, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_PURPS_CD_ID 				, 'NULL') = ISNULL(ECU.CNRL_PURPS_CD_ID 				, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_PURPS_FNNR_RLABLTY 		, 'NULL') = ISNULL(ECU.CNRL_PURPS_FNNR_RLABLTY 		, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_PURPS_INSTC_PRVN 			, 'NULL') = ISNULL(ECU.CNRL_PURPS_INSTC_PRVN 			, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_RELATE_DOC 				, 'NULL') = ISNULL(ECU.CNRL_RELATE_DOC 				, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_RELATE_REF 				, 'NULL') = ISNULL(ECU.CNRL_RELATE_REF 				, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_RELATE_SYS 				, 'NULL') = ISNULL(ECU.CNRL_RELATE_SYS 				, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_RM 						, 'NULL') = ISNULL(ECU.CNRL_RM 						, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_RSPNBER 					, 'NULL') = ISNULL(ECU.CNRL_RSPNBER 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_RSPNSBL_DEPT 				, 'NULL') = ISNULL(ECU.CNRL_RSPNSBL_DEPT 				, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_RSPNSBL_UPPER_DEPT 		, 'NULL') = ISNULL(ECU.CNRL_RSPNSBL_UPPER_DEPT 		, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_TY_CD_ID 					, 'NULL') = ISNULL(ECU.CNRL_TY_CD_ID 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_TY_CECK01 					, 'NULL') = ISNULL(ECU.CNRL_TY_CECK01 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_TY_CECK02 					, 'NULL') = ISNULL(ECU.CNRL_TY_CECK02 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_TY_CECK03 					, 'NULL') = ISNULL(ECU.CNRL_TY_CECK03 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_TY_CECK04 					, 'NULL') = ISNULL(ECU.CNRL_TY_CECK04 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_TY_CECK05 					, 'NULL') = ISNULL(ECU.CNRL_TY_CECK05 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_TY_CECK06 					, 'NULL') = ISNULL(ECU.CNRL_TY_CECK06 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_TY_CECK07 					, 'NULL') = ISNULL(ECU.CNRL_TY_CECK07 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_TY_CECK08 					, 'NULL') = ISNULL(ECU.CNRL_TY_CECK08 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_TY_CECK09 					, 'NULL') = ISNULL(ECU.CNRL_TY_CECK09 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_TY01_CD_ID 				, 'NULL') = ISNULL(ECU.CNRL_TY01_CD_ID					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_TY02_CD_ID 				, 'NULL') = ISNULL(ECU.CNRL_TY02_CD_ID 				, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_TY03_CD_ID 				, 'NULL') = ISNULL(ECU.CNRL_TY03_CD_ID 				, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.CNRL_UPRPD_NO 					, 'NULL') = ISNULL(ECU.CNRL_UPRPD_NO 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.COSO_NO 						, 'NULL') = ISNULL(ECU.COSO_NO 						, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.DELNG_TY_CD_ID 					, 'NULL') = ISNULL(ECU.DELNG_TY_CD_ID 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.DSGN_EFCT_AT 					, 'NULL') = ISNULL(ECU.DSGN_EFCT_AT 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.EVL_ID 							, 'NULL') = ISNULL(ECU.EVL_ID 							, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.EXCP_CNT 						, 'NULL') = ISNULL(ECU.EXCP_CNT						, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.IPE_CNRL_AT 					, 'NULL') = ISNULL(ECU.IPE_CNRL_AT 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.IPE_CTGRY_CD_ID 				, 'NULL') = ISNULL(ECU.IPE_CTGRY_CD_ID 				, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.IPE_NM 							, 'NULL') = ISNULL(ECU.IPE_NM 							, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.IPE_NO 							, 'NULL') = ISNULL(ECU.IPE_NO 							, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.IPE_TEST_PROCSS 				, 'NULL') = ISNULL(ECU.IPE_TEST_PROCSS 				, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.KEY_CNRL_AT 					, 'NULL') = ISNULL(ECU.KEY_CNRL_AT 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.MRC_CNRL_AT 					, 'NULL') = ISNULL(ECU.MRC_CNRL_AT 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.MRC_CTGRY_CD_ID 				, 'NULL') = ISNULL(ECU.MRC_CTGRY_CD_ID 				, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.MRC_NO 							, 'NULL') = ISNULL(ECU.MRC_NO 							, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.OFFICE_TY_CD_ID 				, 'NULL') = ISNULL(ECU.OFFICE_TY_CD_ID 				, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.OPER_EFCT_AT 					, 'NULL') = ISNULL(ECU.OPER_EFCT_AT 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.REFRN_NO 						, 'NULL') = ISNULL(ECU.REFRN_NO 						, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.RELATE_ACNTCTGR_PBLNTF 			, 'NULL') = ISNULL(ECU.RELATE_ACNTCTGR_PBLNTF 			, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.RELATE_REGLTN_NM 				, 'NULL') = ISNULL(ECU.RELATE_REGLTN_NM 				, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.RISK_RESIDUAL_IMPACT 			, 'NULL') = ISNULL(ECU.RISK_RESIDUAL_IMPACT 			, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.RISK_RESIDUAL_LIKEHOOD 			, 'NULL') = ISNULL(ECU.RISK_RESIDUAL_LIKEHOOD 			, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.RISK_RESIDUAL_RATIONG 			, 'NULL') = ISNULL(ECU.RISK_RESIDUAL_RATIONG 			, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.SAMPLE_SIZE 					, 'NULL') = ISNULL(ECU.SAMPLE_SIZE 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.TEST_CYCLE_CD_ID 				, 'NULL') = ISNULL(ECU.TEST_CYCLE_CD_ID 				, 'NULL')   THEN 0 ELSE 1 END)
			+ (CASE WHEN ISNULL(EC.TEST_CYCLE01 				    , 'NULL') = ISNULL(ECU.TEST_CYCLE01 				    , 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.TEST_CYCLE02 				    , 'NULL') = ISNULL(ECU.TEST_CYCLE02 				    , 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.TEST_CYCLE03 				    , 'NULL') = ISNULL(ECU.TEST_CYCLE03 				    , 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.TEST_CYCLE04 				    , 'NULL') = ISNULL(ECU.TEST_CYCLE04 				    , 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.TEST_CYCLE05 				    , 'NULL') = ISNULL(ECU.TEST_CYCLE05 				    , 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.TEST_CYCLE06 				    , 'NULL') = ISNULL(ECU.TEST_CYCLE06 				    , 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.TEST_CYCLE07 				    , 'NULL') = ISNULL(ECU.TEST_CYCLE07 				    , 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.TEST_CYCLE08 				    , 'NULL') = ISNULL(ECU.TEST_CYCLE08 				    , 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.TEST_CYCLE09 				    , 'NULL') = ISNULL(ECU.TEST_CYCLE09 				    , 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.TEST_MTH 						, 'NULL') = ISNULL(ECU.TEST_MTH 						, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.TEST_MTH_ECGN 					, 'NULL') = ISNULL(ECU.TEST_MTH_ECGN 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.TEST_MTH_OBSERV 				, 'NULL') = ISNULL(ECU.TEST_MTH_OBSERV 				, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.TEST_MTH_QESTN 					, 'NULL') = ISNULL(ECU.TEST_MTH_QESTN 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.TEST_MTH_SYS_TRACE 				, 'NULL') = ISNULL(ECU.TEST_MTH_SYS_TRACE 				, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.TEST_MTH_VRIFY 					, 'NULL') = ISNULL(ECU.TEST_MTH_VRIFY 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.TEST_PROCSS 					, 'NULL') = ISNULL(ECU.TEST_PROCSS 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.TEST_RELATE_DOC 				, 'NULL') = ISNULL(ECU.TEST_RELATE_DOC 				, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.TEST_SANCTN_AT 					, 'NULL') = ISNULL(ECU.TEST_SANCTN_AT 					, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.TEST_TRGET 						, 'NULL') = ISNULL(ECU.TEST_TRGET 						, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.TREXAMIN_CNCLSN 				, 'NULL') = ISNULL(ECU.TREXAMIN_CNCLSN 				, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.TREXAMIN_PROCSS 				, 'NULL') = ISNULL(ECU.TREXAMIN_PROCSS 				, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.TREXAMIN_PRUF 					, 'NULL') = ISNULL(ECU.TREXAMIN_PRUF 					, 'NULL')   THEN 0 ELSE 1 END)
			+ (CASE WHEN ISNULL(EC.FNREP_RISKEVL_CSFCTR01 			, 'NULL') = ISNULL(ECU.FNREP_RISKEVL_CSFCTR01 			, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.FNREP_RISKEVL_CSFCTR02 			, 'NULL') = ISNULL(ECU.FNREP_RISKEVL_CSFCTR02 			, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.FNREP_RISKEVL_CSFCTR03 			, 'NULL') = ISNULL(ECU.FNREP_RISKEVL_CSFCTR03 			, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.FNREP_RISKEVL_CSFCTR04 			, 'NULL') = ISNULL(ECU.FNREP_RISKEVL_CSFCTR04 			, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.FNREP_RISKEVL_CSFCTR05 			, 'NULL') = ISNULL(ECU.FNREP_RISKEVL_CSFCTR05 			, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.FNREP_RISKEVL_CSFCTR06 			, 'NULL') = ISNULL(ECU.FNREP_RISKEVL_CSFCTR06 			, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.FNREP_RISKEVL_CSFCTR07 			, 'NULL') = ISNULL(ECU.FNREP_RISKEVL_CSFCTR07 			, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.FNREP_RISKEVL_CSFCTR08 			, 'NULL') = ISNULL(ECU.FNREP_RISKEVL_CSFCTR08 			, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.FNREP_RISKEVL_CSFCTR09 			, 'NULL') = ISNULL(ECU.FNREP_RISKEVL_CSFCTR09 			, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.FNREP_RISKEVL_CSFCTR10 			, 'NULL') = ISNULL(ECU.FNREP_RISKEVL_CSFCTR10 			, 'NULL')   THEN 0 ELSE 1 END)
			+ (CASE WHEN ISNULL(EC.FNREP_CNRL_RISK_CNCLSN 			, 'NULL') = ISNULL(ECU.FNREP_CNRL_RISK_CNCLSN 			, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.FNREP_ACNT_RISK_CNCLSN 			, 'NULL') = ISNULL(ECU.FNREP_ACNT_RISK_CNCLSN 			, 'NULL')   THEN 0 ELSE 1 END) 
			+ (CASE WHEN ISNULL(EC.FNREP_PROCS_RISK_CNCLSN 			, 'NULL') = ISNULL(ECU.FNREP_PROCS_RISK_CNCLSN 			, 'NULL')   THEN 0 ELSE 1 END) 			
			+ (CASE WHEN ISNULL(EC.FNREP_GNRLZ_EVL_CNCLSN 					, 'NULL') = ISNULL(ECU.FNREP_GNRLZ_EVL_CNCLSN 					, 'NULL')   THEN 0 ELSE 1 END) AS UPDT_CNT			
		FROM 
			TB_CW_UPRPD UP
			LEFT OUTER JOIN TB_CW_UPRPD_EXC UE
				ON 	UP.EVL_ID 			= UE.EVL_ID
	          	AND UP.OBJECT_ID 		= UE.OBJECT_ID
	        LEFT OUTER JOIN TB_CW_UPRPD_POSMANT UPS
				ON 	UP.EVL_ID = UPS.EVL_ID
				AND	UP.OBJECT_ID 		= UPS.OBJECT_ID
				AND UPS.LAST_AT = 'Y'
	        LEFT OUTER JOIN TB_CW_EVL_RCM_MAPNG M
	          	ON 	UP.EVL_ID 			= M.EVL_ID
	          	AND UP.OBJECT_ID 		= M.OBJECT_ID
	        LEFT OUTER JOIN TB_CW_EVL_RCM_CNRL EC
	          	ON 	UP.EVL_ID			= EC.EVL_ID
	          	AND UP.OBJECT_ID 		= EC.CNRL_ID
	        INNER JOIN TB_CW_UPRPD_CNRL_UPDT ECU
	          	ON 	UP.EVL_ID			= ECU.EVL_ID
	          	AND UP.OBJECT_ID 		= ECU.CNRL_ID
		WHERE 
			UP.EVL_ID 			= #{evlId}
      		AND M.OBJECT_KND_CD_ID 	= 'CTW_001_005'
			AND UP.UPRPD_TY_CD_ID 	= 'CTW_204_001'
			AND UE.STTUS_CD_ID 		= 'COM_023_007'
	</select>
	
	
	<!-- 통제 ELC_RCM개선 반영 현황  목록 -->
	<select id="elcCnrlUpdtList" resultType="EgovMap">
		SELECT 
			  UP.EVL_ID
			, UP.OBJECT_ID
			, 'ELC' AS EVL_TY
			, M.OBJECT_KND_CD_ID
			, UPS.POSMANT_SN
			, ECU.REFLCT_AT
			, CONVERT ( VARCHAR , ECU.REFLCT_DT , 23 ) AS REFLCT_DE 
			, CONVERT ( VARCHAR , ECU.REFLCT_DT , 23 ) + ' ' + CONVERT ( VARCHAR , ECU.REFLCT_DT , 8) AS REFLCT_DT
			, EC.CNRL_NM
			, EC.CNRL_NO
			, EC.CNRL_CN
			, EC.OFFICE_TY_CD_ID
			, EC.KEY_CNRL_AT
	        , EC.MRC_CNRL_AT
	        , EC.IPE_CNRL_AT
			, EC.REFRN_NO
			/** 수정여부 수정된 컬럼 오리지널과 UPDT를 비교해서 같으면 변경 안됨, 양쪽 모두 NULL이면 변경안됨, UPDT_CNRL_ID가 없으면 NULL, 
				수정된 컬럼 오리지널과 UPDT를 비교해서 다르고 양쪽 모두 NULL이 아니고 UPDT_CNRL_ID가 있으면! NULL아닐 경우 변경된 정보 출력 NULL일 경우 삭제 출력 
			, CASE WHEN EC.ACNT_CD 						= ECU.ACNT_CD 						THEN NULL WHEN EC.ACNT_CD 						IS NULL AND ECU.ACNT_CD 						IS NULL THEN NULL WHEN ECU.ACNT_CD 						IS NULL THEN NULL ELSE 'Y' END 		AS 	ACNT_CD_AT
			, CASE WHEN EC.AFTER_RISK_RESIDUAL_IMPACT 	= ECU.AFTER_RISK_RESIDUAL_IMPACT 	THEN NULL WHEN EC.AFTER_RISK_RESIDUAL_IMPACT 	IS NULL AND ECU.AFTER_RISK_RESIDUAL_IMPACT 		IS NULL THEN NULL WHEN ECU.AFTER_RISK_RESIDUAL_IMPACT 	IS NULL THEN NULL ELSE 'Y' END 		AS 	AR_RESIDUAL_IMPACT_AT
			, CASE WHEN EC.AFTER_RISK_RESIDUAL_LIKEHOOD = ECU.AFTER_RISK_RESIDUAL_LIKEHOOD 	THEN NULL WHEN EC.AFTER_RISK_RESIDUAL_LIKEHOOD 	IS NULL AND ECU.AFTER_RISK_RESIDUAL_LIKEHOOD 	IS NULL THEN NULL WHEN ECU.AFTER_RISK_RESIDUAL_LIKEHOOD IS NULL THEN NULL ELSE 'Y' END 		AS 	AR_RESIDUAL_LIKEHOOD_AT
			, CASE WHEN EC.AFTER_RISK_RESIDUAL_RATIONG 	= ECU.AFTER_RISK_RESIDUAL_RATIONG 	THEN NULL WHEN EC.AFTER_RISK_RESIDUAL_RATIONG 	IS NULL AND ECU.AFTER_RISK_RESIDUAL_RATIONG 	IS NULL THEN NULL WHEN ECU.AFTER_RISK_RESIDUAL_RATIONG 	IS NULL THEN NULL ELSE 'Y' END 		AS 	AR_RESIDUAL_RATIONG_AT
			, CASE WHEN EC.ASSE_A_AT 					= ECU.ASSE_A_AT 					THEN NULL WHEN EC.ASSE_A_AT 					IS NULL AND ECU.ASSE_A_AT 						IS NULL THEN NULL WHEN ECU.ASSE_A_AT  					IS NULL THEN NULL ELSE 'Y' END 		AS 	ASSE_A_AT_AT
			, CASE WHEN EC.ASSE_C_AT 					= ECU.ASSE_C_AT 					THEN NULL WHEN EC.ASSE_C_AT 					IS NULL AND ECU.ASSE_C_AT 						IS NULL THEN NULL WHEN ECU.ASSE_C_AT  					IS NULL THEN NULL ELSE 'Y' END 		AS 	ASSE_C_AT_AT
			, CASE WHEN EC.ASSE_E_AT 					= ECU.ASSE_E_AT 					THEN NULL WHEN EC.ASSE_E_AT 					IS NULL AND ECU.ASSE_E_AT 						IS NULL THEN NULL WHEN ECU.ASSE_E_AT  					IS NULL THEN NULL ELSE 'Y' END 		AS 	ASSE_E_AT_AT
			, CASE WHEN EC.ASSE_O_AT 					= ECU.ASSE_O_AT 					THEN NULL WHEN EC.ASSE_O_AT 					IS NULL AND ECU.ASSE_O_AT 						IS NULL THEN NULL WHEN ECU.ASSE_O_AT  					IS NULL THEN NULL ELSE 'Y' END 		AS 	ASSE_O_AT_AT
			, CASE WHEN EC.ASSE_P_AT 					= ECU.ASSE_P_AT 					THEN NULL WHEN EC.ASSE_P_AT 					IS NULL AND ECU.ASSE_P_AT 						IS NULL THEN NULL WHEN ECU.ASSE_P_AT  					IS NULL THEN NULL ELSE 'Y' END 		AS 	ASSE_P_AT_AT
			, CASE WHEN EC.ASSE_PF_AT 					= ECU.ASSE_PF_AT 					THEN NULL WHEN EC.ASSE_PF_AT 					IS NULL AND ECU.ASSE_PF_AT						IS NULL THEN NULL WHEN ECU.ASSE_PF_AT 					IS NULL THEN NULL ELSE 'Y' END 		AS 	ASSE_PF_AT_AT
			, CASE WHEN EC.ASSE_R_AT 					= ECU.ASSE_R_AT 					THEN NULL WHEN EC.ASSE_R_AT 					IS NULL AND ECU.ASSE_R_AT 						IS NULL THEN NULL WHEN ECU.ASSE_R_AT  					IS NULL THEN NULL ELSE 'Y' END 		AS 	ASSE_R_AT_AT
			, CASE WHEN EC.ASSE_S_AT 					= ECU.ASSE_S_AT 					THEN NULL WHEN EC.ASSE_S_AT 					IS NULL AND ECU.ASSE_S_AT 						IS NULL THEN NULL WHEN ECU.ASSE_S_AT  					IS NULL THEN NULL ELSE 'Y' END 		AS 	ASSE_S_AT_AT
			, CASE WHEN EC.ASSE_V_AT 					= ECU.ASSE_V_AT 					THEN NULL WHEN EC.ASSE_V_AT 					IS NULL AND ECU.ASSE_V_AT 						IS NULL THEN NULL WHEN ECU.ASSE_V_AT  					IS NULL THEN NULL ELSE 'Y' END 		AS 	ASSE_V_AT_AT
			, CASE WHEN EC.ATMC_SAMPLE_AT 				= ECU.ATMC_SAMPLE_AT 				THEN NULL WHEN EC.ATMC_SAMPLE_AT 				IS NULL AND ECU.ATMC_SAMPLE_AT 					IS NULL THEN NULL WHEN ECU.ATMC_SAMPLE_AT  				IS NULL THEN NULL ELSE 'Y' END 		AS 	ATMC_SAMPLE_AT_AT
			, CASE WHEN EC.CNRL_CYCLE_CD_ID 			= ECU.CNRL_CYCLE_CD_ID 				THEN NULL WHEN EC.CNRL_CYCLE_CD_ID 				IS NULL AND ECU.CNRL_CYCLE_CD_ID 				IS NULL THEN NULL WHEN ECU.CNRL_CYCLE_CD_ID  			IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_CYCLE_CD_ID_AT
			, CASE WHEN EC.CNRL_CYCLE01					= ECU.CNRL_CYCLE01 					THEN NULL WHEN EC.CNRL_CYCLE01 					IS NULL AND ECU.CNRL_CYCLE01 					IS NULL THEN NULL WHEN ECU.CNRL_CYCLE01  				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_CYCLE01_AT
			, CASE WHEN EC.CNRL_CYCLE02					= ECU.CNRL_CYCLE02 					THEN NULL WHEN EC.CNRL_CYCLE02 					IS NULL AND ECU.CNRL_CYCLE02 					IS NULL THEN NULL WHEN ECU.CNRL_CYCLE02  				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_CYCLE02_AT
			, CASE WHEN EC.CNRL_CYCLE03					= ECU.CNRL_CYCLE03 					THEN NULL WHEN EC.CNRL_CYCLE03 					IS NULL AND ECU.CNRL_CYCLE03 					IS NULL THEN NULL WHEN ECU.CNRL_CYCLE03  				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_CYCLE03_AT
			, CASE WHEN EC.CNRL_CYCLE04					= ECU.CNRL_CYCLE04 					THEN NULL WHEN EC.CNRL_CYCLE04 					IS NULL AND ECU.CNRL_CYCLE04 					IS NULL THEN NULL WHEN ECU.CNRL_CYCLE04  				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_CYCLE04_AT
			, CASE WHEN EC.CNRL_CYCLE05					= ECU.CNRL_CYCLE05 					THEN NULL WHEN EC.CNRL_CYCLE05 					IS NULL AND ECU.CNRL_CYCLE05 					IS NULL THEN NULL WHEN ECU.CNRL_CYCLE05  				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_CYCLE05_AT
			, CASE WHEN EC.CNRL_CYCLE06					= ECU.CNRL_CYCLE06 					THEN NULL WHEN EC.CNRL_CYCLE06 					IS NULL AND ECU.CNRL_CYCLE06 					IS NULL THEN NULL WHEN ECU.CNRL_CYCLE06  				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_CYCLE06_AT
			, CASE WHEN EC.CNRL_CYCLE07					= ECU.CNRL_CYCLE07 					THEN NULL WHEN EC.CNRL_CYCLE07 					IS NULL AND ECU.CNRL_CYCLE07 					IS NULL THEN NULL WHEN ECU.CNRL_CYCLE07  				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_CYCLE07_AT
			, CASE WHEN EC.CNRL_CYCLE08					= ECU.CNRL_CYCLE08 					THEN NULL WHEN EC.CNRL_CYCLE08 					IS NULL AND ECU.CNRL_CYCLE08 					IS NULL THEN NULL WHEN ECU.CNRL_CYCLE08  				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_CYCLE08_AT
			, CASE WHEN EC.CNRL_CYCLE09					= ECU.CNRL_CYCLE09 					THEN NULL WHEN EC.CNRL_CYCLE09 					IS NULL AND ECU.CNRL_CYCLE09 					IS NULL THEN NULL WHEN ECU.CNRL_CYCLE09  				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_CYCLE09_AT
			, CASE WHEN EC.TEST_CYCLE_CD_ID 			= ECU.TEST_CYCLE_CD_ID 				THEN NULL WHEN EC.TEST_CYCLE_CD_ID 				IS NULL AND ECU.TEST_CYCLE_CD_ID 				IS NULL THEN NULL WHEN ECU.TEST_CYCLE_CD_ID 			IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_CYCLE_CD_ID_AT
			, CASE WHEN EC.TEST_CYCLE01					= ECU.TEST_CYCLE01 					THEN NULL WHEN EC.TEST_CYCLE01 					 IS NULL AND ECU.TEST_CYCLE01 					IS NULL THEN NULL WHEN ECU.TEST_CYCLE01  				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_CYCLE01_AT
			, CASE WHEN EC.TEST_CYCLE02					= ECU.TEST_CYCLE02 					THEN NULL WHEN EC.TEST_CYCLE02 					 IS NULL AND ECU.TEST_CYCLE02 					IS NULL THEN NULL WHEN ECU.TEST_CYCLE02  				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_CYCLE02_AT
			, CASE WHEN EC.TEST_CYCLE03					= ECU.TEST_CYCLE03 					THEN NULL WHEN EC.TEST_CYCLE03 					 IS NULL AND ECU.TEST_CYCLE03 					IS NULL THEN NULL WHEN ECU.TEST_CYCLE03  				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_CYCLE03_AT
			, CASE WHEN EC.TEST_CYCLE04					= ECU.TEST_CYCLE04 					THEN NULL WHEN EC.TEST_CYCLE04 					 IS NULL AND ECU.TEST_CYCLE04 					IS NULL THEN NULL WHEN ECU.TEST_CYCLE04  				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_CYCLE04_AT
			, CASE WHEN EC.TEST_CYCLE05					= ECU.TEST_CYCLE05 					THEN NULL WHEN EC.TEST_CYCLE05 					 IS NULL AND ECU.TEST_CYCLE05 					IS NULL THEN NULL WHEN ECU.TEST_CYCLE05  				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_CYCLE05_AT
			, CASE WHEN EC.TEST_CYCLE06					= ECU.TEST_CYCLE06 					THEN NULL WHEN EC.TEST_CYCLE06 					 IS NULL AND ECU.TEST_CYCLE06 					IS NULL THEN NULL WHEN ECU.TEST_CYCLE06  				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_CYCLE06_AT
			, CASE WHEN EC.TEST_CYCLE07					= ECU.TEST_CYCLE07 					THEN NULL WHEN EC.TEST_CYCLE07 					 IS NULL AND ECU.TEST_CYCLE07 					IS NULL THEN NULL WHEN ECU.TEST_CYCLE07  				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_CYCLE07_AT
			, CASE WHEN EC.TEST_CYCLE08					= ECU.TEST_CYCLE08 					THEN NULL WHEN EC.TEST_CYCLE08 					 IS NULL AND ECU.TEST_CYCLE08 					IS NULL THEN NULL WHEN ECU.TEST_CYCLE08  				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_CYCLE08_AT
			, CASE WHEN EC.TEST_CYCLE09					= ECU.TEST_CYCLE09 					THEN NULL WHEN EC.TEST_CYCLE09 					 IS NULL AND ECU.TEST_CYCLE09 					IS NULL THEN NULL WHEN ECU.TEST_CYCLE09  				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_CYCLE09_AT
			, CASE WHEN EC.CNRL_PURPS_ASSET_PRTC 		= ECU.CNRL_PURPS_ASSET_PRTC 		THEN NULL WHEN EC.CNRL_PURPS_ASSET_PRTC 		IS NULL AND ECU.CNRL_PURPS_ASSET_PRTC 			IS NULL THEN NULL WHEN ECU.CNRL_PURPS_ASSET_PRTC 		IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_PURPS_ASSET_PRTC_AT
			, CASE WHEN EC.CNRL_PURPS_CD_ID 			= ECU.CNRL_PURPS_CD_ID 				THEN NULL WHEN EC.CNRL_PURPS_CD_ID				IS NULL AND ECU.CNRL_PURPS_CD_ID 				IS NULL THEN NULL WHEN ECU.CNRL_PURPS_CD_ID 			IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_PURPS_CD_ID_AT
			, CASE WHEN EC.CNRL_PURPS_FNNR_RLABLTY 		= ECU.CNRL_PURPS_FNNR_RLABLTY 		THEN NULL WHEN EC.CNRL_PURPS_FNNR_RLABLTY 		IS NULL AND ECU.CNRL_PURPS_FNNR_RLABLTY 		IS NULL THEN NULL WHEN ECU.CNRL_PURPS_FNNR_RLABLTY 		IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_PURPS_FNNR_RLABLTY_AT
			, CASE WHEN EC.CNRL_PURPS_INSTC_PRVN 		= ECU.CNRL_PURPS_INSTC_PRVN 		THEN NULL WHEN EC.CNRL_PURPS_INSTC_PRVN 		IS NULL AND ECU.CNRL_PURPS_INSTC_PRVN 			IS NULL THEN NULL WHEN ECU.CNRL_PURPS_INSTC_PRVN 		IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_PURPS_INSTC_PRVN_AT
			, CASE WHEN EC.CNRL_TY_CD_ID 				= ECU.CNRL_TY_CD_ID 				THEN NULL WHEN EC.CNRL_TY_CD_ID 				IS NULL AND ECU.CNRL_TY_CD_ID 					IS NULL THEN NULL WHEN ECU.CNRL_TY_CD_ID 				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_TY_CD_ID_AT
			, CASE WHEN EC.CNRL_TY_CECK01 				= ECU.CNRL_TY_CECK01 				THEN NULL WHEN EC.CNRL_TY_CECK01				IS NULL AND ECU.CNRL_TY_CECK01 					IS NULL THEN NULL WHEN ECU.CNRL_TY_CECK01				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_TY_CECK01_AT
			, CASE WHEN EC.CNRL_TY_CECK02 				= ECU.CNRL_TY_CECK02 				THEN NULL WHEN EC.CNRL_TY_CECK02				IS NULL AND ECU.CNRL_TY_CECK02 					IS NULL THEN NULL WHEN ECU.CNRL_TY_CECK02				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_TY_CECK02_AT
			, CASE WHEN EC.CNRL_TY_CECK03 				= ECU.CNRL_TY_CECK03 				THEN NULL WHEN EC.CNRL_TY_CECK03				IS NULL AND ECU.CNRL_TY_CECK03 					IS NULL THEN NULL WHEN ECU.CNRL_TY_CECK03				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_TY_CECK03_AT
			, CASE WHEN EC.CNRL_TY_CECK04 				= ECU.CNRL_TY_CECK04 				THEN NULL WHEN EC.CNRL_TY_CECK04				IS NULL AND ECU.CNRL_TY_CECK04 					IS NULL THEN NULL WHEN ECU.CNRL_TY_CECK04				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_TY_CECK04_AT
			, CASE WHEN EC.CNRL_TY_CECK05 				= ECU.CNRL_TY_CECK05 				THEN NULL WHEN EC.CNRL_TY_CECK05				IS NULL AND ECU.CNRL_TY_CECK05 					IS NULL THEN NULL WHEN ECU.CNRL_TY_CECK05				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_TY_CECK05_AT
			, CASE WHEN EC.CNRL_TY_CECK06 				= ECU.CNRL_TY_CECK06 				THEN NULL WHEN EC.CNRL_TY_CECK06				IS NULL AND ECU.CNRL_TY_CECK06 					IS NULL THEN NULL WHEN ECU.CNRL_TY_CECK06				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_TY_CECK06_AT
			, CASE WHEN EC.CNRL_TY_CECK07 				= ECU.CNRL_TY_CECK07 				THEN NULL WHEN EC.CNRL_TY_CECK07				IS NULL AND ECU.CNRL_TY_CECK07 					IS NULL THEN NULL WHEN ECU.CNRL_TY_CECK07				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_TY_CECK07_AT
			, CASE WHEN EC.CNRL_TY_CECK08 				= ECU.CNRL_TY_CECK08 				THEN NULL WHEN EC.CNRL_TY_CECK08				IS NULL AND ECU.CNRL_TY_CECK08 					IS NULL THEN NULL WHEN ECU.CNRL_TY_CECK08				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_TY_CECK08_AT
			, CASE WHEN EC.CNRL_TY_CECK09 				= ECU.CNRL_TY_CECK09 				THEN NULL WHEN EC.CNRL_TY_CECK09				IS NULL AND ECU.CNRL_TY_CECK09 					IS NULL THEN NULL WHEN ECU.CNRL_TY_CECK09				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_TY_CECK09_AT
			, CASE WHEN EC.CNRL_TY01_CD_ID 				= ECU.CNRL_TY01_CD_ID				THEN NULL WHEN EC.CNRL_TY01_CD_ID 				IS NULL AND ECU.CNRL_TY01_CD_ID 				IS NULL THEN NULL WHEN ECU.CNRL_TY01_CD_ID 				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_TY01_CD_ID_AT
			, CASE WHEN EC.CNRL_TY02_CD_ID 				= ECU.CNRL_TY02_CD_ID 				THEN NULL WHEN EC.CNRL_TY02_CD_ID 				IS NULL AND ECU.CNRL_TY02_CD_ID 				IS NULL THEN NULL WHEN ECU.CNRL_TY02_CD_ID 				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_TY02_CD_ID_AT
			, CASE WHEN EC.CNRL_TY03_CD_ID 				= ECU.CNRL_TY03_CD_ID 				THEN NULL WHEN EC.CNRL_TY03_CD_ID 				IS NULL AND ECU.CNRL_TY03_CD_ID 				IS NULL THEN NULL WHEN ECU.CNRL_TY03_CD_ID 				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_TY03_CD_ID_AT
			, CASE WHEN EC.TEST_MTH_ECGN 				= ECU.TEST_MTH_ECGN 				THEN NULL WHEN EC.TEST_MTH_ECGN 				IS NULL AND ECU.TEST_MTH_ECGN 					IS NULL THEN NULL WHEN ECU.TEST_MTH_ECGN 				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_MTH_ECGN_AT
			, CASE WHEN EC.TEST_MTH_OBSERV 				= ECU.TEST_MTH_OBSERV 				THEN NULL WHEN EC.TEST_MTH_OBSERV 				IS NULL AND ECU.TEST_MTH_OBSERV 				IS NULL THEN NULL WHEN ECU.TEST_MTH_OBSERV 				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_MTH_OBSERV_AT
			, CASE WHEN EC.TEST_MTH_QESTN 				= ECU.TEST_MTH_QESTN 				THEN NULL WHEN EC.TEST_MTH_QESTN 				IS NULL AND ECU.TEST_MTH_QESTN 					IS NULL THEN NULL WHEN ECU.TEST_MTH_QESTN 				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_MTH_QESTN_AT
			, CASE WHEN EC.TEST_MTH_SYS_TRACE 			= ECU.TEST_MTH_SYS_TRACE 			THEN NULL WHEN EC.TEST_MTH_SYS_TRACE 			IS NULL AND ECU.TEST_MTH_SYS_TRACE 				IS NULL THEN NULL WHEN ECU.TEST_MTH_SYS_TRACE 			IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_MTH_SYS_TRACE_AT
			, CASE WHEN EC.TEST_MTH_VRIFY 				= ECU.TEST_MTH_VRIFY 				THEN NULL WHEN EC.TEST_MTH_VRIFY 				IS NULL AND ECU.TEST_MTH_VRIFY 					IS NULL THEN NULL WHEN ECU.TEST_MTH_VRIFY 				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_MTH_VRIFY_AT
			, CASE WHEN (REPLACE(REPLACE(EC.CNRL_ACNTCTGR,   			 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.CNRL_ACNTCTGR, 				 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.CNRL_ACNTCTGR 				IS NULL AND ECU.CNRL_ACNTCTGR 					IS NULL THEN NULL WHEN ECU.CNRL_ACNTCTGR  				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_ACNTCTGR_AT
			, CASE WHEN (REPLACE(REPLACE(EC.CNRL_CM_IEM, 				 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.CNRL_CM_IEM, 					 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.CNRL_CM_IEM 					IS NULL AND ECU.CNRL_CM_IEM 					IS NULL THEN NULL WHEN ECU.CNRL_CM_IEM  				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_CM_IEM_AT
			, CASE WHEN (REPLACE(REPLACE(EC.CNRL_CN, 					 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.CNRL_CN, 						 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.CNRL_CN 						IS NULL AND ECU.CNRL_CN 						IS NULL THEN NULL WHEN ECU.CNRL_CN  					IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_CN_AT
			, CASE WHEN (REPLACE(REPLACE(EC.CNRL_CTGRY, 				 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.CNRL_CTGRY, 					 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.CNRL_CTGRY 					IS NULL AND ECU.CNRL_CTGRY 						IS NULL THEN NULL WHEN ECU.CNRL_CTGRY  					IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_CTGRY_AT
			, CASE WHEN (REPLACE(REPLACE(EC.CNRL_EXC_DEPT, 				 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.CNRL_EXC_DEPT, 				 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.CNRL_EXC_DEPT 				IS NULL AND ECU.CNRL_EXC_DEPT 					IS NULL THEN NULL WHEN ECU.CNRL_EXC_DEPT  				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_EXC_DEPT_AT
			, CASE WHEN (REPLACE(REPLACE(EC.CNRL_EXC_UPPER_DEPT, 		 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.CNRL_EXC_UPPER_DEPT, 			 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.CNRL_EXC_UPPER_DEPT 			IS NULL AND ECU.CNRL_EXC_UPPER_DEPT 			IS NULL THEN NULL WHEN ECU.CNRL_EXC_UPPER_DEPT  		IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_EXC_UPPER_DEPT_AT
			, CASE WHEN (REPLACE(REPLACE(EC.CNRL_EXCBER, 				 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.CNRL_EXCBER, 					 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.CNRL_EXCBER 					IS NULL AND ECU.CNRL_EXCBER 					IS NULL THEN NULL WHEN ECU.CNRL_EXCBER  				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_EXCBER_AT
			, CASE WHEN (REPLACE(REPLACE(EC.CNRL_ID, 					 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.CNRL_ID, 						 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.CNRL_ID 						IS NULL AND ECU.CNRL_ID 						IS NULL THEN NULL WHEN ECU.CNRL_ID 						IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_ID_AT
			, CASE WHEN (REPLACE(REPLACE(EC.CNRL_IMPRVM_DC, 			 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.CNRL_IMPRVM_DC, 				 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.CNRL_IMPRVM_DC 				IS NULL AND ECU.CNRL_IMPRVM_DC 					IS NULL THEN NULL WHEN ECU.CNRL_IMPRVM_DC				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_IMPRVM_DC_AT
			, CASE WHEN (REPLACE(REPLACE(EC.CNRL_IMPRVM_NM, 			 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.CNRL_IMPRVM_NM, 				 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.CNRL_IMPRVM_NM 				IS NULL AND ECU.CNRL_IMPRVM_NM 					IS NULL THEN NULL WHEN ECU.CNRL_IMPRVM_NM				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_IMPRVM_NM_AT
			, CASE WHEN (REPLACE(REPLACE(EC.CNRL_NM, 					 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.CNRL_NM, 						 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.CNRL_NM 						IS NULL AND ECU.CNRL_NM 						IS NULL THEN NULL WHEN ECU.CNRL_NM 						IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_NM_AT
			, CASE WHEN (REPLACE(REPLACE(EC.CNRL_NO,					 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.CNRL_NO, 						 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.CNRL_NO 						IS NULL AND ECU.CNRL_NO 						IS NULL THEN NULL WHEN ECU.CNRL_NO 						IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_NO_AT
			, CASE WHEN (REPLACE(REPLACE(EC.CNRL_PURPS, 				 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.CNRL_PURPS, 					 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.CNRL_PURPS 					IS NULL AND ECU.CNRL_PURPS 						IS NULL THEN NULL WHEN ECU.CNRL_PURPS 					IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_PURPS_AT
			, CASE WHEN (REPLACE(REPLACE(EC.CNRL_RELATE_DOC, 			 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.CNRL_RELATE_DOC, 				 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.CNRL_RELATE_DOC 				IS NULL AND ECU.CNRL_RELATE_DOC 				IS NULL THEN NULL WHEN ECU.CNRL_RELATE_DOC 				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_RELATE_DOC_AT
			, CASE WHEN (REPLACE(REPLACE(EC.CNRL_RELATE_REF, 			 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.CNRL_RELATE_REF, 				 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.CNRL_RELATE_REF 				IS NULL AND ECU.CNRL_RELATE_REF 				IS NULL THEN NULL WHEN ECU.CNRL_RELATE_REF 				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_RELATE_REF_AT
			, CASE WHEN (REPLACE(REPLACE(EC.CNRL_RELATE_SYS, 			 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.CNRL_RELATE_SYS, 				 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.CNRL_RELATE_SYS 				IS NULL AND ECU.CNRL_RELATE_SYS 				IS NULL THEN NULL WHEN ECU.CNRL_RELATE_SYS 				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_RELATE_SYS_AT
			, CASE WHEN (REPLACE(REPLACE(EC.CNRL_RM, 					 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.CNRL_RM, 						 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.CNRL_RM 						IS NULL AND ECU.CNRL_RM 						IS NULL THEN NULL WHEN ECU.CNRL_RM 						IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_RM_AT
			, CASE WHEN (REPLACE(REPLACE(EC.CNRL_RSPNBER, 				 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.CNRL_RSPNBER, 				 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.CNRL_RSPNBER 				IS NULL AND ECU.CNRL_RSPNBER 					IS NULL THEN NULL WHEN ECU.CNRL_RSPNBER 				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_RSPNBER_AT
			, CASE WHEN (REPLACE(REPLACE(EC.CNRL_RSPNSBL_DEPT, 			 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.CNRL_RSPNSBL_DEPT, 			 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.CNRL_RSPNSBL_DEPT 			IS NULL AND ECU.CNRL_RSPNSBL_DEPT				IS NULL THEN NULL WHEN ECU.CNRL_RSPNSBL_DEPT 			IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_RSPNSBL_DEPT_AT
			, CASE WHEN (REPLACE(REPLACE(EC.CNRL_RSPNSBL_UPPER_DEPT, 	 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.CNRL_RSPNSBL_UPPER_DEPT, 		 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.CNRL_RSPNSBL_UPPER_DEPT 		IS NULL AND ECU.CNRL_RSPNSBL_UPPER_DEPT 		IS NULL THEN NULL WHEN ECU.CNRL_RSPNSBL_UPPER_DEPT 		IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_RSPNSBL_UPPER_DEPT_AT
			, CASE WHEN (REPLACE(REPLACE(EC.CNRL_UPRPD_NO, 				 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.CNRL_UPRPD_NO, 				 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.CNRL_UPRPD_NO 				IS NULL AND ECU.CNRL_UPRPD_NO 					IS NULL THEN NULL WHEN ECU.CNRL_UPRPD_NO 				IS NULL THEN NULL ELSE 'Y' END 		AS 	CNRL_UPRPD_NO_AT
			, CASE WHEN (REPLACE(REPLACE(EC.COSO_NO, 					 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.COSO_NO, 						 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.COSO_NO 						IS NULL AND ECU.COSO_NO 						IS NULL THEN NULL WHEN ECU.COSO_NO 						IS NULL THEN NULL ELSE 'Y' END 		AS 	COSO_NO_AT
			, CASE WHEN (REPLACE(REPLACE(EC.DELNG_TY_CD_ID, 			 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.DELNG_TY_CD_ID, 				 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.DELNG_TY_CD_ID 				IS NULL AND ECU.DELNG_TY_CD_ID 					IS NULL THEN NULL WHEN ECU.DELNG_TY_CD_ID 				IS NULL THEN NULL ELSE 'Y' END 		AS 	DELNG_TY_CD_ID_AT
			, CASE WHEN (REPLACE(REPLACE(EC.DSGN_EFCT_AT, 				 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.DSGN_EFCT_AT, 				 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.DSGN_EFCT_AT 				IS NULL AND ECU.DSGN_EFCT_AT 					IS NULL THEN NULL WHEN ECU.DSGN_EFCT_AT 				IS NULL THEN NULL ELSE 'Y' END 		AS 	DSGN_EFCT_AT_AT
			, CASE WHEN (REPLACE(REPLACE(EC.EVL_ID,						 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.EVL_ID, 						 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.EVL_ID 						IS NULL AND ECU.EVL_ID 							IS NULL THEN NULL WHEN ECU.EVL_ID 						IS NULL THEN NULL ELSE 'Y' END 		AS 	EVL_ID_AT
			, CASE WHEN (REPLACE(REPLACE(EC.EXCP_CNT, 					 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.EXCP_CNT,						 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.EXCP_CNT 					IS NULL AND ECU.EXCP_CNT 						IS NULL THEN NULL WHEN ECU.EXCP_CNT 					IS NULL THEN NULL ELSE 'Y' END 		AS 	EXCP_CNT_AT
			, CASE WHEN (REPLACE(REPLACE(EC.IPE_CNRL_AT, 				 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.IPE_CNRL_AT, 					 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.IPE_CNRL_AT 					IS NULL AND ECU.IPE_CNRL_AT 					IS NULL THEN NULL WHEN ECU.IPE_CNRL_AT 					IS NULL THEN NULL ELSE 'Y' END 		AS 	IPE_CNRL_AT_AT
			, CASE WHEN (REPLACE(REPLACE(EC.IPE_CTGRY_CD_ID, 			 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.IPE_CTGRY_CD_ID, 				 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.IPE_CTGRY_CD_ID 				IS NULL AND ECU.IPE_CTGRY_CD_ID 				IS NULL THEN NULL WHEN ECU.IPE_CTGRY_CD_ID 				IS NULL THEN NULL ELSE 'Y' END 		AS 	IPE_CTGRY_CD_ID_AT
			, CASE WHEN (REPLACE(REPLACE(EC.IPE_NM, 					 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.IPE_NM, 						 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.IPE_NM 						IS NULL AND ECU.IPE_NM 							IS NULL THEN NULL WHEN ECU.IPE_NM 						IS NULL THEN NULL ELSE 'Y' END 		AS 	IPE_NM_AT
			, CASE WHEN (REPLACE(REPLACE(EC.IPE_NO, 					 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.IPE_NO, 						 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.IPE_NO 						IS NULL AND ECU.IPE_NO 							IS NULL THEN NULL WHEN ECU.IPE_NO 						IS NULL THEN NULL ELSE 'Y' END 		AS 	IPE_NO_AT
			, CASE WHEN (REPLACE(REPLACE(EC.IPE_TEST_PROCSS, 			 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.IPE_TEST_PROCSS, 				 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.IPE_TEST_PROCSS 				IS NULL AND ECU.IPE_TEST_PROCSS 				IS NULL THEN NULL WHEN ECU.IPE_TEST_PROCSS 				IS NULL THEN NULL ELSE 'Y' END 		AS 	IPE_TEST_PROCSS_AT
			, CASE WHEN (REPLACE(REPLACE(EC.KEY_CNRL_AT, 				 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.KEY_CNRL_AT, 					 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.KEY_CNRL_AT 					IS NULL AND ECU.KEY_CNRL_AT 					IS NULL THEN NULL WHEN ECU.KEY_CNRL_AT 					IS NULL THEN NULL ELSE 'Y' END 		AS 	KEY_CNRL_AT_AT
			, CASE WHEN (REPLACE(REPLACE(EC.MRC_CNRL_AT, 				 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.MRC_CNRL_AT, 					 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.MRC_CNRL_AT 					IS NULL AND ECU.MRC_CNRL_AT 					IS NULL THEN NULL WHEN ECU.MRC_CNRL_AT 					IS NULL THEN NULL ELSE 'Y' END 		AS 	MRC_CNRL_AT_AT
			, CASE WHEN (REPLACE(REPLACE(EC.MRC_CTGRY_CD_ID ,			 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.MRC_CTGRY_CD_ID, 				 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.MRC_CTGRY_CD_ID 				IS NULL AND ECU.MRC_CTGRY_CD_ID 				IS NULL THEN NULL WHEN ECU.MRC_CTGRY_CD_ID 				IS NULL THEN NULL ELSE 'Y' END 		AS 	MRC_CTGRY_CD_ID_AT
			, CASE WHEN (REPLACE(REPLACE(EC.MRC_NO, 					 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.MRC_NO, 						 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.MRC_NO 						IS NULL AND ECU.MRC_NO 							IS NULL THEN NULL WHEN ECU.MRC_NO 						IS NULL THEN NULL ELSE 'Y' END 		AS 	MRC_NO_AT
			, CASE WHEN (REPLACE(REPLACE(EC.OFFICE_TY_CD_ID, 			 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.OFFICE_TY_CD_ID, 				 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.OFFICE_TY_CD_ID 				IS NULL AND ECU.OFFICE_TY_CD_ID 				IS NULL THEN NULL WHEN ECU.OFFICE_TY_CD_ID 				IS NULL THEN NULL ELSE 'Y' END 		AS 	OFFICE_TY_CD_ID_AT
			, CASE WHEN (REPLACE(REPLACE(EC.OPER_EFCT_AT, 				 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.OPER_EFCT_AT, 				 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.OPER_EFCT_AT 				IS NULL AND ECU.OPER_EFCT_AT 					IS NULL THEN NULL WHEN ECU.OPER_EFCT_AT 				IS NULL THEN NULL ELSE 'Y' END 		AS 	OPER_EFCT_AT_AT
			, CASE WHEN (REPLACE(REPLACE(EC.REFRN_NO, 					 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.REFRN_NO, 					 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.REFRN_NO 					IS NULL AND ECU.REFRN_NO 						IS NULL THEN NULL WHEN ECU.REFRN_NO 					IS NULL THEN NULL ELSE 'Y' END 		AS 	REFRN_NO_AT
			, CASE WHEN (REPLACE(REPLACE(EC.RELATE_ACNTCTGR_PBLNTF, 	 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.RELATE_ACNTCTGR_PBLNTF, 		 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.RELATE_ACNTCTGR_PBLNTF 		IS NULL AND ECU.RELATE_ACNTCTGR_PBLNTF 			IS NULL THEN NULL WHEN ECU.RELATE_ACNTCTGR_PBLNTF 		IS NULL THEN NULL ELSE 'Y' END 		AS 	RELATE_ACNTCTGR_PBLNTF_AT
			, CASE WHEN (REPLACE(REPLACE(EC.RELATE_REGLTN_NM, 			 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.RELATE_REGLTN_NM, 			 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.RELATE_REGLTN_NM 			IS NULL AND ECU.RELATE_REGLTN_NM 				IS NULL THEN NULL WHEN ECU.RELATE_REGLTN_NM 			IS NULL THEN NULL ELSE 'Y' END 		AS 	RELATE_REGLTN_NM_AT
			, CASE WHEN (REPLACE(REPLACE(EC.RISK_RESIDUAL_IMPACT, 		 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.RISK_RESIDUAL_IMPACT, 		 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.RISK_RESIDUAL_IMPACT 		IS NULL AND ECU.RISK_RESIDUAL_IMPACT 			IS NULL THEN NULL WHEN ECU.RISK_RESIDUAL_IMPACT 		IS NULL THEN NULL ELSE 'Y' END 		AS 	RISK_RESIDUAL_IMPACT_AT
			, CASE WHEN (REPLACE(REPLACE(EC.RISK_RESIDUAL_LIKEHOOD, 	 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.RISK_RESIDUAL_LIKEHOOD, 		 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.RISK_RESIDUAL_LIKEHOOD 		IS NULL AND ECU.RISK_RESIDUAL_LIKEHOOD 			IS NULL THEN NULL WHEN ECU.RISK_RESIDUAL_LIKEHOOD 		IS NULL THEN NULL ELSE 'Y' END 		AS 	RISK_RESIDUAL_LIKEHOOD_AT
			, CASE WHEN (REPLACE(REPLACE(EC.RISK_RESIDUAL_RATIONG, 		 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.RISK_RESIDUAL_RATIONG, 		 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.RISK_RESIDUAL_RATIONG 		IS NULL AND ECU.RISK_RESIDUAL_RATIONG 			IS NULL THEN NULL WHEN ECU.RISK_RESIDUAL_RATIONG 		IS NULL THEN NULL ELSE 'Y' END 		AS 	RISK_RESIDUAL_RATIONG_AT
			, CASE WHEN (REPLACE(REPLACE(EC.SAMPLE_SIZE, 				 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.SAMPLE_SIZE, 					 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.SAMPLE_SIZE 					IS NULL AND ECU.SAMPLE_SIZE 					IS NULL THEN NULL WHEN ECU.SAMPLE_SIZE 					IS NULL THEN NULL ELSE 'Y' END 		AS 	SAMPLE_SIZE_AT
			, CASE WHEN (REPLACE(REPLACE(EC.TEST_MTH, 					 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.TEST_MTH, 					 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.TEST_MTH 					IS NULL AND ECU.TEST_MTH 						IS NULL THEN NULL WHEN ECU.TEST_MTH 					IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_MTH_AT
			, CASE WHEN (REPLACE(REPLACE(EC.TEST_PROCSS, 				 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.TEST_PROCSS, 					 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.TEST_PROCSS 					IS NULL AND ECU.TEST_PROCSS 					IS NULL THEN NULL WHEN ECU.TEST_PROCSS 					IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_PROCSS_AT
			, CASE WHEN (REPLACE(REPLACE(EC.TEST_RELATE_DOC, 			 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.TEST_RELATE_DOC, 				 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.TEST_RELATE_DOC				IS NULL AND ECU.TEST_RELATE_DOC 				IS NULL THEN NULL WHEN ECU.TEST_RELATE_DOC 				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_RELATE_DOC_AT
			, CASE WHEN (REPLACE(REPLACE(EC.TEST_SANCTN_AT, 			 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.TEST_SANCTN_AT, 				 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.TEST_SANCTN_AT 				IS NULL AND ECU.TEST_SANCTN_AT 					IS NULL THEN NULL WHEN ECU.TEST_SANCTN_AT 				IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_SANCTN_AT_AT
			, CASE WHEN (REPLACE(REPLACE(EC.TEST_TRGET, 				 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.TEST_TRGET, 					 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.TEST_TRGET 					IS NULL AND ECU.TEST_TRGET 						IS NULL THEN NULL WHEN ECU.TEST_TRGET					IS NULL THEN NULL ELSE 'Y' END 		AS 	TEST_TRGET_AT
			, CASE WHEN (REPLACE(REPLACE(EC.TREXAMIN_CNCLSN, 			 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.TREXAMIN_CNCLSN, 				 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.TREXAMIN_CNCLSN 				IS NULL AND ECU.TREXAMIN_CNCLSN 				IS NULL THEN NULL WHEN ECU.TREXAMIN_CNCLSN 				IS NULL THEN NULL ELSE 'Y' END 		AS 	TREXAMIN_CNCLSN_AT
			, CASE WHEN (REPLACE(REPLACE(EC.TREXAMIN_PROCSS, 			 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.TREXAMIN_PROCSS, 				 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.TREXAMIN_PROCSS 				IS NULL AND ECU.TREXAMIN_PROCSS 				IS NULL THEN NULL WHEN ECU.TREXAMIN_PROCSS 				IS NULL THEN NULL ELSE 'Y' END 		AS 	TREXAMIN_PROCSS_AT
			, CASE WHEN (REPLACE(REPLACE(EC.TREXAMIN_PRUF, 				 CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.TREXAMIN_PRUF, 				 CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.TREXAMIN_PRUF 				IS NULL AND ECU.TREXAMIN_PRUF 					IS NULL THEN NULL WHEN ECU.TREXAMIN_PRUF 				IS NULL THEN NULL ELSE 'Y' END 		AS 	TREXAMIN_PRUF_AT
			, CASE WHEN (REPLACE(REPLACE(EC.FNREP_RISKEVL_CSFCTR01, 		CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.FNREP_RISKEVL_CSFCTR01, 		CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.FNREP_RISKEVL_CSFCTR01 			IS NULL AND ECU.FNREP_RISKEVL_CSFCTR01 			IS NULL THEN NULL WHEN ECU.FNREP_RISKEVL_CSFCTR01 			IS NULL THEN NULL ELSE 'Y' END 		AS 	FNREP_RISKEVL_CSFCTR01_AT
			, CASE WHEN (REPLACE(REPLACE(EC.FNREP_RISKEVL_CSFCTR02, 		CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.FNREP_RISKEVL_CSFCTR02, 		CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.FNREP_RISKEVL_CSFCTR02 			IS NULL AND ECU.FNREP_RISKEVL_CSFCTR02 			IS NULL THEN NULL WHEN ECU.FNREP_RISKEVL_CSFCTR02 			IS NULL THEN NULL ELSE 'Y' END 		AS 	FNREP_RISKEVL_CSFCTR02_AT
			, CASE WHEN (REPLACE(REPLACE(EC.FNREP_RISKEVL_CSFCTR03, 		CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.FNREP_RISKEVL_CSFCTR03, 		CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.FNREP_RISKEVL_CSFCTR03 			IS NULL AND ECU.FNREP_RISKEVL_CSFCTR03 			IS NULL THEN NULL WHEN ECU.FNREP_RISKEVL_CSFCTR03 			IS NULL THEN NULL ELSE 'Y' END 		AS 	FNREP_RISKEVL_CSFCTR03_AT
			, CASE WHEN (REPLACE(REPLACE(EC.FNREP_RISKEVL_CSFCTR04, 		CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.FNREP_RISKEVL_CSFCTR04, 		CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.FNREP_RISKEVL_CSFCTR04 			IS NULL AND ECU.FNREP_RISKEVL_CSFCTR04 			IS NULL THEN NULL WHEN ECU.FNREP_RISKEVL_CSFCTR04 			IS NULL THEN NULL ELSE 'Y' END 		AS 	FNREP_RISKEVL_CSFCTR04_AT
			, CASE WHEN (REPLACE(REPLACE(EC.FNREP_RISKEVL_CSFCTR05, 		CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.FNREP_RISKEVL_CSFCTR05, 		CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.FNREP_RISKEVL_CSFCTR05 			IS NULL AND ECU.FNREP_RISKEVL_CSFCTR05 			IS NULL THEN NULL WHEN ECU.FNREP_RISKEVL_CSFCTR05 			IS NULL THEN NULL ELSE 'Y' END 		AS 	FNREP_RISKEVL_CSFCTR05_AT
			, CASE WHEN (REPLACE(REPLACE(EC.FNREP_RISKEVL_CSFCTR06, 		CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.FNREP_RISKEVL_CSFCTR06, 		CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.FNREP_RISKEVL_CSFCTR06 			IS NULL AND ECU.FNREP_RISKEVL_CSFCTR06 			IS NULL THEN NULL WHEN ECU.FNREP_RISKEVL_CSFCTR06 			IS NULL THEN NULL ELSE 'Y' END 		AS 	FNREP_RISKEVL_CSFCTR06_AT
			, CASE WHEN (REPLACE(REPLACE(EC.FNREP_RISKEVL_CSFCTR07, 		CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.FNREP_RISKEVL_CSFCTR07, 		CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.FNREP_RISKEVL_CSFCTR07 			IS NULL AND ECU.FNREP_RISKEVL_CSFCTR07 			IS NULL THEN NULL WHEN ECU.FNREP_RISKEVL_CSFCTR07 			IS NULL THEN NULL ELSE 'Y' END 		AS 	FNREP_RISKEVL_CSFCTR07_AT
			, CASE WHEN (REPLACE(REPLACE(EC.FNREP_RISKEVL_CSFCTR08, 		CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.FNREP_RISKEVL_CSFCTR08, 		CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.FNREP_RISKEVL_CSFCTR08 			IS NULL AND ECU.FNREP_RISKEVL_CSFCTR08 			IS NULL THEN NULL WHEN ECU.FNREP_RISKEVL_CSFCTR08 			IS NULL THEN NULL ELSE 'Y' END 		AS 	FNREP_RISKEVL_CSFCTR08_AT
			, CASE WHEN (REPLACE(REPLACE(EC.FNREP_RISKEVL_CSFCTR09, 		CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.FNREP_RISKEVL_CSFCTR09, 		CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.FNREP_RISKEVL_CSFCTR09 			IS NULL AND ECU.FNREP_RISKEVL_CSFCTR09 			IS NULL THEN NULL WHEN ECU.FNREP_RISKEVL_CSFCTR09 			IS NULL THEN NULL ELSE 'Y' END 		AS 	FNREP_RISKEVL_CSFCTR09_AT
			, CASE WHEN (REPLACE(REPLACE(EC.FNREP_RISKEVL_CSFCTR10, 		CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.FNREP_RISKEVL_CSFCTR10, 		CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.FNREP_RISKEVL_CSFCTR10 			IS NULL AND ECU.FNREP_RISKEVL_CSFCTR10 			IS NULL THEN NULL WHEN ECU.FNREP_RISKEVL_CSFCTR10 			IS NULL THEN NULL ELSE 'Y' END 		AS 	FNREP_RISKEVL_CSFCTR10_AT
			, CASE WHEN (REPLACE(REPLACE(EC.FNREP_CNRL_RISK_CNCLSN, 		CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.FNREP_CNRL_RISK_CNCLSN, 		CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.FNREP_CNRL_RISK_CNCLSN 			IS NULL AND ECU.FNREP_CNRL_RISK_CNCLSN 			IS NULL THEN NULL WHEN ECU.FNREP_CNRL_RISK_CNCLSN 			IS NULL THEN NULL ELSE 'Y' END 		AS 	FNREP_CNRL_RISK_CNCLSN_AT
			, CASE WHEN (REPLACE(REPLACE(EC.FNREP_ACNT_RISK_CNCLSN, 		CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.FNREP_ACNT_RISK_CNCLSN, 		CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.FNREP_ACNT_RISK_CNCLSN 			IS NULL AND ECU.FNREP_ACNT_RISK_CNCLSN 			IS NULL THEN NULL WHEN ECU.FNREP_ACNT_RISK_CNCLSN 			IS NULL THEN NULL ELSE 'Y' END 		AS 	FNREP_ACNT_RISK_CNCLSN_AT
			, CASE WHEN (REPLACE(REPLACE(EC.FNREP_PROCS_RISK_CNCLSN, 		CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.FNREP_PROCS_RISK_CNCLSN, 		CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.FNREP_PROCS_RISK_CNCLSN 			IS NULL AND ECU.FNREP_PROCS_RISK_CNCLSN 			IS NULL THEN NULL WHEN ECU.FNREP_PROCS_RISK_CNCLSN 			IS NULL THEN NULL ELSE 'Y' END 		AS 	FNREP_PROCS_RISK_CNCLSN_AT
			, CASE WHEN (REPLACE(REPLACE(EC.FNREP_GNRLZ_EVL_CNCLSN, 		CHAR(10), ''), CHAR(13), '') = REPLACE(REPLACE(ECU.FNREP_GNRLZ_EVL_CNCLSN, 		CHAR(10), ''), CHAR(13), '')) THEN NULL WHEN EC.FNREP_GNRLZ_EVL_CNCLSN 			IS NULL AND ECU.FNREP_GNRLZ_EVL_CNCLSN 			IS NULL THEN NULL WHEN ECU.FNREP_GNRLZ_EVL_CNCLSN 			IS NULL THEN NULL ELSE 'Y' END 		AS 	FNREP_GNRLZ_EVL_CNCLSN_AT
			*/
			, (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.ACNT_CD 						, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.ACNT_CD 						, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.AFTER_RISK_RESIDUAL_IMPACT 	, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.AFTER_RISK_RESIDUAL_IMPACT 	, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.AFTER_RISK_RESIDUAL_LIKEHOOD 	, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.AFTER_RISK_RESIDUAL_LIKEHOOD 	, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.AFTER_RISK_RESIDUAL_RATIONG 	, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.AFTER_RISK_RESIDUAL_RATIONG 	, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.ASSE_A_AT 						, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.ASSE_A_AT 						, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.ASSE_C_AT 						, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.ASSE_C_AT 						, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.ASSE_E_AT 						, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.ASSE_E_AT 						, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.ASSE_O_AT 						, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.ASSE_O_AT 						, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.ASSE_P_AT 						, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.ASSE_P_AT 						, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.ASSE_PF_AT 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.ASSE_PF_AT 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.ASSE_R_AT 						, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.ASSE_R_AT 						, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.ASSE_S_AT 						, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.ASSE_S_AT 						, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.ASSE_V_AT 						, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.ASSE_V_AT 						, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.ATMC_SAMPLE_AT 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.ATMC_SAMPLE_AT 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_CYCLE_CD_ID 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_CYCLE_CD_ID 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_CYCLE01 				    , 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_CYCLE01 				    , 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_CYCLE02 				    , 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_CYCLE02 				    , 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_CYCLE03 				    , 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_CYCLE03 				    , 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_CYCLE04 				    , 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_CYCLE04 				    , 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_CYCLE05 				    , 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_CYCLE05 				    , 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_CYCLE06 				    , 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_CYCLE06 				    , 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_CYCLE07 				    , 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_CYCLE07 				    , 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_CYCLE08 				    , 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_CYCLE08 				    , 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_CYCLE09 				    , 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_CYCLE09 				    , 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_TY_CD_ID 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_TY_CD_ID 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_TY_CECK01 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_TY_CECK01 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_TY_CECK02 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_TY_CECK02 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_TY_CECK03 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_TY_CECK03 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_TY_CECK04 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_TY_CECK04 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_TY_CECK05 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_TY_CECK05 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_TY_CECK06 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_TY_CECK06 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_TY_CECK07 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_TY_CECK07 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_TY_CECK08 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_TY_CECK08 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_TY_CECK09 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_TY_CECK09 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_TY01_CD_ID 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_TY01_CD_ID				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_TY02_CD_ID 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_TY02_CD_ID 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_TY03_CD_ID 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_TY03_CD_ID 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.TEST_CYCLE_CD_ID 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.TEST_CYCLE_CD_ID 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END)
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.TEST_CYCLE01 				    , 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.TEST_CYCLE01 				    , 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.TEST_CYCLE02 				    , 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.TEST_CYCLE02 				    , 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.TEST_CYCLE03 				    , 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.TEST_CYCLE03 				    , 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.TEST_CYCLE04 				    , 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.TEST_CYCLE04 				    , 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.TEST_CYCLE05 				    , 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.TEST_CYCLE05 				    , 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.TEST_CYCLE06 				    , 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.TEST_CYCLE06 				    , 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.TEST_CYCLE07 				    , 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.TEST_CYCLE07 				    , 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.TEST_CYCLE08 				    , 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.TEST_CYCLE08 				    , 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.TEST_CYCLE09 				    , 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.TEST_CYCLE09 				    , 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.TEST_MTH_ECGN 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.TEST_MTH_ECGN 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.TEST_MTH_OBSERV 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.TEST_MTH_OBSERV 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.TEST_MTH_QESTN 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.TEST_MTH_QESTN 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.TEST_MTH_SYS_TRACE 			, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.TEST_MTH_SYS_TRACE 			, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.TEST_MTH_VRIFY 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.TEST_MTH_VRIFY 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_PURPS_ASSET_PRTC 			, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_PURPS_ASSET_PRTC 			, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_PURPS_CD_ID 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_PURPS_CD_ID 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_PURPS_FNNR_RLABLTY 		, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_PURPS_FNNR_RLABLTY 		, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_PURPS_INSTC_PRVN 			, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_PURPS_INSTC_PRVN 			, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.OFFICE_TY_CD_ID 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.OFFICE_TY_CD_ID 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_ACNTCTGR 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_ACNTCTGR 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_CM_IEM 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_CM_IEM 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_CN 						, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_CN 						, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_CTGRY 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_CTGRY 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_EXC_DEPT 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_EXC_DEPT 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_EXC_UPPER_DEPT 			, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_EXC_UPPER_DEPT 			, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_EXCBER 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_EXCBER 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_ID 						, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_ID 						, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_IMPRVM_DC 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_IMPRVM_DC 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_IMPRVM_NM 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_IMPRVM_NM 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_NM 						, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_NM 						, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_NO						, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_NO 						, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_PURPS 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_PURPS 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_RELATE_DOC 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_RELATE_DOC 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_RELATE_REF 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_RELATE_REF 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_RELATE_SYS 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_RELATE_SYS 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_RM 						, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_RM 						, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_RSPNBER 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_RSPNBER 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_RSPNSBL_DEPT 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_RSPNSBL_DEPT 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_RSPNSBL_UPPER_DEPT 		, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_RSPNSBL_UPPER_DEPT 		, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.CNRL_UPRPD_NO 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.CNRL_UPRPD_NO 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.COSO_NO 						, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.COSO_NO 						, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.DELNG_TY_CD_ID 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.DELNG_TY_CD_ID 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.DSGN_EFCT_AT 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.DSGN_EFCT_AT 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.EVL_ID 						, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.EVL_ID 						, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.EXCP_CNT 						, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.EXCP_CNT						, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.IPE_CNRL_AT 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.IPE_CNRL_AT 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.IPE_CTGRY_CD_ID 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.IPE_CTGRY_CD_ID 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.IPE_NM 						, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.IPE_NM 						, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.IPE_NO 						, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.IPE_NO 						, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.IPE_TEST_PROCSS 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.IPE_TEST_PROCSS 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.KEY_CNRL_AT 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.KEY_CNRL_AT 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.MRC_CNRL_AT 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.MRC_CNRL_AT 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.MRC_CTGRY_CD_ID 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.MRC_CTGRY_CD_ID 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.MRC_NO 						, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.MRC_NO 						, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.OPER_EFCT_AT 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.OPER_EFCT_AT 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.REFRN_NO 						, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.REFRN_NO 						, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.RELATE_ACNTCTGR_PBLNTF 		, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.RELATE_ACNTCTGR_PBLNTF 		, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.RELATE_REGLTN_NM 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.RELATE_REGLTN_NM 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.RISK_RESIDUAL_IMPACT 			, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.RISK_RESIDUAL_IMPACT 			, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.RISK_RESIDUAL_LIKEHOOD 		, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.RISK_RESIDUAL_LIKEHOOD 		, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.RISK_RESIDUAL_RATIONG 			, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.RISK_RESIDUAL_RATIONG 			, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.SAMPLE_SIZE 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.SAMPLE_SIZE 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.TEST_MTH 						, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.TEST_MTH 						, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.TEST_PROCSS 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.TEST_PROCSS 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.TEST_RELATE_DOC 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.TEST_RELATE_DOC 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.TEST_SANCTN_AT 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.TEST_SANCTN_AT 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.TEST_TRGET 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.TEST_TRGET 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.TREXAMIN_CNCLSN 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.TREXAMIN_CNCLSN 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.TREXAMIN_PROCSS 				, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.TREXAMIN_PROCSS 				, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.TREXAMIN_PRUF 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.TREXAMIN_PRUF 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END)
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.FNREP_RISKEVL_CSFCTR01 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.FNREP_RISKEVL_CSFCTR01 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.FNREP_RISKEVL_CSFCTR02 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.FNREP_RISKEVL_CSFCTR02 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.FNREP_RISKEVL_CSFCTR03 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.FNREP_RISKEVL_CSFCTR03 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.FNREP_RISKEVL_CSFCTR04 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.FNREP_RISKEVL_CSFCTR04 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.FNREP_RISKEVL_CSFCTR05 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.FNREP_RISKEVL_CSFCTR05 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.FNREP_RISKEVL_CSFCTR06 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.FNREP_RISKEVL_CSFCTR06 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.FNREP_RISKEVL_CSFCTR07 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.FNREP_RISKEVL_CSFCTR07 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.FNREP_RISKEVL_CSFCTR08 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.FNREP_RISKEVL_CSFCTR08 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.FNREP_RISKEVL_CSFCTR09 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.FNREP_RISKEVL_CSFCTR09 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.FNREP_RISKEVL_CSFCTR10 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.FNREP_RISKEVL_CSFCTR10 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END)			 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.FNREP_CNRL_RISK_CNCLSN 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.FNREP_CNRL_RISK_CNCLSN 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.FNREP_ACNT_RISK_CNCLSN 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.FNREP_ACNT_RISK_CNCLSN 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.FNREP_PROCS_RISK_CNCLSN 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.FNREP_PROCS_RISK_CNCLSN 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) 			
			+ (CASE WHEN (REPLACE(REPLACE(ISNULL(EC.FNREP_GNRLZ_EVL_CNCLSN 					, 'NULL'), CHAR(10), ''), CHAR(13), '')  = REPLACE(REPLACE(ISNULL(ECU.FNREP_GNRLZ_EVL_CNCLSN 					, 'NULL'), CHAR(10), ''), CHAR(13), ''))   THEN 0 ELSE 1 END) AS UPDT_CNT
		FROM 
			TB_CW_UPRPD UP
			LEFT OUTER JOIN TB_CW_UPRPD_EXC UE
				ON 	UP.EVL_ID 			= UE.EVL_ID
	          	AND UP.OBJECT_ID 		= UE.OBJECT_ID
	        LEFT OUTER JOIN TB_CW_UPRPD_POSMANT UPS
				ON 	UP.EVL_ID = UPS.EVL_ID
				AND	UP.OBJECT_ID 		= UPS.OBJECT_ID
				AND UPS.LAST_AT = 'Y'
	        LEFT OUTER JOIN TB_CW_EVL_RCM_MAPNG M
	          	ON 	UP.EVL_ID 			= M.EVL_ID
	          	AND UP.OBJECT_ID 		= M.OBJECT_ID
	        LEFT OUTER JOIN TB_CW_EVL_ELC_RCM_CNRL EC
	          	ON 	UP.EVL_ID			= EC.EVL_ID
	          	AND UP.OBJECT_ID 		= EC.CNRL_ID
	        LEFT OUTER JOIN TB_CW_UPRPD_ELC_CNRL_UPDT ECU
	          	ON 	UP.EVL_ID			= ECU.EVL_ID
	          	AND UP.OBJECT_ID 		= ECU.CNRL_ID
		WHERE 
			UP.EVL_ID 			= #{evlId}
      		AND M.OBJECT_KND_CD_ID 	= 'CTW_001_005'
			AND UP.UPRPD_TY_CD_ID 	= 'CTW_204_001'
			AND UE.STTUS_CD_ID 		= 'COM_023_007'
	</select>
	
	<!-- 프로세스 규준문서 개선 반영 현황  목록 -->
	<select id="procsUpdtList" resultMap="procsUpdtMap">
		SELECT 
			  UP.EVL_ID
			, UP.OBJECT_ID
			, EDU.REFLCT_AT
			, CONVERT ( VARCHAR , EDU.REFLCT_DT , 23 ) AS REFLCT_DE 
			, CONVERT ( VARCHAR , EDU.REFLCT_DT , 23 ) + ' ' + CONVERT ( VARCHAR , EDU.REFLCT_DT , 8) AS REFLCT_DT
			, CASE WHEN E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002' THEN ERP.PROCS_NM
				   WHEN E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004' THEN EEP.PROCS_NM
			  END AS PROCS_NM
			, EP.PROCS_NO
			, M.OBJECT_KND_CD_ID
			, C.CODE_NM	AS OBJECT_KND_CD_NM
			, EDU.UNITY_ID
		FROM 
			TB_CW_UPRPD UP
			LEFT OUTER JOIN TB_CW_UPRPD_EXC UE
				ON 	UP.EVL_ID 			= UE.EVL_ID
	          	AND UP.OBJECT_ID 		= UE.OBJECT_ID
	        LEFT OUTER JOIN TB_CW_EVL_RCM_MAPNG M
	          	ON 	UP.EVL_ID 			= M.EVL_ID
	          	AND UP.OBJECT_ID 		= M.OBJECT_ID
	        LEFT OUTER JOIN TB_CW_EVL_RCM_PROCS ERP
	          	ON 	UP.EVL_ID			= ERP.EVL_ID
	          	AND UP.OBJECT_ID 		= ERP.PROCS_ID
	        LEFT OUTER JOIN TB_CW_EVL_RCM_DOC ERD
	          	ON 	UP.EVL_ID			= ERD.EVL_ID
	          	AND UP.OBJECT_ID 		= ERD.PROCS_ID
	        LEFT OUTER JOIN TB_CW_EVL_ELC_RCM_PROCS EEP
	          	ON 	UP.EVL_ID			= EEP.EVL_ID
	          	AND UP.OBJECT_ID 		= EEP.PROCS_ID
	        LEFT OUTER JOIN TB_CW_EVL_RCM_DOC_UPDT EDU
	          	ON 	UP.EVL_ID			= EDU.EVL_ID
	          	AND UP.OBJECT_ID 		= EDU.PROCS_ID
	        LEFT OUTER JOIN TB_CW_EVL E
	        	ON  UP.EVL_ID 			= E.EVL_ID
	        LEFT OUTER JOIN TB_CO_CODE C
	        	ON CASE WHEN M.OBJECT_KND_CD_ID = 'CTW_001_002' AND (CASE WHEN E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002' THEN #{procsStep}
								      									  WHEN E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004' THEN #{elcProcsStep}
													                 END) = 2 
                		THEN 'CTW_001_003' 
                		ELSE M.OBJECT_KND_CD_ID END 	= C.CODE_ID
		WHERE 
			UP.EVL_ID 				= #{evlId}
      		AND M.OBJECT_KND_CD_ID  IN ('CTW_001_001', 'CTW_001_002', 'CTW_001_003')
			AND UP.UPRPD_TY_CD_ID 	= 'CTW_204_002'
			AND UE.STTUS_CD_ID 		= 'COM_023_007'
	</select>
	
	<select id="selectProcsUpdtList" resultType="EgovMap">
		SELECT   
			  F.FILE_ID
			, F.FILE_SN
			, F.FILE_EXTSN
			, F.FILE_PATH
			, F.FILE_NM
			, F.FILE_ORGINL_NM
			, F.FILE_SIZE
			, F.FILE_KND_CD_ID
			, C1.CODE_NM          AS FILE_KND_CD_NM
			, F.RGS_DT
			, F.RGS_USER_ID
			, C2.USER_NM          AS RGS_USER_NM    
        FROM 
        	TB_CO_FILE F
            LEFT OUTER JOIN TB_CO_CODE C1
                ON  F.FILE_KND_CD_ID = C1.CODE_ID    
            LEFT OUTER JOIN TB_CO_USER C2   
                ON  F.RGS_USER_ID = C2.USER_ID  
        WHERE 
        	F.UNITY_ID  = #{unityId}
        	AND F.DEL_AT = 'N'
        ORDER BY F.FILE_KND_CD_ID ASC, F.FILE_SN ASC
	</select>
	
	
	<!-- RCM반영취소 결재 팝업에서 삭제시 결재 ID 지움. -->
	<delete id="delete">
		BEGIN
			UPDATE TB_CW_EVL_RCM_DOC_UPDT 
			SET   SANCTN_ID = ''
				, STTUS_CD_ID = ''
			WHERE EVL_ID = #{evlId} AND SANCTN_ID = #{reflctSanctnId};
			
			UPDATE TB_CW_UPRPD_CNRL_UPDT
			SET   SANCTN_ID = ''
				, STTUS_CD_ID = ''
			WHERE EVL_ID = #{evlId} AND SANCTN_ID = #{reflctSanctnId};
			
			UPDATE TB_CW_UPRPD_ELC_CNRL_UPDT
			SET   SANCTN_ID = ''
				, STTUS_CD_ID = ''
			WHERE EVL_ID = #{evlId} AND SANCTN_ID = #{reflctSanctnId};
		END;
	</delete>
</mapper>
