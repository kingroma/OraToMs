<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.cas.cwsol.up.mng.serviceimpl.CwupMngPosmantMapper">
    
	<!-- CTW 관리부서의 미비점 관리 메뉴 클릭시 미비점개선 목록 조회 쿼리 -->
	<!-- 미비점 현황 - 사후관리 모니터링 -->
  	<select id="list" resultType="EgovMap">
  	  SELECT
       		E.EVL_ID
		  , UP.OBJECT_ID 	
		  , UPS.POSMANT_SN
          , EM.OBJECT_NO
          , EM.OBJECT_NM
		  , CONVERT ( VARCHAR , CONVERT ( DATE , UP.UPRPD_IMPRVM_PLAN_GOAL_DE , 112 ) , 23 ) AS UPRPD_IMPRVM_PLAN_GOAL_DE	--미비점 개선계획 목표일자
		  , CONVERT ( VARCHAR , UPS.UPD_DT , 23 )	AS RGS_DE  		--사후관리 등록일
		  , E.EVL_SJ  --평가제목
		  , E.EVL_KND_CD_ID  									--평가종류코드ID
          , UPS.STTUS_CD_ID 									-- 상태코드
          , C1.CODE_NM 						AS STTUS_CD_NM 		-- 상태코드명
          , UP.UPRPD_CL_CD_ID 									-- 미비점분류
          , C2.CODE_NM 						AS UPRPD_CL_CD_NM 	-- 미비점분류명
          , UP.UPRPD_TY_CD_ID 									-- 미비점유형
          , C3.CODE_NM 						AS UPRPD_TY_CD_NM 	-- 미비점유형명
          , UPS.EXC_COMPT_CD_ID 								-- 수행여부(수행완료코드)
          , C4.CODE_NM 						AS EXC_COMPT_CD_NM 	-- 수행여부(수행완료코드)명
          , CONVERT ( VARCHAR , CONVERT ( DATE , UPS.EXC_DE , 112 ) , 23 ) 
          									AS EXC_DE 			-- 수행완료예정일자 
          , UH.USER_NM AS EXC_USER_NM 							-- 수행자 이름
		  , UH.DEPT_NM AS EXC_DEPT_NM 							-- 수행자 부서명
          , UPS.EXC_USER_ID   									-- 미비점 수행 담당자 ID
          , UC.STTUS_CD_ID					AS POSMANT_STTUS_CD_ID 	-- 검토 상태코드ID
          , C5.CODE_NM 						AS POSMANT_STTUS_CD_NM 	-- 검토 상태코드명
   		FROM TB_CW_UPRPD UP
	    	INNER JOIN TB_CW_UPRPD_POSMANT UPS
	        	ON  UP.EVL_ID = UPS.EVL_ID
	        	AND UP.OBJECT_ID = UPS.OBJECT_ID
	    	LEFT OUTER JOIN TB_CW_UPRPD_POSMANT_CONFM UC
	        	ON  UP.EVL_ID = UC.EVL_ID
	        	AND UP.OBJECT_ID = UC.OBJECT_ID
            	AND UPS.POSMANT_SN = UC.POSMANT_SN
	        	AND UC.LAST_AT = 'Y'
	      	LEFT OUTER JOIN TB_CW_EVL_RCM_MAPNG EM
	        	ON  UP.EVL_ID = EM.EVL_ID
	        	AND UP.OBJECT_ID = EM.OBJECT_ID
	      	LEFT OUTER JOIN TB_CW_EVL E
	        	ON  UP.EVL_ID = E.EVL_ID
	      	LEFT OUTER JOIN TB_CO_CODE C1
	        	ON 	C1.CODE_ID = UPS.STTUS_CD_ID
	      	LEFT OUTER JOIN TB_CO_CODE C2
	        	ON 	C2.CODE_ID = UP.UPRPD_CL_CD_ID
	      	LEFT OUTER JOIN TB_CO_CODE C3
	        	ON 	C3.CODE_ID = UP.UPRPD_TY_CD_ID
	      	LEFT OUTER JOIN TB_CO_CODE C4
	        	ON 	C4.CODE_ID = UPS.EXC_COMPT_CD_ID
	      	LEFT OUTER JOIN TB_CO_CODE C5
	        	ON 	C5.CODE_ID = UC.STTUS_CD_ID
	      	LEFT OUTER JOIN TB_CO_USER_HIST UH
	        	ON 	UH.USER_ID = UPS.EXC_USER_ID
	        	AND UH.HIST_BGNDE = UPS.EXC_USER_BGNDE
		<trim prefix="WHERE" prefixOverrides="AND|OR ">
			AND UP.EVL_ID = #{evlId}
			AND ISNULL(UPS.LAST_AT, 'Y') = 'Y'
		    AND UP.UPRPD_TY_CD_ID NOT IN ( 'CTW_204_001', 'CTW_204_002' )
        	<if test=' psrchSttusCdId != null and psrchSttusCdId != "" '>
                AND UPS.STTUS_CD_ID = #{psrchSttusCdId} 
            </if>
            <if test=' srchUprpdClCdId != null and srchUprpdClCdId != "" '>
                AND UP.UPRPD_CL_CD_ID = #{srchUprpdClCdId} 
            </if>          
            <if test=' srchUprpdTyCdId != null and srchUprpdTyCdId != "" '>
                AND UP.UPRPD_TY_CD_ID = #{srchUprpdTyCdId} 
            </if> 
        	<if test=' psrchWrd != null and psrchWrd != "" '>
                <choose>
                	<when test="srchTy == 'cnrlNm'" >
						AND    EM.OBJECT_NM LIKE '%' + #{psrchWrd} + '%'                   
					</when>
               	</choose>
             </if>
        </trim>
        ORDER BY UP.OBJECT_ID
  	</select>
  	
  	<!-- 미비점 개선 수행 저장값 확인을 위한 쿼리-->
	<select id="view" resultType="CwupMngVO">
  		SELECT UP.EVL_ID
  			 , E.EVL_KND_CD_ID
  			 , UP.OBJECT_ID
  			 , M.OBJECT_NO
  			 , M.OBJECT_NM
  			 , UE.POSMANT_SN
  			 , UE.EXC_COMPT_CD_ID
  			 , UC.CONFM_SN
  			 , UC.CONFM_CN
  			 , UC.CONFM_AT
			 , UPE.SANCTN_ID AS SANCTN_ID
			 , UPC.SANCTN_ID AS EXMNT_SANCTN_ID
			 , UE.SANCTN_ID AS EXC_SANCTN_ID
  			 , UC.SANCTN_ID AS POSMANT_SANCTN_ID
  			 , UC.STTUS_CD_ID AS POSMANT_STTUS_CD_ID
  			 , UE.STTUS_CD_ID
	      	 , CONVERT ( VARCHAR , CONVERT ( DATE , UE.EXC_DE , 112 ) , 23 ) EXC_DE 
  		FROM TB_CW_UPRPD UP
			LEFT OUTER JOIN TB_CW_UPRPD_EXC UPE
				ON 	UP.EVL_ID = UPE.EVL_ID
				AND	UP.OBJECT_ID = UPE.OBJECT_ID
			LEFT OUTER JOIN TB_CW_UPRPD_CONFM UPC
				ON 	UP.EVL_ID = UPC.EVL_ID
				AND	UP.OBJECT_ID = UPC.OBJECT_ID
				AND UPC.LAST_AT = 'Y'
  			LEFT OUTER JOIN TB_CW_UPRPD_POSMANT UE 
  				ON 	UP.EVL_ID 		= UE.EVL_ID
  				AND	UP.OBJECT_ID 	= UE.OBJECT_ID
  			 	AND UE.LAST_AT		= 'Y'
  			 LEFT OUTER JOIN TB_CW_UPRPD_POSMANT_CONFM UC
  			 	ON	UP.EVL_ID 		= UC.EVL_ID
  			 	AND	UP.OBJECT_ID 	= UC.OBJECT_ID
          		AND UE.POSMANT_SN 	= UC.POSMANT_SN
  			 	AND UC.LAST_AT		= 'Y'
  			 LEFT OUTER JOIN TB_CW_EVL E
  			 	ON 	UP.EVL_ID 		= E.EVL_ID
  			 LEFT OUTER JOIN TB_CW_EVL_RCM_MAPNG M
  			 	ON 	UP.EVL_ID 		= M.EVL_ID
  			 	AND	UP.OBJECT_ID 	= M.OBJECT_ID
		WHERE 	UP.EVL_ID 		= #{evlId}
			AND UP.OBJECT_ID 	= #{objectId} 
			AND UE.POSMANT_SN 	= #{posmantSn}
	</select>
  	
  	
  	<!-- 미비점 개선 수행 확정에 따른 승인 내용 insert -->
	<insert id="save">
		<selectKey keyProperty="confmSn" resultType="String" order="BEFORE">
			SELECT ISNULL(#{confmSn}, ISNULL(MAX(CONFM_SN), 0)+1) AS CONFM_SN FROM TB_CW_UPRPD_POSMANT_CONFM WHERE EVL_ID = #{evlId} AND OBJECT_ID = #{objectId}
		</selectKey>
			MERGE INTO TB_CW_UPRPD_POSMANT_CONFM A
	        USING (VALUES (1)) AS Source (Number)  ON ( A.EVL_ID  = #{evlId} AND A.OBJECT_ID = #{objectId} AND A.POSMANT_SN = #{posmantSn} AND A.CONFM_SN = #{confmSn})
	        WHEN MATCHED THEN
	            UPDATE SET                                           
					  CONFM_AT           = #{confmAt}                 
					, LAST_AT            = 'Y'            
					, CONFM_CN	         = #{confmCn}                 
					, SANCTN_ID          = #{posmantSanctnId}           
					, STTUS_CD_ID        = #{posmantSttusCdId}          
					, CONFM_USER_ID      = #{suserId}                 
					, CONFM_USER_BGNDE   = #{suserBgnde}              
					, CONFM_DT           = GETDATE()                    
	        WHEN NOT MATCHED THEN       
		        INSERT ( 
		        	  EVL_ID, OBJECT_ID, POSMANT_SN, CONFM_SN, CONFM_AT, LAST_AT
		        	, CONFM_CN, SANCTN_ID, STTUS_CD_ID
					, CONFM_USER_ID, CONFM_USER_BGNDE, CONFM_DT
		        ) VALUES  ( 
		        	  #{evlId}, #{objectId}, #{posmantSn}, #{confmSn}, #{confmAt}, 'Y'
		        	, #{confmCn}, #{posmantSanctnId}, #{posmantSttusCdId}
					, #{suserId}, #{suserBgnde}, GETDATE()
			 	)
	</insert>
  	
  	<!-- 내부통제 미비점 수행 테이블  -->
	<!-- 미비점 개선 수행 확정/반려에 따른 상태값 업데이트 -->
	<update id="sttusCdIdUpdate">
		UPDATE TB_CW_UPRPD_POSMANT
		SET   
			STTUS_CD_ID 	= #{sttusCdId}
		WHERE  
			EVL_ID = #{evlId}
			AND OBJECT_ID 	= #{objectId}
			AND POSMANT_SN 	= #{posmantSn}
	</update>
      
	<!-- 내부통제 미비점 승인이력 테이블  -->
	<!-- 미비점 개선 수행 확정/반려에 따른 LastAt 업데이트 -->
	<update id="lastAtUpdate">
		UPDATE TB_CW_UPRPD_POSMANT_CONFM
		SET LAST_AT 		= 'N'
		WHERE 
			EVL_ID 			= #{evlId}
			AND OBJECT_ID 	= #{objectId}
			AND POSMANT_SN 	= #{posmantSn}
	</update>
      
  	<!-- 검토 결재에 따른 상태 업데이트 -->
	<update id="updateSttus">       
		UPDATE TB_CW_UPRPD_POSMANT_CONFM SET
			STTUS_CD_ID 	= #{exmntSttusCdId}
		WHERE 	EVL_ID 		= #{evlId} 
			AND OBJECT_ID 	= #{objectId} 
			AND POSMANT_SN 	= #{posmantSn}
			AND CONFM_SN 	= #{confmSn}
	</update> 
	
</mapper>
