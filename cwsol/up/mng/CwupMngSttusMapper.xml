<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.cas.cwsol.up.mng.serviceimpl.CwupMngSttusMapper">

	<!-- CTW 관리부서의 미비점 목록 row 클릭시 미비점현황 목록 조회 쿼리 -->
	<select id="list" resultType="EgovMap">
		SELECT
			  E.EVL_ID
			, M.OBJECT_ID
			, M.OBJECT_NO
			, M.OBJECT_NM
			, UP.UPRPD_CL_CD_ID             /** 미비점분류		*/
			, C2.CODE_NM AS UPRPD_CL_CD_NM  /** 미비점분류명	*/
			, UP.UPRPD_TY_CD_ID             /** 미비점유형		*/
			, C3.CODE_NM AS UPRPD_TY_CD_NM  /** 미비점유형명	*/
			, UPS.POSMANT_SN
			--, (CASE WHEN UPS.OBJECT_ID IS NOT NULL THEN 'P' ELSE 'U' END) AS WHICH_FLAG
			--, (CASE WHEN UPS.OBJECT_ID IS NOT NULL THEN 'P' ELSE 'U' END) AS FLFL_FLAG
			, (CASE WHEN UPS.OBJECT_ID IS NOT NULL THEN  CONVERT ( VARCHAR , CONVERT ( DATE , UPS.EXC_DE , 112 ) , 23 ) ELSE  CONVERT ( VARCHAR , CONVERT ( DATE , UE.EXC_DE , 112 ) , 23 ) END) AS EXC_DE
			, (CASE WHEN UPS.OBJECT_ID IS NOT NULL THEN  UPS.STTUS_CD_ID ELSE UE.STTUS_CD_ID END) AS STTUS_CD_ID                   	/** 상태코드				*/
			, (CASE WHEN UPS.OBJECT_ID IS NOT NULL THEN  C6.CODE_NM ELSE C1.CODE_NM END) AS STTUS_CD_NM                   			/** 상태코드명				*/
			, (CASE WHEN UPS.OBJECT_ID IS NOT NULL THEN  UPS.EXC_COMPT_CD_ID ELSE  UE.EXC_COMPT_CD_ID END) AS EXC_COMPT_CD_ID       /** 수행여부(수행완료코드)		*/
			, (CASE WHEN UPS.OBJECT_ID IS NOT NULL THEN  C5.CODE_NM ELSE  C4.CODE_NM END) AS EXC_COMPT_CD_NM                        /** 수행여부(수행완료코드명)	*/
			, (CASE 	WHEN UP.UPRPD_TY_CD_ID = 'CTW_204_002'
			        THEN (CASE 	WHEN UD.REFLCT_AT IS NULL THEN 'W'
			              WHEN UD.REFLCT_AT = 'Y' THEN 'Y'
			              ELSE 'N' END)
			        WHEN (E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') AND UP.UPRPD_TY_CD_ID = 'CTW_204_001'
			        THEN (CASE 	WHEN UCU.REFLCT_AT IS NULL THEN 'W'
			              WHEN UCU.REFLCT_AT = 'Y' THEN 'Y'
			              ELSE 'N' END)
			        WHEN (E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') AND UP.UPRPD_TY_CD_ID = 'CTW_204_001'
			        THEN (CASE	WHEN UECU.REFLCT_AT IS NULL THEN 'W'
			              WHEN UECU.REFLCT_AT = 'Y' THEN 'Y'
			              ELSE 'N' END)
			        END) AS RCM_REFLCT_AT --반영여부 명칭
			, (CASE WHEN UP.OBJECT_ID IS NOT NULL THEN 'Y' ELSE 'N' END) AS STEP_EXC
			, (CASE WHEN UP.OBJECT_ID IS NOT NULL AND UE.STTUS_CD_ID IN ('COM_023_005', 'COM_023_006', 'COM_023_007') THEN 'Y' ELSE 'N' END) AS STEP_EXMNT
			, (CASE WHEN UD.PROCS_ID IS NOT NULL OR UCU.CNRL_ID IS NOT NULL OR UECU.CNRL_ID IS NOT NULL THEN 'Y' ELSE 'N' END) AS STEP_REFLCT
			, (CASE WHEN UPS.OBJECT_ID IS NOT NULL THEN 'Y' ELSE 'N' END) AS STEP_POSMANT
			, (CASE WHEN UM.OBJECT_ID IS NOT NULL THEN 'Y' ELSE 'N' END) AS STEP_MRGT
		FROM TB_CW_EVL E
		LEFT OUTER JOIN TB_CW_EVL_RCM_MAPNG M
		  ON  E.EVL_ID        		= M.EVL_ID
		INNER JOIN TB_CW_UPRPD UP
		  ON  E.EVL_ID        		= UP.EVL_ID
		  AND M.OBJECT_ID     		= UP.OBJECT_ID
		LEFT OUTER JOIN TB_CW_UPRPD_EXC UE
		  ON  E.EVL_ID        		= UE.EVL_ID
		  AND UP.OBJECT_ID    		= UE.OBJECT_ID
		LEFT OUTER JOIN TB_CW_EVL_RCM_DOC_UPDT UD
		  ON  E.EVL_ID        		= UD.EVL_ID
		  AND UP.OBJECT_ID    		= UD.PROCS_ID
		LEFT OUTER JOIN TB_CW_UPRPD_CNRL_UPDT UCU
		  ON  E.EVL_ID 				= UCU.EVL_ID
		  AND UP.OBJECT_ID 			= UCU.CNRL_ID
		LEFT OUTER JOIN TB_CW_UPRPD_ELC_CNRL_UPDT UECU
		  ON  E.EVL_ID 				= UECU.EVL_ID
		  AND UP.OBJECT_ID 			= UECU.CNRL_ID
		LEFT OUTER JOIN TB_CW_UPRPD_CONFM UC
		  ON  E.EVL_ID 				= UC.EVL_ID
		  AND UP.OBJECT_ID 			= UC.OBJECT_ID
		  AND UC.LAST_AT		 	= 'Y'
		LEFT OUTER JOIN (	SELECT EVL_ID, OBJECT_ID, MAX(POSMANT_SN) AS POSMANT_SN
					             , EXC_USER_ID, EXC_USER_BGNDE, EXC_CN, EXC_DE, STTUS_CD_ID, EXC_COMPT_CD_ID, SANCTN_ID, UNITY_ID, LAST_AT
					FROM TB_CW_UPRPD_POSMANT
					WHERE EVL_ID 	= #{evlId}
					GROUP BY EVL_ID, OBJECT_ID, EXC_USER_ID, EXC_USER_BGNDE, EXC_CN, EXC_DE, STTUS_CD_ID, EXC_COMPT_CD_ID, SANCTN_ID, UNITY_ID, LAST_AT
		) UPS
  			ON  E.EVL_ID 				= UPS.EVL_ID
  			AND UP.OBJECT_ID 			= UPS.OBJECT_ID
		LEFT OUTER JOIN TB_CW_EVL_EXC EE
		  	ON	E.EVL_ID 		    	= EE.EVL_ID
		  	AND M.OBJECT_ID 	  		= EE.OBJECT_ID
		  	AND EE.CHRG_USER_TY_CD_ID 	= 'CTW_105_001'
		LEFT OUTER JOIN TB_CW_UPRPD_MGRT_MANAGT UM
		  	ON  E.EVL_ID 				= UM.EVL_ID
		  	AND UP.OBJECT_ID = UM.OBJECT_ID
		LEFT OUTER JOIN TB_CO_CODE C1
		  	ON 	C1.CODE_ID 				= UE.STTUS_CD_ID                   /** 상태코드			*/
		LEFT OUTER JOIN TB_CO_CODE C6
		  	ON 	C6.CODE_ID 				= UPS.STTUS_CD_ID                  /** 상태코드			*/
		LEFT OUTER JOIN TB_CO_CODE C2
		  	ON 	C2.CODE_ID 				= UP.UPRPD_CL_CD_ID                /** 미비점분류			*/
		LEFT OUTER JOIN TB_CO_CODE C3
		  	ON 	C3.CODE_ID 				= UP.UPRPD_TY_CD_ID                /** 미비점유형			*/
		LEFT OUTER JOIN TB_CO_CODE C4
		  	ON 	C4.CODE_ID 				= UE.EXC_COMPT_CD_ID               /** 수행여부(수행완료코드)	*/
		LEFT OUTER JOIN TB_CO_CODE C5
		  	ON 	C5.CODE_ID 				= UPS.EXC_COMPT_CD_ID              /** 수행여부(수행완료코드)	*/
	WHERE 1=1
		AND E.EVL_ID = #{evlId}
  		AND E.STTUS_CD_ID IN ('CTW_101_005', 'CTW_101_006')
  		AND EE.STTUS_CD_ID IN ('CTW_106_003', 'CTW_106_005', 'CTW_106_007')
		<if test=' psrchSttusCdId != null and psrchSttusCdId != "" '>
		    AND UE.STTUS_CD_ID = #{psrchSttusCdId}
		</if>
		<if test=' srchUprpdClCdId != null and srchUprpdClCdId != "" '>
		    AND UP.UPRPD_CL_CD_ID = #{srchUprpdClCdId}
		</if>
		<if test=' srchUprpdTyCdId != null and srchUprpdTyCdId != "" '>
		    AND UP.UPRPD_TY_CD_ID = #{srchUprpdTyCdId}
		</if>
		<if test=' psrchWrd != null and psrchWrd != "" '>
			<choose>
				<when test="srchTy == 'cnrlNm'" > AND
              		( M.OBJECT_NM LIKE '%' + #{psrchWrd} + '%' )
              	</when>
          	</choose>
   	   	</if>
        ORDER BY M.OBJECT_ID ASC
    </select>

 	<!-- 미비점 개선 수행 -->
	<select id="view" resultType="CwupMngVO">
		SELECT
			A.EVL_ID
			, A.OBJECT_ID
			, A.EXC_USER_ID
			, A.EXC_USER_BGNDE
			, A.EXC_CN
			, A.EXC_SJ
			, A.EXC_COMPT_CD_ID
			, CONVERT ( VARCHAR , CONVERT ( DATE , A.EXC_DE , 112 ) , 23 ) EXC_DE
			, A.STTUS_CD_ID
			, A.SANCTN_ID
			, A.UNITY_ID
			, A.RGS_DT
			, A.RGS_USER_ID
			, A.UPD_DT
			, A.UPD_USER_ID
			, E.STTUS_CD_ID AS EVL_STTUS_CD_ID
			, UP.POSMANT_SN
			, UC.SANCTN_ID AS EXMNT_SANCTN_ID
			, UP.SANCTN_ID AS EXC_SANCTN_ID
			, UPSC.SANCTN_ID AS POSMANT_SANCTN_ID
			, UM.SANCTN_ID  AS MGRT_SANCTN_ID
			, M.OBJECT_KND_CD_ID
		FROM TB_CW_UPRPD_EXC A
			LEFT OUTER JOIN TB_CW_EVL E
				ON 	A.EVL_ID = E.EVL_ID
			LEFT OUTER JOIN TB_CW_EVL_RCM_MAPNG M
				ON 	A.EVL_ID = M.EVL_ID
				AND A.OBJECT_ID = M.OBJECT_ID
			LEFT OUTER JOIN TB_CW_UPRPD P
				ON 	A.EVL_ID = P.EVL_ID
				AND	A.OBJECT_ID = P.OBJECT_ID
			LEFT OUTER JOIN TB_CW_UPRPD_CONFM UC
				ON 	A.EVL_ID = UC.EVL_ID
				AND	A.OBJECT_ID = UC.OBJECT_ID
				AND UC.LAST_AT = 'Y'
			LEFT OUTER JOIN TB_CW_UPRPD_POSMANT UP
				ON 	A.EVL_ID = UP.EVL_ID
				AND	A.OBJECT_ID = UP.OBJECT_ID
				AND UP.LAST_AT = 'Y'
			LEFT OUTER JOIN TB_CW_UPRPD_POSMANT_CONFM UPSC
				ON 	A.EVL_ID = UPSC.EVL_ID
				AND	A.OBJECT_ID = UPSC.OBJECT_ID
          		AND UP.POSMANT_SN 	= UPSC.POSMANT_SN
				AND UPSC.LAST_AT = 'Y'
			LEFT OUTER JOIN TB_CW_UPRPD_MGRT_MANAGT UM
				ON 	A.EVL_ID = UM.EVL_ID
				AND	A.OBJECT_ID = UM.OBJECT_ID
		WHERE
			A.EVL_ID = #{evlId}
			AND A.OBJECT_ID = #{objectId}
			AND (UP.OBJECT_ID IS NULL OR (UP.OBJECT_ID IS NOT NULL AND UP.POSMANT_SN = (SELECT MAX(POSMANT_SN) FROM TB_CW_UPRPD_POSMANT WHERE EVL_ID = A.EVL_ID AND OBJECT_ID = A.OBJECT_ID)))
	</select>


	<select id="uprpdList" resultType="EgovMap">
		SELECT
			  UP.EVL_ID
			, UP.OBJECT_ID
			, M.OBJECT_NM
			, M.OBJECT_NO
			, M.OBJECT_KND_CD_ID
			, C1.CODE_NM	AS OBJECT_KND_CD_NM
			, UP.UPRPD_CL_CD_ID
			, C2.CODE_NM	AS UPRPD_CL_CD_NM
			, UP.UPRPD_TY_CD_ID
			, C3.CODE_NM	AS UPRPD_TY_CD_NM
			, UE.EXC_COMPT_CD_ID
			, C4.CODE_NM	AS EXC_COMPT_CD_NM
			, UE.STTUS_CD_ID
			, C5.CODE_NM	AS STTUS_CD_NM
			, TO_CHAR(TO_DATE(UE.EXC_DE, 'YYYY-MM-DD'))            AS EXC_DE
		FROM
			TB_CW_UPRPD UP
			LEFT OUTER JOIN TB_CW_UPRPD_EXC UE
				ON 	UP.EVL_ID 			= UE.EVL_ID
	          	AND UP.OBJECT_ID 		= UE.OBJECT_ID
			LEFT OUTER JOIN TB_CW_EVL_EXC EE
				ON	UP.EVL_ID 			= EE.EVL_ID
				AND UP.OBJECT_ID 		= EE.OBJECT_ID
				AND UP.CHRG_USER_ID 	= EE.CHRG_USER_ID
				AND UP.CHRG_USER_TY_CD_ID = EE.CHRG_USER_TY_CD_ID
	        LEFT OUTER JOIN TB_CW_EVL_RCM_MAPNG M
	          	ON 	UP.EVL_ID 			= M.EVL_ID
	          	AND UP.OBJECT_ID 		= M.OBJECT_ID
	        LEFT OUTER JOIN TB_CW_EVL E
	          	ON 	UP.EVL_ID 			= E.EVL_ID
	        LEFT OUTER JOIN TB_CO_CODE C1
	        	ON 	CASE WHEN M.OBJECT_KND_CD_ID = 'CTW_001_002' AND (CASE WHEN E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002' THEN #{procsStep}
								      									   WHEN E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004' THEN #{elcProcsStep}
													                  END) = 2
                		THEN 'CTW_001_003'
                		ELSE M.OBJECT_KND_CD_ID END 	= C1.CODE_ID
	        LEFT OUTER JOIN TB_CO_CODE C2
	        	ON 	UP.UPRPD_CL_CD_ID 	= C2.CODE_ID
	        LEFT OUTER JOIN TB_CO_CODE C3
	        	ON 	UP.UPRPD_TY_CD_ID 	= C3.CODE_ID
	        LEFT OUTER JOIN TB_CO_CODE C4
	        	ON 	UE.EXC_COMPT_CD_ID 	= C4.CODE_ID
	        LEFT OUTER JOIN TB_CO_CODE C5
	        	ON 	UE.STTUS_CD_ID 	= C5.CODE_ID
			WHERE UP.EVL_ID 			= #{evlId}
				--AND UE.STTUS_CD_ID 		= 'COM_023_007'
            AND   EE.STTUS_CD_ID IN ('CTW_106_003', 'CTW_106_005', 'CTW_106_007')
	</select>
</mapper>
