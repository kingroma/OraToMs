<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.cas.cwsol.st.user.serviceimpl.CwstUserMapper">


<!-- 위임 대상자 목록 -->
	<select id="mndtList" resultType="EgovMap">
		WITH DEPT_ASC (DEPT_ID, DEPT_NM, UPPER_DEPT_ID, DEPT_LEVEL, DEPT_PATH) AS (
            SELECT 	D1.DEPT_ID
                  , D1.DEPT_NM
                  , D1.UPPER_DEPT_ID
                  , D1.DEPT_LEVEL
                  , D1.DEPT_ID AS DEPT_PATH
            FROM TB_CO_DEPT  D1
            WHERE D1.DEPT_LEVEL = '1'

            UNION ALL

            SELECT 	D2.DEPT_ID
                  , D2.DEPT_NM
                  , D2.UPPER_DEPT_ID
                  , D2.DEPT_LEVEL
                  , (DEPT_ASC.DEPT_PATH + '/' + D2.DEPT_ID ) AS DEPT_PATH
            FROM TB_CO_DEPT D2, DEPT_ASC DEPT_ASC
            WHERE D2.UPPER_DEPT_ID = DEPT_ASC.DEPT_ID
        )
		SELECT
			TT.*
		FROM (
			SELECT
				  DISTINCT
				  A.EVL_ID
				, E.EVL_KND_CD_ID
				, A.OBJECT_ID
				, B.OBJECT_NO
				, B.OBJECT_NM
				, B.UPPER_OBJECT_ID
				, A.CHRG_USER_ID
				, A.CHRG_USER_BGNDE
				, D.USER_CD
				, D.USER_ID
				, D.USER_NM
				, A.CHRG_USER_TY_CD_ID
				, AA.CODE_NM AS CHRG_USER_TY_CD_NM
				, B.OBJECT_KND_CD_ID
				, BA.CODE_NM AS OBJECT_KND_CD_NM
	            , CASE WHEN B.OBJECT_KND_CD_ID = 'CTW_001_001' THEN 'mega'
	                   WHEN B.OBJECT_KND_CD_ID = 'CTW_001_002' THEN 'mjr'
	                   WHEN B.OBJECT_KND_CD_ID = 'CTW_001_003' THEN 'sub'
	                   WHEN B.OBJECT_KND_CD_ID = 'CTW_001_005' AND A.CHRG_USER_TY_CD_ID = 'CTW_105_001' THEN 'cnrl'
	                   WHEN B.OBJECT_KND_CD_ID = 'CTW_001_005' AND A.CHRG_USER_TY_CD_ID = 'CTW_105_002' THEN 'test'
	              END AS SRCH_PAGE
				, A.CHRG_DEPT_ID
				, A.CHRG_DEPT_BGNDE
				, C.DEPT_ID
				, C.DEPT_NM
				, A.STTUS_CD_ID
				, AC.CODE_NM AS STTUS_CD_NM
				, (CASE WHEN ISNULL(A.STTUS_CD_ID, 'CTW_106_001') IN ('CTW_106_003', 'CTW_106_005') THEN 'Y' ELSE 'N' END) AS EXC_AT
				, (CASE WHEN TA.STTUS_CD_ID IN ('COM_003_002', 'COM_003_003') THEN 'Y' ELSE 'N' END) AS RETIRE_AT
                , TB.CODE_NM AS RETIRE_NM
                , (CASE WHEN A.CHRG_DEPT_ID != TA.DEPT_ID THEN 'Y' ELSE 'N' END) AS DEPT_UPD_AT
			FROM TB_CW_EVL_EXC A
			INNER JOIN (
	        	SELECT
                      DISTINCT
                      SA.EVL_ID, SA.OBJECT_ID, SA.OBJECT_NO, SA.OBJECT_NM, SA.OBJECT_LEVEL, SA.OBJECT_KND_CD_ID
                    , (CASE WHEN SA.OBJECT_KND_CD_ID = 'CTW_001_005' 
                  			AND ((E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002') 
                  				OR ((E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004') AND LOWER(#{elcRiskUseAt}) = 'true' )) THEN SB.UPPER_OBJECT_ID ELSE SA.UPPER_OBJECT_ID END) AS UPPER_OBJECT_ID
              	FROM TB_CW_EVL_RCM_MAPNG SA
              	LEFT OUTER JOIN TB_CW_EVL_RCM_MAPNG SB
                	ON SA.EVL_ID = SB.EVL_ID
                    AND SA.UPPER_MAPNG_ID = SB.MAPNG_ID
	            LEFT OUTER JOIN TB_CW_EVL E
	            	ON  SA.EVL_ID = E.EVL_ID
              	WHERE SA.OBJECT_KND_CD_ID != 'CTW_001_004'   /** 위험 제외 */
                	AND SA.EVL_ID = #{srchEvlId}
	        ) B
				ON A.EVL_ID = B.EVL_ID
				AND A.OBJECT_ID = B.OBJECT_ID
			LEFT OUTER JOIN TB_CW_EVL E
				ON A.EVL_ID = E.EVL_ID
			LEFT OUTER JOIN TB_CO_CODE AA
	            ON A.CHRG_USER_TY_CD_ID = AA.CODE_ID
	        LEFT OUTER JOIN TB_CO_CODE AC
	            ON ISNULL(A.STTUS_CD_ID, 'CTW_106_001') = AC.CODE_ID
			LEFT OUTER JOIN TB_CO_CODE BA
	            ON CASE WHEN B.OBJECT_KND_CD_ID = 'CTW_001_002' AND (CASE WHEN E.EVL_KND_CD_ID = 'CTW_103_001' OR E.EVL_KND_CD_ID = 'CTW_103_002' THEN #{procsStep}
								      									  WHEN E.EVL_KND_CD_ID = 'CTW_103_003' OR E.EVL_KND_CD_ID = 'CTW_103_004' THEN #{elcProcsStep}
													                 END) = 2
                		THEN 'CTW_001_003'
                		ELSE B.OBJECT_KND_CD_ID END = BA.CODE_ID
			INNER JOIN TB_CO_DEPT_HIST C
				ON A.CHRG_DEPT_ID = C.DEPT_ID
				AND A.CHRG_DEPT_BGNDE = C.HIST_BGNDE
			LEFT OUTER JOIN TB_CO_USER_HIST D
				ON A.CHRG_USER_ID = D.USER_ID
				AND A.CHRG_USER_BGNDE = D.HIST_BGNDE
			LEFT OUTER JOIN TB_CO_USER_HIST TA   /** 최신정보*/
				ON A.CHRG_USER_ID = TA.USER_ID
				AND TA.HIST_ENDDE = '99991231'
            LEFT OUTER JOIN TB_CO_CODE TB       /** 재직 상태코드 */
	            ON TA.STTUS_CD_ID = TB.CODE_ID
			WHERE A.EVL_ID = #{srchEvlId}
		) TT
		<trim prefix="WHERE" prefixOverrides="AND|OR ">
			 <choose>
				<when test=' srchDeptId != null and srchDeptId != "" and lowerDeptAt == "Y" '>
					AND TT.DEPT_ID IN (
						SELECT DISTINCT D.DEPT_ID
						FROM DEPT_ASC D
					    WHERE D.DEPT_PATH LIKE '%' + #{srchDeptId} + '%'
					)
				</when>
				<when test=' srchDeptId != null and srchDeptId != "" '>
					AND TT.DEPT_ID = #{srchDeptId}
				</when>
			</choose>
			<if test=' srchObjectKndCdId != null and srchObjectKndCdId != "" '>
				AND TT.OBJECT_KND_CD_ID =  #{srchObjectKndCdId}
			</if>
			<if test=' srchChrgUserTyCdId != null and srchChrgUserTyCdId != "" '>
				AND TT.CHRG_USER_TY_CD_ID = #{srchChrgUserTyCdId}
			</if>
			<if test=' srchExcAt != null and srchExcAt != "" '>
				AND (CASE WHEN ISNULL(TT.STTUS_CD_ID, 'CTW_106_001') IN ('CTW_106_003', 'CTW_106_005') THEN 'Y' ELSE 'N' END) = #{srchExcAt}
			</if>
			<if test=' srchSttusCdId != null and srchSttusCdId != "" '>
				AND ISNULL(TT.STTUS_CD_ID, 'CTW_106_001') = #{srchSttusCdId}
			</if>
			<if test=' srchUserNm != null and srchUserNm != "" '>
				AND UPPER(TT.USER_NM) LIKE '%' + UPPER(#{srchUserNm}) + '%'
			</if>
			<if test=' srchRetireAt != null and srchRetireAt != "" '>
				AND TT.RETIRE_AT = #{srchRetireAt}
			</if>
			<if test=' srchDeptUpdAt != null and srchDeptUpdAt != "" '>
				AND TT.DEPT_UPD_AT = #{srchDeptUpdAt}
			</if>
		</trim>
		ORDER BY TT.OBJECT_ID ASC, TT.CHRG_USER_TY_CD_ID ASC
	</select>

<!-- 평가구분자별 변경 건수 -->
	<select id="mndtCount" resultType="int">
		SELECT COUNT(*) AS CNT
		FROM TB_CW_EVL_EXC
		WHERE EVL_ID 		= #{evlId}
			AND OBJECT_ID 	= #{objectId}
			AND CHRG_USER_TY_CD_ID = #{chrgUserTyCdId}
			AND CHRG_USER_ID = #{chrgUserId}
	</select>

	<select id="mndtHistList" resultType="EgovMap">
		SELECT
			E.EVL_ID AS EVL_ID,
			E.OBJECT_ID AS OBJECT_ID ,
			E.HIST_BGNDE AS HIST_BGNDE ,
			E.HIST_ENDDE AS HIST_ENDDE ,
			E.CHRG_USER_TY_CD_ID AS CHRG_USER_TY_CD_ID,
			C1.CODE_NM AS CHRG_USER_TY_CD_NM ,
			E.CHRG_USER_ID AS CHRG_USER_ID ,
			E.CHRG_USER_BGNDE AS CHRG_USER_BGNDE ,
			UH1.USER_NM AS CHRG_USER_NM ,
			E.CHRG_DEPT_ID AS CHRG_DEPT_ID ,
			E.CHRG_DEPT_BGNDE AS CHRG_DEPT_BGNDE ,
			DH1.DEPT_NM AS CHRG_DEPT_NM ,
			(CASE WHEN UH1.STTUS_CD_ID IN ('COM_003_002', 'COM_003_003') THEN 'Y' ELSE 'N' END) AS RETIRE_AT ,
			(CASE WHEN E.CHRG_DEPT_ID != UH1.DEPT_ID THEN 'Y' ELSE 'N' END) AS DEPT_UPD_AT ,
			E.RGS_USER_ID AS RGS_USER_ID ,
			E.RGS_USER_BGNDE AS RGS_USER_BGNDE ,
			UH2.USER_NM AS RGS_USER_NM ,
			UH2.DEPT_NM AS RGS_DEPT_NM ,
			E.RGS_DT AS RGS_DT ,
			CONVERT ( VARCHAR , E.RGS_DT , 23 ) AS RGS_DATE , 
			CONVERT ( VARCHAR , E.RGS_DT , 8 ) AS RGS_TIME ,
			(CASE WHEN E.HIST_ENDDE = '99991231235959' THEN 'Y' ELSE 'N' END) AS LAST_AT

			FROM TB_CW_EVL_EXC_HIST E

			LEFT OUTER JOIN TB_CO_CODE C1 -- 평가구분
				ON C1.CODE_ID = E.CHRG_USER_TY_CD_ID
			LEFT OUTER JOIN TB_CO_USER_HIST UH1 -- 평가자
				ON UH1.USER_ID = E.CHRG_USER_ID AND UH1.HIST_BGNDE = E.CHRG_USER_BGNDE
			LEFT OUTER JOIN TB_CO_DEPT_HIST DH1 -- 평가자 부서
				ON DH1.DEPT_ID = E.CHRG_DEPT_ID AND DH1.HIST_BGNDE = E.CHRG_DEPT_BGNDE
			LEFT OUTER JOIN TB_CO_USER_HIST UH2 -- 등록자
				ON UH2.USER_ID = E.RGS_USER_ID 	AND UH2.HIST_BGNDE = E.RGS_USER_BGNDE

			WHERE
				E.EVL_ID = #{evlId}
			AND E.OBJECT_ID = #{objectId}

			ORDER BY E.RGS_DT DESC
	</select>

<!-- 담당자 변경 처리 -->
	<update id="mndtUpdate">
		UPDATE TB_CW_EVL_EXC SET
			  CHRG_USER_ID 		= #{changeUserId}
			, CHRG_USER_BGNDE 	= #{changeUserBgnde}
			, CHRG_DEPT_ID 		= #{changeDeptId}
			, CHRG_DEPT_BGNDE 	= #{changeDeptBgnde}
		WHERE EVL_ID 		= #{evlId}
			AND OBJECT_ID 	= #{objectId}
			AND CHRG_USER_TY_CD_ID = #{chrgUserTyCdId}
			AND CHRG_USER_ID = #{chrgUserId}
	</update>
	<!-- 담당자 변경 이력 관리 -->
	<update id="mndtHistUpdate">
		BEGIN
		    UPDATE TB_CW_EVL_EXC_HIST SET
		        HIST_ENDDE = CONVERT(VARCHAR,GETDATE(),112) + REPLACE(CONVERT(VARCHAR,GETDATE(),8),':','')

		    WHERE   HIST_ENDDE =  '99991231235959'
		        AND EVL_ID 		= #{evlId}
		        AND OBJECT_ID 	= #{objectId}
		        AND CHRG_USER_TY_CD_ID = #{chrgUserTyCdId}
		        ;

		    INSERT INTO TB_CW_EVL_EXC_HIST (
		        EVL_ID ,
		        OBJECT_ID ,
		        HIST_BGNDE ,
		        HIST_ENDDE ,
		        CHRG_USER_TY_CD_ID ,

		        CHRG_USER_ID ,
		        CHRG_USER_BGNDE ,
		        CHRG_DEPT_ID ,
		        CHRG_DEPT_BGNDE ,

		        RGS_USER_ID ,
		        RGS_USER_BGNDE ,
		        RGS_DT
		    ) VALUES (
		        #{evlId} ,
		        #{objectId} ,
		        CONVERT(VARCHAR,GETDATE(),112) + REPLACE(CONVERT(VARCHAR,GETDATE(),8),':','') ,
		        '99991231235959' ,
		        #{chrgUserTyCdId} ,

		        #{changeUserId} ,
		        #{changeUserBgnde} ,
		        #{changeDeptId} ,
		        #{changeDeptBgnde} ,

		        #{suserId} ,
		        (SELECT HIST_BGNDE FROM TB_CO_USER_HIST WHERE USER_ID = #{suserId} AND HIST_ENDDE = '99991231') ,
		        GETDATE()
		    ) ;
		END;
	</update>


	<!-- 평가자 부서 중에 승인부서로 등록되지 않은건 SELECT INSERT -->
	<insert id="insertDeptConfm" >
		INSERT INTO TB_CW_EVL_DEPT_CONFM (
			EVL_ID, CONFM_STEP, CHRG_DEPT_ID, CHRG_DEPT_BGNDE, CONFM_USER_ID, CONFM_USER_BGNDE
        )
        SELECT TA.EVL_ID, TA.CONFM_STEP, TA.CHRG_DEPT_ID, TA.HIST_BGNDE, RCU.USER_ID, RCU.HIST_BGNDE
		FROM (
		    SELECT DISTINCT A.EVL_ID, A.CHRG_DEPT_ID, D.HIST_BGNDE, B.CHRG_DEPT_ID AS NEW_CHRG_DEPT_ID, 1 AS CONFM_STEP
		    FROM TB_CW_EVL_EXC A
		         INNER JOIN TB_CW_EVL_RCM_MAPNG O
		          ON A.EVL_ID = O.EVL_ID
		           AND A.OBJECT_ID = O.OBJECT_ID
		         LEFT OUTER JOIN TB_CO_DEPT_HIST D
		          ON A.CHRG_DEPT_ID = D.DEPT_ID
		           AND '99991231' = D.HIST_ENDDE
		         FULL OUTER JOIN TB_CW_EVL_DEPT_CONFM B
		          ON A.EVL_ID = B.EVL_ID
		           AND A.CHRG_DEPT_ID = B.CHRG_DEPT_ID
		           AND D.HIST_BGNDE = B.CHRG_DEPT_BGNDE
		           AND B.CONFM_STEP = 1
		    WHERE A.EVL_ID = #{evlId}
		        AND A.CHRG_USER_TY_CD_ID = 'CTW_105_001'
		        AND O.OBJECT_KND_CD_ID = 'CTW_001_005'
		    UNION
		    SELECT DISTINCT A.EVL_ID, A.CHRG_DEPT_ID, D.HIST_BGNDE, B.CHRG_DEPT_ID AS NEW_CHRG_DEPT_ID, 2 AS CONFM_STEP
		    FROM TB_CW_EVL_EXC A
		         INNER JOIN TB_CW_EVL_RCM_MAPNG O
		          ON A.EVL_ID = O.EVL_ID
		           AND A.OBJECT_ID = O.OBJECT_ID
		         LEFT OUTER JOIN TB_CO_DEPT_HIST D
		          ON A.CHRG_DEPT_ID = D.DEPT_ID
		           AND '99991231' = D.HIST_ENDDE
		         FULL OUTER JOIN TB_CW_EVL_DEPT_CONFM B
		          ON A.EVL_ID = B.EVL_ID
		           AND A.CHRG_DEPT_ID = B.CHRG_DEPT_ID
		           AND D.HIST_BGNDE = B.CHRG_DEPT_BGNDE
		           AND B.CONFM_STEP = 2
		    WHERE A.EVL_ID = #{evlId}
		        AND A.CHRG_USER_TY_CD_ID = 'CTW_105_001'
		        AND O.OBJECT_KND_CD_ID = 'CTW_001_005'
		    UNION
		    SELECT DISTINCT A.EVL_ID, A.CHRG_DEPT_ID, D.HIST_BGNDE, B.CHRG_DEPT_ID AS NEW_CHRG_DEPT_ID, 3 AS CONFM_STEP
		    FROM TB_CW_EVL_EXC A
		         INNER JOIN TB_CW_EVL_RCM_MAPNG O
		          ON A.EVL_ID = O.EVL_ID
		           AND A.OBJECT_ID = O.OBJECT_ID
		         LEFT OUTER JOIN TB_CO_DEPT_HIST D
		          ON A.CHRG_DEPT_ID = D.DEPT_ID
		           AND '99991231' = D.HIST_ENDDE
		         FULL OUTER JOIN TB_CW_EVL_DEPT_CONFM B
		          ON A.EVL_ID = B.EVL_ID
		           AND A.CHRG_DEPT_ID = B.CHRG_DEPT_ID
		           AND D.HIST_BGNDE = B.CHRG_DEPT_BGNDE
		           AND B.CONFM_STEP = 3
		    WHERE A.EVL_ID = #{evlId}
		        AND A.CHRG_USER_TY_CD_ID = 'CTW_105_001'
		        AND O.OBJECT_KND_CD_ID = 'CTW_001_005'
		    ) TA
            LEFT OUTER JOIN TB_CW_ELC_RCM_MAPNG_DEPT_CONFM RC
             ON TA.CHRG_DEPT_ID = RC.CHRG_DEPT_ID
              AND TA.CONFM_STEP = RC.CONFM_STEP
            LEFT OUTER JOIN TB_CO_USER_HIST RCU
             ON RC.CONFM_USER_ID = RCU.USER_ID
              AND RCU.HIST_ENDDE = '99991231'
		WHERE TA.NEW_CHRG_DEPT_ID IS NULL
    </insert>

	<!-- 평가자 부서가 존재 하지 않는 승인부서는 삭제 -->
    <delete id="deleteDeptConfm">
        DELETE FROM TB_CW_EVL_DEPT_CONFM
        WHERE EVL_ID = #{evlId}
            AND CHRG_DEPT_ID NOT IN (SELECT A.CHRG_DEPT_ID
	                                 FROM TB_CW_EVL_EXC A
								          INNER JOIN TB_CW_EVL_RCM_MAPNG O
								           ON A.EVL_ID = O.EVL_ID
								            AND A.OBJECT_ID = O.OBJECT_ID
	                                 WHERE A.EVL_ID = #{evlId}
								        AND A.CHRG_USER_TY_CD_ID = 'CTW_105_001'
								        AND O.OBJECT_KND_CD_ID = 'CTW_001_005')
    </delete>




	<!-- 조직형 - 부서별 승인자 -->
	<select id="deptConfmList" resultType="EgovMap">
		SELECT A1.EVL_ID, A1.CHRG_DEPT_ID, A1.CHRG_DEPT_BGNDE, B1.DEPT_CD AS CHRG_DEPT_CD, B1.DEPT_NM AS CHRG_DEPT_NM
			 , A1.CONFM_STEP AS CONFM_STEP1, A1.CONFM_AT AS CONFM_AT1, A1.CONFM_CN AS CONFM_CN1
			 , A1.CONFM_USER_ID AS CONFM_USER_ID1, A1.CONFM_USER_BGNDE AS CONFM_USER_BGNDE1, A1.CONFM_DT AS CONFM_DT1, A1.STTUS_CD_ID AS CONFM_STTUS_CD_ID1, CD1.CODE_NM AS CONFM_STTUS_CD_NM1, C1.USER_CD AS CONFM_USER_CD1, C1.USER_NM AS CONFM_USER_NM1, C1.DEPT_NM AS CONFM_DEPT_NM1
             , CASE WHEN COALESCE(C1.DEPT_ID,'NA') != COALESCE(C11.DEPT_ID,'NA') THEN 'Y' ELSE 'N' END AS DEPT_UPD_AT1
             , CASE WHEN COALESCE(C1.STTUS_CD_ID,'NA') != COALESCE(C11.STTUS_CD_ID,'NA') THEN 'Y' ELSE 'N' END AS RETIRE_AT1
		     , A2.CONFM_STEP AS CONFM_STEP2, A2.CONFM_AT AS CONFM_AT2, A2.CONFM_CN AS CONFM_CN2
		     , A2.CONFM_USER_ID AS CONFM_USER_ID2, A2.CONFM_USER_BGNDE AS CONFM_USER_BGNDE2, A2.CONFM_DT AS CONFM_DT2, A2.STTUS_CD_ID AS CONFM_STTUS_CD_ID2, CD2.CODE_NM AS CONFM_STTUS_CD_NM2, C2.USER_CD AS CONFM_USER_CD2, C2.USER_NM AS CONFM_USER_NM2, C2.DEPT_NM AS CONFM_DEPT_NM2
             , CASE WHEN COALESCE(C2.DEPT_ID,'NA') != COALESCE(C22.DEPT_ID,'NA') THEN 'Y' ELSE 'N' END AS DEPT_UPD_AT2
             , CASE WHEN COALESCE(C2.STTUS_CD_ID,'NA') != COALESCE(C22.STTUS_CD_ID,'NA') THEN 'Y' ELSE 'N' END AS RETIRE_AT2
		     , A3.CONFM_STEP AS CONFM_STEP3, A3.CONFM_AT AS CONFM_AT3, A3.CONFM_CN AS CONFM_CN3
		     , A3.CONFM_USER_ID AS CONFM_USER_ID3, A3.CONFM_USER_BGNDE AS CONFM_USER_BGNDE3, A3.CONFM_DT AS CONFM_DT3, A3.STTUS_CD_ID AS CONFM_STTUS_CD_ID3, CD3.CODE_NM AS CONFM_STTUS_CD_NM3, C3.USER_CD AS CONFM_USER_CD3, C3.USER_NM AS CONFM_USER_NM3, C3.DEPT_NM AS CONFM_DEPT_NM3
             , CASE WHEN COALESCE(C3.DEPT_ID,'NA') != COALESCE(C33.DEPT_ID,'NA') THEN 'Y' ELSE 'N' END AS DEPT_UPD_AT3
             , CASE WHEN COALESCE(C3.STTUS_CD_ID,'NA') != COALESCE(C33.STTUS_CD_ID,'NA') THEN 'Y' ELSE 'N' END AS RETIRE_AT3
		FROM TB_CW_EVL_DEPT_CONFM A1
		     LEFT OUTER JOIN TB_CO_DEPT_HIST B1
		      ON A1.CHRG_DEPT_ID = B1.DEPT_ID
		      AND A1.CHRG_DEPT_BGNDE = B1.HIST_BGNDE
		     LEFT OUTER JOIN TB_CO_USER_HIST C1
		      ON A1.CONFM_USER_ID = C1.USER_ID
		      AND A1.CONFM_USER_BGNDE = C1.HIST_BGNDE
		     LEFT OUTER JOIN TB_CO_USER C11
		      ON A1.CONFM_USER_ID = C11.USER_ID
		     LEFT OUTER JOIN TB_CO_CODE CD1
		      ON A1.STTUS_CD_ID = CD1.CODE_ID
		     LEFT OUTER JOIN TB_CW_EVL_DEPT_CONFM A2
		      ON A1.EVL_ID = A2.EVL_ID
		      AND A1.CHRG_DEPT_ID = A2.CHRG_DEPT_ID
		      AND A2.CONFM_STEP = 2
		     LEFT OUTER JOIN TB_CO_USER_HIST C2
		      ON A2.CONFM_USER_ID = C2.USER_ID
		      AND A2.CONFM_USER_BGNDE = C2.HIST_BGNDE
		     LEFT OUTER JOIN TB_CO_USER C22
		      ON A2.CONFM_USER_ID = C22.USER_ID
		     LEFT OUTER JOIN TB_CO_CODE CD2
		      ON A2.STTUS_CD_ID = CD2.CODE_ID
		     LEFT OUTER JOIN TB_CW_EVL_DEPT_CONFM A3
		      ON A1.EVL_ID = A3.EVL_ID
		      AND A1.CHRG_DEPT_ID = A3.CHRG_DEPT_ID
		      AND A3.CONFM_STEP = 3
		     LEFT OUTER JOIN TB_CO_USER_HIST C3
		      ON A3.CONFM_USER_ID = C3.USER_ID
		      AND A3.CONFM_USER_BGNDE = C3.HIST_BGNDE
		     LEFT OUTER JOIN TB_CO_USER C33
		      ON A3.CONFM_USER_ID = C33.USER_ID
		     LEFT OUTER JOIN TB_CO_CODE CD3
		      ON A3.STTUS_CD_ID = CD3.CODE_ID
		WHERE A1.EVL_ID = #{srchEvlId}
		    AND A1.CONFM_STEP = 1
		ORDER BY B1.DEPT_CD ASC
	</select>



	<update id="updateDeptConfm">
	<![CDATA[
		UPDATE TB_CW_EVL_DEPT_CONFM
		SET CONFM_USER_ID = #{userId}
			, CONFM_USER_BGNDE = #{userBgnde}
		WHERE EVL_ID = #{srchEvlId}
			AND CONFM_STEP = #{confmStep}
			AND CHRG_DEPT_ID = #{deptId}
	]]>
	</update>


</mapper>
