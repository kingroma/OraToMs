<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.cas.cwsol.ce.operexc.serviceimpl.CwceOperExcMapper">

    <select id="list" resultType="EgovMap">
		WITH MNDT_LIST AS (
		    SELECT #{suserId} AS MNDT_USER_ID 
		    UNION
		    SELECT A.MNDT_USER_ID
		    FROM TB_CO_MNDT A
		         LEFT OUTER JOIN TB_CO_MNDT_KND B
		          ON A.MNDT_ID = B.MNDT_ID
		    WHERE A.AGENT_USER_ID = #{suserId}
		        AND CONVERT(VARCHAR,GETDATE(),112) + REPLACE(CONVERT(VARCHAR,GETDATE(),8),':','') BETWEEN A.MNDT_BGNDE+A.MNDT_BGNTM AND A.MNDT_ENDDE+A.MNDT_ENDTM
		        AND A.STTUS_CD_ID = 'COM_021_005'
		        AND B.MNDT_KND_CD_ID = 'COM_019_001'
		)
        SELECT    A.EVL_ID
                , A.EVL_TY_CD_ID
                , C1.CODE_NM AS EVL_TY_CD_NM
                , A.EVL_KND_CD_ID
                , C2.CODE_NM AS EVL_KND_CD_NM
                , A.EVL_SJ
                , A.ACCNUT_YY
                , A.ACCNUT_SE_CD_ID
                , C3.CODE_NM AS ACCNUT_SE_CD_NM
                , CONVERT ( VARCHAR , CONVERT ( DATE , A.EVL_BGNDE , 112 ) , 23 ) AS EVL_BGNDE 
                , CONVERT ( VARCHAR , CONVERT ( DATE , A.EVL_ENDDE , 112 ) , 23 ) AS EVL_ENDDE 
                , CASE WHEN CONVERT ( VARCHAR , GETDATE() , 112 )  BETWEEN A.EVL_BGNDE AND A.EVL_ENDDE THEN 'Y'
                       ELSE 'N' 
                  END AS CRRSPND_AT
                , A.EVL_CN 
                , A.STTUS_CD_ID 
                , C4.CODE_NM AS STTUS_CD_NM
                , A.SANCTN_ID 
                , A.UNITY_ID 
                , A.RGS_DT 
                , A.RGS_USER_ID 
                , A.UPD_DT 
                , A.UPD_USER_ID
                , COUNT(CASE WHEN EXC.CHRG_USER_ID IN (SELECT MNDT_USER_ID FROM MNDT_LIST) AND B.OBJECT_KND_CD_ID = 'CTW_001_005' AND EXC.CHRG_USER_TY_CD_ID = 'CTW_105_002' THEN 1 END)  AS CNRL_TEST_TOT_CNT
                , COUNT(CASE WHEN EXC.CHRG_USER_ID IN (SELECT MNDT_USER_ID FROM MNDT_LIST) AND B.OBJECT_KND_CD_ID = 'CTW_001_005' AND EXC.CHRG_USER_TY_CD_ID = 'CTW_105_001' THEN 1 END)  AS CNRL_CHRG_TOT_CNT
                , COUNT(CASE WHEN EXC.CHRG_USER_ID IN (SELECT MNDT_USER_ID FROM MNDT_LIST) AND B.OBJECT_KND_CD_ID = 'CTW_001_003' AND EXC.CHRG_USER_TY_CD_ID = 'CTW_105_001' THEN 1 END)  AS SUB_CHRG_TOT_CNT
                , COUNT(CASE WHEN EXC.CHRG_USER_ID IN (SELECT MNDT_USER_ID FROM MNDT_LIST) AND B.OBJECT_KND_CD_ID = 'CTW_001_002' AND EXC.CHRG_USER_TY_CD_ID = 'CTW_105_001' THEN 1 END)  AS MJR_CHRG_TOT_CNT
                , COUNT(CASE WHEN EXC.CHRG_USER_ID IN (SELECT MNDT_USER_ID FROM MNDT_LIST) AND B.OBJECT_KND_CD_ID = 'CTW_001_001' AND EXC.CHRG_USER_TY_CD_ID = 'CTW_105_001' THEN 1 END)  AS MEGA_CHRG_TOT_CNT
                , COUNT(CASE WHEN EXC.CHRG_USER_ID IN (SELECT MNDT_USER_ID FROM MNDT_LIST) AND B.OBJECT_KND_CD_ID = 'CTW_001_005' AND EXC.CHRG_USER_TY_CD_ID = 'CTW_105_002' AND ISNULL(EXC.STTUS_CD_ID, 'CTW_106_001') IN ('CTW_106_003', 'CTW_106_005') THEN 1 END) AS CNRL_TEST_COMPT_CNT
                , COUNT(CASE WHEN EXC.CHRG_USER_ID IN (SELECT MNDT_USER_ID FROM MNDT_LIST) AND B.OBJECT_KND_CD_ID = 'CTW_001_005' AND EXC.CHRG_USER_TY_CD_ID = 'CTW_105_001' AND ISNULL(EXC.STTUS_CD_ID, 'CTW_106_001') IN ('CTW_106_003', 'CTW_106_005') THEN 1 END) AS CNRL_CHRG_COMPT_CNT
                , COUNT(CASE WHEN EXC.CHRG_USER_ID IN (SELECT MNDT_USER_ID FROM MNDT_LIST) AND B.OBJECT_KND_CD_ID = 'CTW_001_003' AND EXC.CHRG_USER_TY_CD_ID = 'CTW_105_001' AND ISNULL(EXC.STTUS_CD_ID, 'CTW_106_001') IN ('CTW_106_003', 'CTW_106_005') THEN 1 END) AS SUB_CHRG_COMPT_CNT
                , COUNT(CASE WHEN EXC.CHRG_USER_ID IN (SELECT MNDT_USER_ID FROM MNDT_LIST) AND B.OBJECT_KND_CD_ID = 'CTW_001_002' AND EXC.CHRG_USER_TY_CD_ID = 'CTW_105_001' AND ISNULL(EXC.STTUS_CD_ID, 'CTW_106_001') IN ('CTW_106_003', 'CTW_106_005') THEN 1 END) AS MJR_CHRG_COMPT_CNT
                , COUNT(CASE WHEN EXC.CHRG_USER_ID IN (SELECT MNDT_USER_ID FROM MNDT_LIST) AND B.OBJECT_KND_CD_ID = 'CTW_001_001' AND EXC.CHRG_USER_TY_CD_ID = 'CTW_105_001' AND ISNULL(EXC.STTUS_CD_ID, 'CTW_106_001') IN ('CTW_106_003', 'CTW_106_005') THEN 1 END) AS MEGA_CHRG_COMPT_CNT
                , COUNT(CASE WHEN EXC.CHRG_USER_ID IN (SELECT MNDT_USER_ID FROM MNDT_LIST) AND B.OBJECT_KND_CD_ID = 'CTW_001_005' AND EXC.CHRG_USER_TY_CD_ID = 'CTW_105_002' AND ISNULL(EXC.STTUS_CD_ID, 'CTW_106_001') NOT IN ('CTW_106_003', 'CTW_106_005') THEN 1 END) AS CNRL_TEST_UNCOMPT_CNT
                , COUNT(CASE WHEN EXC.CHRG_USER_ID IN (SELECT MNDT_USER_ID FROM MNDT_LIST) AND B.OBJECT_KND_CD_ID = 'CTW_001_005' AND EXC.CHRG_USER_TY_CD_ID = 'CTW_105_001' AND ISNULL(EXC.STTUS_CD_ID, 'CTW_106_001') NOT IN ('CTW_106_003', 'CTW_106_005') THEN 1 END) AS CNRL_CHRG_UNCOMPT_CNT
                , COUNT(CASE WHEN EXC.CHRG_USER_ID IN (SELECT MNDT_USER_ID FROM MNDT_LIST) AND B.OBJECT_KND_CD_ID = 'CTW_001_003' AND EXC.CHRG_USER_TY_CD_ID = 'CTW_105_001' AND ISNULL(EXC.STTUS_CD_ID, 'CTW_106_001') NOT IN ('CTW_106_003', 'CTW_106_005') THEN 1 END) AS SUB_CHRG_UNCOMPT_CNT
                , COUNT(CASE WHEN EXC.CHRG_USER_ID IN (SELECT MNDT_USER_ID FROM MNDT_LIST) AND B.OBJECT_KND_CD_ID = 'CTW_001_002' AND EXC.CHRG_USER_TY_CD_ID = 'CTW_105_001' AND ISNULL(EXC.STTUS_CD_ID, 'CTW_106_001') NOT IN ('CTW_106_003', 'CTW_106_005') THEN 1 END) AS MJR_CHRG_UNCOMPT_CNT
                , COUNT(CASE WHEN EXC.CHRG_USER_ID IN (SELECT MNDT_USER_ID FROM MNDT_LIST) AND B.OBJECT_KND_CD_ID = 'CTW_001_001' AND EXC.CHRG_USER_TY_CD_ID = 'CTW_105_001' AND ISNULL(EXC.STTUS_CD_ID, 'CTW_106_001') NOT IN ('CTW_106_003', 'CTW_106_005') THEN 1 END) AS MEGA_CHRG_UNCOMPT_CNT
                , CASE WHEN A.STTUS_CD_ID = 'CTW_101_005' AND CONVERT ( VARCHAR , GETDATE() , 112 )  BETWEEN A.EVL_BGNDE AND A.EVL_ENDDE THEN 'Y' ELSE 'N' END AS EXC_AT
                , COUNT(DISTINCT CASE WHEN DC1.CONFM_USER_ID IN (SELECT MNDT_USER_ID FROM MNDT_LIST) THEN DC1.CHRG_DEPT_ID ELSE NULL END) AS CONFM1_TOT_CNT
                , COUNT(DISTINCT CASE WHEN DC2.CONFM_USER_ID IN (SELECT MNDT_USER_ID FROM MNDT_LIST) THEN DC2.CHRG_DEPT_ID ELSE NULL END) AS CONFM2_TOT_CNT
                , COUNT(DISTINCT CASE WHEN DC3.CONFM_USER_ID IN (SELECT MNDT_USER_ID FROM MNDT_LIST) THEN DC3.CHRG_DEPT_ID ELSE NULL END) AS CONFM3_TOT_CNT
                , COUNT(DISTINCT CASE WHEN DC1.CONFM_USER_ID IN (SELECT MNDT_USER_ID FROM MNDT_LIST) AND DC1.CONFM_AT = 'Y' AND ISNULL(DC1.STTUS_CD_ID, 'CTW_106_001') IN ('CTW_106_003', 'CTW_106_005') THEN DC1.CHRG_DEPT_ID ELSE NULL END) AS CONFM1_COMPT_CNT
                , COUNT(DISTINCT CASE WHEN DC2.CONFM_USER_ID IN (SELECT MNDT_USER_ID FROM MNDT_LIST) AND DC2.CONFM_AT = 'Y' AND ISNULL(DC2.STTUS_CD_ID, 'CTW_106_001') IN ('CTW_106_003', 'CTW_106_005') THEN DC2.CHRG_DEPT_ID ELSE NULL END) AS CONFM2_COMPT_CNT
                , COUNT(DISTINCT CASE WHEN DC3.CONFM_USER_ID IN (SELECT MNDT_USER_ID FROM MNDT_LIST) AND DC3.CONFM_AT = 'Y' AND ISNULL(DC3.STTUS_CD_ID, 'CTW_106_001') IN ('CTW_106_003', 'CTW_106_005') THEN DC3.CHRG_DEPT_ID ELSE NULL END) AS CONFM3_COMPT_CNT
                , COUNT(DISTINCT CASE WHEN DC1.CONFM_USER_ID IN (SELECT MNDT_USER_ID FROM MNDT_LIST) AND DC1.CONFM_AT = 'Y' AND ISNULL(DC1.STTUS_CD_ID, 'CTW_106_001') NOT IN ('CTW_106_003', 'CTW_106_005') THEN DC1.CHRG_DEPT_ID ELSE NULL END) AS CONFM1_UNCOMPT_CNT
                , COUNT(DISTINCT CASE WHEN DC2.CONFM_USER_ID IN (SELECT MNDT_USER_ID FROM MNDT_LIST) AND DC2.CONFM_AT = 'Y' AND ISNULL(DC2.STTUS_CD_ID, 'CTW_106_001') NOT IN ('CTW_106_003', 'CTW_106_005') THEN DC2.CHRG_DEPT_ID ELSE NULL END) AS CONFM2_UNCOMPT_CNT
                , COUNT(DISTINCT CASE WHEN DC3.CONFM_USER_ID IN (SELECT MNDT_USER_ID FROM MNDT_LIST) AND DC3.CONFM_AT = 'Y' AND ISNULL(DC3.STTUS_CD_ID, 'CTW_106_001') NOT IN ('CTW_106_003', 'CTW_106_005') THEN DC3.CHRG_DEPT_ID ELSE NULL END) AS CONFM3_UNCOMPT_CNT
        FROM TB_CW_EVL A
            LEFT OUTER JOIN TB_CW_EVL_EXC EXC
                ON  A.EVL_ID = EXC.EVL_ID
            LEFT OUTER JOIN (SELECT EVL_ID, OBJECT_ID, OBJECT_KND_CD_ID
                             FROM TB_CW_EVL_RCM_MAPNG
                             GROUP BY EVL_ID, OBJECT_ID, OBJECT_KND_CD_ID) B    /** 통제ID 중복 제거 */
                ON  EXC.EVL_ID = B.EVL_ID
                AND EXC.OBJECT_ID = B.OBJECT_ID
            LEFT OUTER JOIN TB_CO_CODE C1
                ON A.EVL_TY_CD_ID = C1.CODE_ID
            LEFT OUTER JOIN TB_CO_CODE C2
                ON A.EVL_KND_CD_ID = C2.CODE_ID
            LEFT OUTER JOIN TB_CO_CODE C3
                ON A.ACCNUT_SE_CD_ID = C3.CODE_ID
            LEFT OUTER JOIN TB_CO_CODE C4
                ON A.STTUS_CD_ID = C4.CODE_ID
            LEFT OUTER JOIN TB_CW_EVL_DEPT_CONFM DC1
                ON EXC.EVL_ID = DC1.EVL_ID
                AND EXC.CHRG_DEPT_ID = DC1.CHRG_DEPT_ID
                AND 1 = DC1.CONFM_STEP
            LEFT OUTER JOIN TB_CW_EVL_DEPT_CONFM DC2
                ON EXC.EVL_ID = DC2.EVL_ID
                AND EXC.CHRG_DEPT_ID = DC2.CHRG_DEPT_ID
                AND 2 = DC2.CONFM_STEP
            LEFT OUTER JOIN TB_CW_EVL_DEPT_CONFM DC3
                ON EXC.EVL_ID = DC3.EVL_ID
                AND EXC.CHRG_DEPT_ID = DC3.CHRG_DEPT_ID
                AND 3 = DC3.CONFM_STEP
        <trim prefix="WHERE" prefixOverrides="AND|OR ">
            AND A.STTUS_CD_ID IN ( 'CTW_101_005', 'CTW_101_006' )
            AND A.EVL_KND_CD_ID = 'CTW_103_002'
            <if test='menuMngrAt == "N"'>
                AND (
	             EXC.CHRG_USER_ID IN (SELECT MNDT_USER_ID FROM MNDT_LIST)      /** 위임자로 지정된 평가 조회 */
	             OR DC1.CONFM_USER_ID IN (SELECT MNDT_USER_ID FROM MNDT_LIST)      /** 1승인 위임자로 지정된 평가 조회 */
	             OR DC2.CONFM_USER_ID IN (SELECT MNDT_USER_ID FROM MNDT_LIST)      /** 2승인 위임자로 지정된 평가 조회 */
	             OR DC3.CONFM_USER_ID IN (SELECT MNDT_USER_ID FROM MNDT_LIST)      /** 3승인(위임자)로 지정된 평가 조회 */
	             )
            </if>
            <if test=' srchBgnde != null and srchBgnde != "" '>
                <![CDATA[  AND A.EVL_BGNDE >= REPLACE(#{srchBgnde},'-','')  ]]>
            </if>
            <if test=' srchEndde != null and srchEndde != "" '>
                <![CDATA[  AND A.EVL_ENDDE <= REPLACE(#{srchEndde},'-','')  ]]>
            </if>

            <if test=' srchAccnutYy != null and srchAccnutYy != "" '>
                AND A.ACCNUT_YY = #{srchAccnutYy}
            </if>
            <if test=' srchAccnutSeCdId != null and srchAccnutSeCdId != "" '>
                AND A.ACCNUT_SE_CD_ID = #{srchAccnutSeCdId}
            </if>
            <if test=' srchEvlTyCdId != null and srchEvlTyCdId != "" '>
                AND A.EVL_TY_CD_ID = #{srchEvlTyCdId}
            </if>
            <if test=' srchSttusCdId != null and srchSttusCdId != "" '>
                AND A.STTUS_CD_ID = #{srchSttusCdId}
            </if>
            <if test=' srchWrd != null and srchWrd != "" '>
                <choose>
                    <when test="srchTy == 'sj'" >           AND A.EVL_SJ LIKE '%' + #{srchWrd} + '%'          </when>
                    <when test="srchTy == 'cn'" >           AND A.EVL_CN LIKE '%' + #{srchWrd} + '%'          </when>
                </choose>
            </if>
         </trim>
         GROUP BY A.EVL_ID
                , A.EVL_TY_CD_ID
                , C1.CODE_NM
                , A.EVL_KND_CD_ID
                , C2.CODE_NM
                , A.EVL_SJ
                , A.ACCNUT_YY
                , A.ACCNUT_SE_CD_ID
                , C3.CODE_NM
                , CONVERT ( VARCHAR , CONVERT ( DATE , A.EVL_BGNDE , 112 ) , 23 )
                , CONVERT ( VARCHAR , CONVERT ( DATE , A.EVL_ENDDE , 112 ) , 23 )
                , CASE WHEN CONVERT ( VARCHAR , GETDATE() , 112 )  BETWEEN EVL_BGNDE AND EVL_ENDDE THEN 'Y' ELSE 'N' END
                , A.EVL_CN
                , A.STTUS_CD_ID
                , C4.CODE_NM
                , A.SANCTN_ID
                , A.UNITY_ID
                , A.RGS_DT
                , A.RGS_USER_ID
                , A.UPD_DT
                , A.UPD_USER_ID
                , CASE WHEN A.STTUS_CD_ID = 'CTW_101_005' AND CONVERT ( VARCHAR , GETDATE() , 112 )  BETWEEN A.EVL_BGNDE AND A.EVL_ENDDE THEN 'Y' ELSE 'N' END
         ORDER BY A.EVL_ID DESC
    </select>

    <!-- detailList 화면의 평가계획 상세조회 -->
    <select id="view" resultType="CwceOperExcVO">
        SELECT    A.EVL_ID
                , A.EVL_TY_CD_ID
                , C1.CODE_NM AS EVL_TY_CD_NM
                , A.EVL_KND_CD_ID
                , C2.CODE_NM AS EVL_KND_CD_NM
                , A.EVL_SJ
                , A.ACCNUT_YY
                , A.ACCNUT_SE_CD_ID
                , C3.CODE_NM AS ACCNUT_SE_CD_NM
                , CONVERT ( VARCHAR , CONVERT ( DATE , A.EVL_BGNDE , 112 ) , 23 ) AS EVL_BGNDE
                , CONVERT ( VARCHAR , CONVERT ( DATE , A.EVL_ENDDE , 112 ) , 23 ) AS EVL_ENDDE
                , A.EVL_CN
                , A.STTUS_CD_ID
                , C4.CODE_NM AS STTUS_CD_NM
                , A.SANCTN_ID
                , A.UNITY_ID
                , A.RGS_DT
                , A.RGS_USER_ID
                , A.UPD_DT
                , A.UPD_USER_ID
                , #{srchPage}               AS SRCH_PAGE
                , #{srchObjectKndCdId}      AS SRCH_OBJECT_KND_CD_ID
	            <![CDATA[
	            , (CASE WHEN A.STTUS_CD_ID = 'CTW_101_005' AND CONVERT ( VARCHAR , GETDATE() , 112 )  BETWEEN A.EVL_BGNDE AND A.EVL_ENDDE THEN 'Y'
	                      ELSE 'N'
	                END) AS EXC_AT
                , CASE WHEN CONVERT ( VARCHAR , GETDATE() , 112 )  BETWEEN A.EVL_BGNDE AND A.EVL_ENDDE THEN 'Y'
                       ELSE 'N'
                  END AS CRRSPND_AT
	            ]]>
        FROM TB_CW_EVL A
            LEFT OUTER JOIN TB_CO_CODE C1
                ON A.EVL_TY_CD_ID = C1.CODE_ID
            LEFT OUTER JOIN TB_CO_CODE C2
                ON A.EVL_KND_CD_ID = C2.CODE_ID
            LEFT OUTER JOIN TB_CO_CODE C3
                ON A.ACCNUT_SE_CD_ID = C3.CODE_ID
            LEFT OUTER JOIN TB_CO_CODE C4
                ON A.STTUS_CD_ID = C4.CODE_ID
        WHERE A.EVL_ID = #{evlId}
    </select>

    <update id="update">
        UPDATE TB_CW_EVL_EXC SET
              EVL_OPINION       = #{evlOpinion}
            , EVL_CNCLSN_CD_ID  = #{evlCnclsnCdId}
            , UNITY_ID          = #{unityId}
            , STTUS_CD_ID       = #{sttusCdId}
            , SANCTN_ID         = #{sanctnId}
            , UPD_DT            = GETDATE()
            , UPD_USER_ID       = #{suserId}
        WHERE   EVL_ID          = #{evlId}
            AND OBJECT_ID       = #{objectId}
        <choose>
            <when test=' srchPage != null and srchPage == "test" '>
                AND CHRG_USER_TY_CD_ID = 'CTW_105_002'
            </when>
            <otherwise>
                AND CHRG_USER_TY_CD_ID = 'CTW_105_001'
            </otherwise>
        </choose>
            AND CHRG_USER_ID = #{chrgUserId}
    </update>

	<!-- 통제 이력 조회: 검색목록(평가) -->
    <select id="selectOperExcEvlHistSrchList" resultType="EgovMap">
		SELECT
		    EVL.EVL_ID
		    , EVL.EVL_SJ
		    , EVL.ACCNUT_YY
		    , EVL.ACCNUT_SE_CD_ID
		    , CD.CODE_NM AS ACCNUT_SE_CD_NM
		    , EVL.EVL_KND_CD_ID
		    , CONVERT ( VARCHAR , CONVERT ( DATE , EVL.EVL_BGNDE , 112 ) , 23 ) AS EVL_BGNDE
		    , CONVERT ( VARCHAR , CONVERT ( DATE , EVL.EVL_ENDDE , 112 ) , 23 ) AS EVL_ENDDE
		    , EVL.STTUS_CD_ID
		FROM
		    TB_CW_EVL EVL
		    INNER JOIN TB_CW_EVL_RCM_MAPNG ERM
		        ON EVL.EVL_ID = ERM.EVL_ID
		    LEFT OUTER JOIN TB_CO_CODE CD /** 회계구분코드명 */
		        ON EVL.ACCNUT_SE_CD_ID = CD.CODE_ID
		WHERE
		    EVL.EVL_KND_CD_ID = 'CTW_103_002' /** PLC 운영평가 */
		    AND EVL.STTUS_CD_ID = 'CTW_101_006' /** 평가 완료 */
		    AND ERM.OBJECT_ID = #{srchObjectId}
		ORDER BY
		    EVL.ACCNUT_YY DESC
		    , EVL.ACCNUT_SE_CD_ID ASC
    </select>

	<!-- 통제 이력 조회: 검색목록(사용자) -->
	<select id="selectOperExcChrgUserSrchList" resultType="EgovMap">
		SELECT
		    EXCT.EVL_ID
		    , EXCT.OBJECT_ID
		    , EXCT.SAMPLE_TY_CD_ID
		    , CD.CODE_NM AS SAMPLE_TY_CD_NM
		    , EXCT.CHRG_USER_ID AS TEST_USER_ID
		    , UR.USER_NM AS TEST_USER_NM
		    , UR.DEPT_ID AS TEST_DEPT_ID
		    , DPT.DEPT_NM AS TEST_DEPT_NM
		    , EXCT.TOT_SAMPLE_SIZE
		FROM
		    TB_CW_EVL_EXC_TEST EXCT
		    LEFT OUTER JOIN TB_CO_USER UR /** 테스터(사용자) */
		        ON EXCT.CHRG_USER_ID = UR.USER_ID
		    LEFT OUTER JOIN TB_CO_DEPT DPT  /** 테스터(부서) */
		        ON UR.DEPT_ID = DPT.DEPT_ID
		    LEFT OUTER JOIN TB_CO_CODE CD /** 표본타입 */
		        ON EXCT.SAMPLE_TY_CD_ID = CD.CODE_ID
		WHERE
		    EXCT.CHRG_USER_TY_CD_ID = 'CTW_105_002' /** 테스터 */
		    AND EXCT.OBJECT_ID = #{srchObjectId}
		    AND EXCT.EVL_ID = #{srchEvlId}
		ORDER BY
		    EXCT.TOT_SAMPLE_SIZE DESC
    </select>

	<!-- 평가 통제 수행 테스트 표본 결과 (자동/수동 샘플) -->
	<select id="selectEvlExcResultSampleList" resultType="EgovMap">
		SELECT
		    EXCR.SAMPLE_NO
		    , EXCR.SAMPLE_CN
		    , EXCR.SAMPLE_TEST_OPINION
		    , EXCR.SAMPLE_RESULT
		    , CD.CODE_NM AS SAMPLE_RESULT_NM
		    , EXCR.PRUF_UNITY_ID
            , EXCR.CHRG_USER_ID AS TEST_USER_ID
            , UR.USER_NM AS TEST_USER_NM
            , DPT.DEPT_NM AS TEST_DEPT_NM
		FROM
		    TB_CW_EVL_EXC_RESULT EXCR
		    LEFT OUTER JOIN TB_CO_CODE CD /** 표본 결과 코드 */
		        ON EXCR.SAMPLE_RESULT = CD.CODE_ID
		    LEFT OUTER JOIN TB_CO_USER UR /** 테스터 정보 */
                ON EXCR.CHRG_USER_ID = UR.USER_ID
            LEFT OUTER JOIN TB_CO_DEPT DPT /** 테스터 부서 정보 */
                ON UR.DEPT_ID = DPT.DEPT_ID
		WHERE
		    EXCR.CHRG_USER_TY_CD_ID = 'CTW_105_002' /** 테스터만 조회 */
		    AND EXCR.OBJECT_ID = #{objectId}
		    AND EXCR.EVL_ID = #{evlId}
		    <if test=' chrgUserId != null and chrgUserId != "" '>
		    	AND EXCR.CHRG_USER_ID = #{chrgUserId}
		    </if>
		ORDER BY
		    UR.USER_NM ASC
		    , EXCR.SORT_SN ASC
	</select>

</mapper>
