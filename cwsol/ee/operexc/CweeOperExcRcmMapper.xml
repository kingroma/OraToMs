<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.cas.cwsol.ee.operexc.serviceimpl.CweeOperExcRcmMapper">


    <!-- 테스터 상세화면 -->
    <select id="testView" resultType="CweeOperExcVO">
        SELECT  DISTINCT
                E.EVL_ID
              , E.EVL_TY_CD_ID
              , E.EVL_KND_CD_ID
              , M.OBJECT_ID
			<choose>
				<when test=' elcRiskUseAt != "false" '>
              , ( CASE
                       WHEN M.OBJECT_KND_CD_ID = 'CTW_001_005' THEN MB.UPPER_OBJECT_ID
                       ELSE M.UPPER_OBJECT_ID
                  END ) AS UPPER_OBJECT_ID
				</when>
				<otherwise>
		  	 , M.UPPER_OBJECT_ID AS UPPER_OBJECT_ID
				</otherwise>
			</choose>
              , M.OBJECT_KND_CD_ID
              , CASE WHEN M.OBJECT_KND_CD_ID = 'CTW_001_005' THEN 'test' END AS SRCH_PAGE
              , EXC.EVL_OPINION
              , EXC.EVL_OPINION_CD_ID
              , EXC.EVL_CNCLSN_CD_ID
              , C2.CODE_NM                                      AS EVL_CNCLSN_CD_NM
              , EXC.UNITY_ID
              , EXC.CHRG_USER_ID
              , EXC.CHRG_USER_BGNDE
              , EXC.CHRG_DEPT_ID
              , EXC.CHRG_DEPT_BGNDE
              , EXC.CHRG_USER_TY_CD_ID
              , U.USER_NM AS CHRG_USER_NM
              , U.DEPT_NM AS CHRG_DEPT_NM
              , EXC.STTUS_CD_ID
              , EXC.SANCTN_ID
              , C1.CODE_NM AS STTUS_CD_NM
              , NVL2((SELECT CNRL_ID FROM TB_CW_UPRPD_ELC_CNRL_UPDT WHERE EVL_ID = E.EVL_ID AND CNRL_ID = C.CNRL_ID), 'Y', 'N') AS CNRL_UPDT_AT
              , CONVERT ( VARCHAR , EXC.UPD_DT , 23 ) + ' ' + CONVERT ( VARCHAR , EXC.UPD_DT , 8) AS UPD_DT
              , F.CONFM_ID
              , F.CONFM_SN
              , F.CONFM_CN
              , CONVERT ( VARCHAR , F.CONFM_DT , 23 ) + ' ' + CONVERT ( VARCHAR , F.CONFM_DT , 8) AS CONFM_DT
              , UF.USER_NM AS CONFM_USER_NM
              , UF.DEPT_NM AS CONFM_DEPT_NM
              , NVL2(C.REFRN_NO, 'Y', 'N')                      AS REFRN_NO_AT
              , C.REFRN_NO
              , C.CNRL_NO
              , C.CNRL_NM
              , C.OFFICE_TY_CD_ID
              , C.TEST_SANCTN_AT
              <![CDATA[
              , (CASE WHEN E.STTUS_CD_ID = 'CTW_101_005' AND CONVERT ( VARCHAR , GETDATE() , 112 )  BETWEEN E.EVL_BGNDE AND E.EVL_ENDDE THEN 'Y'
                      ELSE 'N'
                 END) AS EXC_AT
              ]]>
              , EXT.SAMPLE_TY_CD_ID
              , EXT.TOT_SAMPLE_SIZE
              , EXT.NRMLT_SAMPLE_SIZE
              , EXT.EXCP_SAMPLE_SIZE
              , EXT.NA_SAMPLE_SIZE
        FROM TB_CW_EVL E
            LEFT OUTER JOIN TB_CW_EVL_EXC EXC
                ON  E.EVL_ID = EXC.EVL_ID
                AND EXC.CHRG_USER_TY_CD_ID = 'CTW_105_002'
            INNER JOIN TB_CW_EVL_RCM_MAPNG M
                ON  E.EVL_ID = M.EVL_ID
                AND EXC.OBJECT_ID = M.OBJECT_ID
                AND M.OBJECT_KND_CD_ID = 'CTW_001_005'
            LEFT OUTER JOIN TB_CW_EVL_RCM_MAPNG MB
                ON M.UPPER_MAPNG_ID = MB.MAPNG_ID
            INNER JOIN TB_CW_EVL_ELC_RCM_CNRL C
                ON  E.EVL_ID = C.EVL_ID
                AND M.OBJECT_ID = C.CNRL_ID
            LEFT OUTER JOIN TB_CW_EVL_EXC_CONFM F
                ON  EXC.CONFM_ID = F.CONFM_ID
                AND F.LAST_AT = 'Y'
            LEFT OUTER JOIN TB_CO_USER_HIST U
                ON  EXC.CHRG_USER_ID = U.USER_ID
                AND EXC.CHRG_USER_BGNDE = U.HIST_BGNDE
            LEFT OUTER JOIN TB_CO_DEPT_HIST D
                ON  EXC.CHRG_DEPT_ID = D.DEPT_ID
                AND EXC.CHRG_DEPT_BGNDE = D.HIST_BGNDE
            LEFT OUTER JOIN TB_CO_USER_HIST UF
                ON  F.CONFM_USER_ID = UF.USER_ID
                AND F.CONFM_USER_BGNDE = UF.HIST_BGNDE
            LEFT OUTER JOIN TB_CO_CODE C1
                ON EXC.STTUS_CD_ID = C1.CODE_ID
             LEFT OUTER JOIN TB_CO_CODE C2
                ON  EXC.EVL_CNCLSN_CD_ID = C2.CODE_ID
             LEFT OUTER JOIN TB_CW_EVL_EXC_TEST EXT
                ON EXC.EVL_ID = EXT.EVL_ID
               AND EXC.OBJECT_ID = EXT.OBJECT_ID
               AND EXC.CHRG_USER_ID = EXT.CHRG_USER_ID
               AND EXC.CHRG_USER_TY_CD_ID = EXT.CHRG_USER_TY_CD_ID
        WHERE E.EVL_ID = #{evlId}
            <if test='menuMngrAt == "N"'>
                AND (EXC.CHRG_USER_ID = #{suserId}
                     OR EXC.CHRG_USER_ID IN    (SELECT A.MNDT_USER_ID
                                                FROM TB_CO_MNDT A
                                                    LEFT OUTER JOIN TB_CO_MNDT_KND B
                                                        ON A.MNDT_ID = B.MNDT_ID
                                                WHERE A.AGENT_USER_ID = #{suserId}
                                                    AND CONVERT(VARCHAR,GETDATE(),112) + REPLACE(CONVERT(VARCHAR,GETDATE(),8),':','') BETWEEN A.MNDT_BGNDE+A.MNDT_BGNTM AND A.MNDT_ENDDE+A.MNDT_ENDTM
                                                    AND A.STTUS_CD_ID = 'COM_021_005'
                                                    AND B.MNDT_KND_CD_ID = 'COM_019_001'))
            </if>
            <if test='menuMngrAt == "Y"'>
                AND EXC.CHRG_USER_ID = #{chrgUserId}
            </if>
            <if test='menuMngrAt == "P"'>
                AND EXC.CHRG_USER_ID = #{chrgUserId}
            </if>
            AND M.OBJECT_ID = #{objectId}
    </select>

    <!-- 통제 평가 상세화면 -->
    <select id="evlView" resultType="CweeOperExcVO">
        SELECT  DISTINCT E.EVL_ID
              , E.EVL_TY_CD_ID
              , E.EVL_KND_CD_ID
              , M.OBJECT_ID
			<choose>
				<when test=' elcRiskUseAt != "false" '>
              , ( CASE
                       WHEN M.OBJECT_KND_CD_ID = 'CTW_001_005' THEN MB.UPPER_OBJECT_ID
                       ELSE M.UPPER_OBJECT_ID
                  END ) AS UPPER_OBJECT_ID
				</when>
				<otherwise>
		  	 , M.UPPER_OBJECT_ID AS UPPER_OBJECT_ID
				</otherwise>
			</choose>
              , M.OBJECT_KND_CD_ID
              , CASE WHEN M.OBJECT_KND_CD_ID = 'CTW_001_001' THEN 'mega'
                     WHEN M.OBJECT_KND_CD_ID = 'CTW_001_002' THEN 'mjr'
                     WHEN M.OBJECT_KND_CD_ID = 'CTW_001_003' THEN 'sub'
                     WHEN M.OBJECT_KND_CD_ID = 'CTW_001_005' THEN 'cnrl'
                END AS SRCH_PAGE
              , EXC.EVL_OPINION
              , EXC.EVL_OPINION_CD_ID
              , EXC.EVL_CNCLSN_CD_ID
              , C2.CODE_NM                                      AS EVL_CNCLSN_CD_NM
              , RD.UNITY_ID                                     AS CURT_DOC_UNITY_ID
              , RDU.UNITY_ID                                    AS UPDT_DOC_UNITY_ID
              , EXC.UNITY_ID
              , EXC.CHRG_USER_TY_CD_ID
              , EXC.CHRG_USER_ID
              , EXC.CHRG_USER_BGNDE
              , EXC.CHRG_DEPT_ID
              , EXC.CHRG_DEPT_BGNDE
              , EXC.SANCTN_ID
              , UH1.USER_NM AS CHRG_USER_NM
              , UH1.DEPT_NM AS CHRG_DEPT_NM
              , EXC.SANCTN_ID
              , EXC.STTUS_CD_ID
              , C1.CODE_NM AS STTUS_CD_NM
              , NVL2((SELECT CNRL_ID FROM TB_CW_UPRPD_ELC_CNRL_UPDT WHERE EVL_ID = E.EVL_ID AND CNRL_ID = M.OBJECT_ID), 'Y', 'N') AS CNRL_UPDT_AT
              , F.CONFM_ID
              , F.CONFM_SN
              , F.CONFM_CN
              , CONVERT ( VARCHAR , F.CONFM_DT , 23 ) + ' ' + CONVERT ( VARCHAR , F.CONFM_DT , 8) AS CONFM_DT
              , UH2.USER_NM AS CONFM_USER_NM
              , UH2.DEPT_NM AS CONFM_DEPT_NM
              , #{srchObjectKndCdId}                            AS SRCH_OBJECT_KND_CD_ID
              , CASE WHEN ISNULL(( SELECT COUNT(OBJECT_ID)
                                FROM TB_CW_UPRPD
                                WHERE EVL_ID = E.EVL_ID
                                    AND OBJECT_ID = EXC.OBJECT_ID
                              ), 0) > 0 THEN 'Y'
                ELSE 'N' END AS UPRPD_REQUST_AT
              <![CDATA[
              , (CASE WHEN E.STTUS_CD_ID = 'CTW_101_005' AND CONVERT ( VARCHAR , GETDATE() , 112 )  BETWEEN E.EVL_BGNDE AND E.EVL_ENDDE THEN 'Y'
                      ELSE 'N'
                 END) AS EXC_AT
              ]]>
              , UPD.UPRPD_CL_CD_ID
              , C3.CODE_NM              AS UPRPD_CL_CD_NM
              , UPD.ORGINL_UPRPD_CL_CD_ID
              , C5.CODE_NM              AS ORGINL_UPRPD_CL_CD_NM
              , UPD.CHANGE_RESN
              , UPD.UPRPD_TY_CD_ID
              , C4.CODE_NM              AS UPRPD_TY_CD_NM
              , UPD.UPRPD_CN
              , UPD.UPRPD_IMPRVM_PLAN
              , UPD.EXC_USER_ID
              , UPD.EXC_USER_BGNDE
              , UH3.USER_NM AS EXC_USER_NM
              , UH3.DEPT_NM AS EXC_DEPT_NM
              , CONVERT ( VARCHAR , CONVERT ( DATE , UPD.UPRPD_IMPRVM_PLAN_GOAL_DE , 112 ) , 23 ) AS UPRPD_IMPRVM_PLAN_GOAL_DE
              , UPE.EXC_SJ
              , UPE.EXC_CN
        FROM TB_CW_EVL E
            LEFT OUTER JOIN TB_CW_EVL_EXC EXC
                ON  E.EVL_ID = EXC.EVL_ID
                AND EXC.CHRG_USER_TY_CD_ID = 'CTW_105_001'
            INNER JOIN TB_CW_EVL_RCM_MAPNG M
                ON  E.EVL_ID = M.EVL_ID
                AND EXC.OBJECT_ID = M.OBJECT_ID
                AND M.OBJECT_KND_CD_ID = #{objectKndCdId}
            LEFT OUTER JOIN TB_CW_EVL_RCM_MAPNG MB
                ON M.UPPER_MAPNG_ID = MB.MAPNG_ID
            LEFT OUTER JOIN TB_CW_EVL_RCM_DOC RD
                ON  E.EVL_ID = RD.EVL_ID
                AND M.OBJECT_ID = RD.PROCS_ID
            LEFT OUTER JOIN TB_CW_EVL_RCM_DOC_UPDT RDU
                ON  E.EVL_ID = RDU.EVL_ID
                AND M.OBJECT_ID = RDU.PROCS_ID
            LEFT OUTER JOIN TB_CW_EVL_EXC_CONFM F
                ON  EXC.CONFM_ID = F.CONFM_ID
                AND F.LAST_AT = 'Y'
            LEFT OUTER JOIN TB_CO_USER_HIST UH1
                ON  EXC.CHRG_USER_ID = UH1.USER_ID
                AND EXC.CHRG_USER_BGNDE = UH1.HIST_BGNDE
            LEFT OUTER JOIN TB_CO_DEPT_HIST D
                ON  EXC.CHRG_DEPT_ID = D.DEPT_ID
                AND EXC.CHRG_DEPT_BGNDE = D.HIST_BGNDE
            LEFT OUTER JOIN TB_CO_USER_HIST UH2
                ON  F.CONFM_USER_ID = UH2.USER_ID
                AND F.CONFM_USER_BGNDE = UH2.HIST_BGNDE
            LEFT OUTER JOIN TB_CO_CODE C1
                ON  EXC.STTUS_CD_ID = C1.CODE_ID
            LEFT OUTER JOIN TB_CO_CODE C2
                ON  EXC.EVL_CNCLSN_CD_ID = C2.CODE_ID
            LEFT OUTER JOIN TB_CW_UPRPD UPD
                ON  E.EVL_ID = UPD.EVL_ID
               AND  EXC.OBJECT_ID = UPD.OBJECT_ID
               AND  EXC.CHRG_USER_ID = UPD.CHRG_USER_ID
               AND  EXC.CHRG_USER_TY_CD_ID = UPD.CHRG_USER_TY_CD_ID
            LEFT OUTER JOIN TB_CO_CODE C3
                ON  UPD.UPRPD_CL_CD_ID = C3.CODE_ID
            LEFT OUTER JOIN TB_CO_CODE C4
                ON  UPD.UPRPD_TY_CD_ID = C4.CODE_ID
            LEFT OUTER JOIN TB_CO_CODE C5
                ON  UPD.ORGINL_UPRPD_CL_CD_ID = C5.CODE_ID
            LEFT OUTER JOIN TB_CO_USER_HIST UH3
                ON  UPD.EXC_USER_ID = UH3.USER_ID
                AND UPD.EXC_USER_BGNDE = UH3.HIST_BGNDE
            LEFT OUTER JOIN TB_CW_UPRPD_EXC UPE
                ON  E.EVL_ID = UPE.EVL_ID
               AND  EXC.OBJECT_ID = UPE.OBJECT_ID

        WHERE E.EVL_ID = #{evlId}
            AND M.OBJECT_ID = #{objectId}
    </select>

	<!-- 통제 수행 결과 목록 -->
	<select id="selectTestViewList" resultType="EgovMap">
        SELECT
		    EXC.CHRG_USER_ID
		    , EXC.CHRG_USER_BGNDE
		    , UH.USER_NM AS CHRG_USER_NM
		    , UH.DEPT_ID
		    , DPT.DEPT_NM AS CHRG_DEPT_NM
		    , EXC.EVL_OPINION
		    , EXC.UNITY_ID
		    , EXT.SAMPLE_TY_CD_ID
		    , CD.CODE_NM AS SAMPLE_TY_CD_NM
		    , EXT.TOT_SAMPLE_SIZE
		    , EXT.NRMLT_SAMPLE_SIZE
		    , EXT.EXCP_SAMPLE_SIZE
		    , EXT.NA_SAMPLE_SIZE
		FROM
		    TB_CW_EVL_EXC EXC
		    LEFT OUTER JOIN TB_CO_USER_HIST UH /** 테스터 정보 */
		        ON EXC.CHRG_USER_ID = UH.USER_ID
		        AND EXC.CHRG_USER_BGNDE = UH.HIST_BGNDE
		    LEFT OUTER JOIN TB_CO_DEPT DPT /** 테스터 부서 정보 */
		        ON UH.DEPT_ID = DPT.DEPT_ID
		    LEFT OUTER JOIN TB_CW_EVL_EXC_TEST EXT /** 테스트 결과(표본 결과) */
		        ON EXC.EVL_ID = EXT.EVL_ID
		       AND EXC.OBJECT_ID = EXT.OBJECT_ID
		       AND EXC.CHRG_USER_ID = EXT.CHRG_USER_ID
		    LEFT OUTER JOIN TB_CO_CODE CD /** 표본 추출 타입 */
		        ON EXT.SAMPLE_TY_CD_ID = CD.CODE_ID
        WHERE
            EXC.CHRG_USER_TY_CD_ID = 'CTW_105_002' /** 테스터만 */
            AND EXC.EVL_ID = #{evlId}
            AND EXC.OBJECT_ID = #{objectId}
		<if test=' chrgUserId != null and chrgUserId != "" '>
			AND EXC.CHRG_USER_ID = #{chrgUserId}
		</if>
	</select>

</mapper>
